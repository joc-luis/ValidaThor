using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
namespace ValidaThor
{
    internal class Translate
    {
        private List<Lang> Langs { get; set; }
        public Translate()
        {
            this.Langs = new List<Lang>();
            var af = new Lang();
            af.Name = "af";
            af.Errors.Add(new string[] { "accepted", "Die :attribute moet aanvaar word." });
            af.Errors.Add(new string[] { "active_url", "Die :attribute is nie \n geldig URL." });
            af.Errors.Add(new string[] { "after", "Die :attribute moet \n datum wees na :date." });
            af.Errors.Add(new string[] { "after_or_equal", "Die :attribute moet \n datum wees na of gelyk aan :date." });
            af.Errors.Add(new string[] { "alpha", "Die :attribute mag slegs letters bevat." });
            af.Errors.Add(new string[] { "alpha_dash", "Die :attribute mag slegs letters, syfers, strepies en onderstrepe bevat." });
            af.Errors.Add(new string[] { "alpha_num", "Die :attribute mag slegs letters en syfers bevat." });
            af.Errors.Add(new string[] { "before", "Die :attribute moet datum voor :date wees." });
            af.Errors.Add(new string[] { "before_or_equal", "Die :attribute Moet datum voor of gelyk aan :date wees." });
            af.Errors.Add(new string[] { "between_list", "Die :attribute moet tussen :min en :max items hê." });
            af.Errors.Add(new string[] { "between_numeric", "Die :attribute moet tussen :min en :max wees." });
            af.Errors.Add(new string[] { "between", "Die :attribute moet tussen :min en :max karakters wees." });
            af.Errors.Add(new string[] { "boolean", "Die :attribute veld moet waar of onwaar wees." });
            af.Errors.Add(new string[] { "confirmed", "Die :attribute bevestiging stem nie ooreen nie." });
            af.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            af.Errors.Add(new string[] { "different", "Die :attribute en :other moet anders wees." });
            af.Errors.Add(new string[] { "email", "Die :attribute moet geldige epos adres wees." });
            af.Errors.Add(new string[] { "ends_with", "Die :attribute moet eindig met een van die volgende: :values." });
            af.Errors.Add(new string[] { "gt_list", "Die :attribute moet meer hê as :value items." });
            af.Errors.Add(new string[] { "gt_numeric", "Die :attribute moet groter wees as :value." });
            af.Errors.Add(new string[] { "gt", "Die :attribute moet groter wees as :value karakters." });
            af.Errors.Add(new string[] { "gte_list", "Die :attribute moet :value items hê of meer." });
            af.Errors.Add(new string[] { "gte_numeric", "Die :attribute moet groter wees of gelyk wees aan :value." });
            af.Errors.Add(new string[] { "gte", "Die :attribute moet groter wees as of gelyk wees :value characters." });
            af.Errors.Add(new string[] { "in", "Die geselketeerde :attribute is ongeldig." });
            af.Errors.Add(new string[] { "integer", "Die :attribute moet \n getal wees." });
            af.Errors.Add(new string[] { "ip", "Die :attribute moet geldige IP adres wees." });
            af.Errors.Add(new string[] { "ipv4", "Die :attribute moet geldige IPv4 address wees." });
            af.Errors.Add(new string[] { "ipv6", "Die :attribute moet geldige IPv6 address wees." });
            af.Errors.Add(new string[] { "json", "Die :attribute moet geldige JSON string wees." });
            af.Errors.Add(new string[] { "lt_list", "Die :attribute moet minder as wees :value items." });
            af.Errors.Add(new string[] { "lt_numeric", "Die :attribute moet minder as wees :value." });
            af.Errors.Add(new string[] { "lt", "Die :attribute moet minder as wees than :value karakters." });
            af.Errors.Add(new string[] { "lte_list", "Die :attribute moet nie meer as :value items wees." });
            af.Errors.Add(new string[] { "lte_numeric", "Die :attribute moet kleiner of gelyk wees aan :value." });
            af.Errors.Add(new string[] { "lte", "Die :attribute moet kleiner of gelyk wees aan :value karakters." });
            af.Errors.Add(new string[] { "max_list", "Die :attribute mag nie groter as :max items wees." });
            af.Errors.Add(new string[] { "max_numeric", "Die :attribute mag nie groter as :max wees." });
            af.Errors.Add(new string[] { "max", "Die :attribute mag nie groter as :max karakters wees." });
            af.Errors.Add(new string[] { "mimes", "Die :attribute moet \n tipe lêer wees: :values." });
            af.Errors.Add(new string[] { "min_list", "Die :attribute moet ten minste :min items wees." });
            af.Errors.Add(new string[] { "min_numeric", "Die :attribute moet ten minste :min wees." });
            af.Errors.Add(new string[] { "min", "Die :attribute moet ten minste :min karakters wees." });
            af.Errors.Add(new string[] { "not_in", "Die geselketeerde :attribute is ongeldig." });
            af.Errors.Add(new string[] { "not_regex", "Die :attribute formaat is ongeldig." });
            af.Errors.Add(new string[] { "numeric", "Die :attribute moet \n syfer wees." });
            af.Errors.Add(new string[] { "password", "Die wagwoord is verkeerd." });
            af.Errors.Add(new string[] { "regex", "Die :attribute formaat is ongeldig." });
            af.Errors.Add(new string[] { "required", "Die :attribute veld is verpligtend." });
            af.Errors.Add(new string[] { "same", "Die :attribute en :other moet ooreenstem." });
            af.Errors.Add(new string[] { "size_list", "Die :attribute moet :size items bevat." });
            af.Errors.Add(new string[] { "size_numeric", "Die :attribute moet :size wees." });
            af.Errors.Add(new string[] { "size", "Die :attribute moet:size karakters wees." });
            af.Errors.Add(new string[] { "starts_with", "Die :attribute moet met een van die volgende begin: :values." });
            af.Errors.Add(new string[] { "url", "Die :attribute formaat is ongeldig." });
            af.Errors.Add(new string[] { "uuid", "Die :attribute moet \n geldige UUID wees." });
            this.Langs.Add(af);
            var ar = new Lang();
            ar.Name = "ar";
            ar.Errors.Add(new string[] { "accepted", "يجب قبول :attribute." });
            ar.Errors.Add(new string[] { "active_url", "حقل :attribute لا يُمثّل رابطًا صحيحًا." });
            ar.Errors.Add(new string[] { "after", "يجب على حقل :attribute أن يكون تاريخًا لاحقًا للتاريخ :date." });
            ar.Errors.Add(new string[] { "after_or_equal", "حقل :attribute يجب أن يكون تاريخاً لاحقاً أو مطابقاً للتاريخ :date." });
            ar.Errors.Add(new string[] { "alpha", "يجب أن لا يحتوي حقل :attribute سوى على حروف." });
            ar.Errors.Add(new string[] { "alpha_dash", "يجب أن لا يحتوي حقل :attribute سوى على حروف، أرقام ومطّات." });
            ar.Errors.Add(new string[] { "alpha_num", "يجب أن يحتوي حقل :attribute على حروفٍ وأرقامٍ فقط." });
            ar.Errors.Add(new string[] { "before", "يجب على حقل :attribute أن يكون تاريخًا سابقًا للتاريخ :date." });
            ar.Errors.Add(new string[] { "before_or_equal", "حقل :attribute يجب أن يكون تاريخا سابقا أو مطابقا للتاريخ :date." });
            ar.Errors.Add(new string[] { "between_list", "يجب أن يحتوي حقل :attribute على عدد من العناصر بين :min و :max." });
            ar.Errors.Add(new string[] { "between_numeric", "يجب أن تكون قيمة حقل :attribute بين :min و :max." });
            ar.Errors.Add(new string[] { "between", "يجب أن يكون عدد حروف نّص حقل :attribute بين :min و :max." });
            ar.Errors.Add(new string[] { "boolean", "يجب أن تكون قيمة حقل :attribute إما true أو false ." });
            ar.Errors.Add(new string[] { "confirmed", "حقل التأكيد غير مُطابق للحقل :attribute." });
            ar.Errors.Add(new string[] { "declined", "يجب رفض :attribute." });
            ar.Errors.Add(new string[] { "different", "يجب أن يكون الحقلان :attribute و :other مُختلفين." });
            ar.Errors.Add(new string[] { "email", "يجب أن يكون حقل :attribute عنوان بريد إلكتروني صحيح البُنية." });
            ar.Errors.Add(new string[] { "ends_with", "يجب أن ينتهي حقل :attribute بأحد القيم التالية: :values," });
            ar.Errors.Add(new string[] { "gt_list", "يجب أن يحتوي حقل :attribute على أكثر من :value عناصر/عنصر." });
            ar.Errors.Add(new string[] { "gt_numeric", "يجب أن تكون قيمة حقل :attribute أكبر من :value." });
            ar.Errors.Add(new string[] { "gt", "يجب أن يكون طول نّص حقل :attribute أكثر من :value حروفٍ/حرفًا." });
            ar.Errors.Add(new string[] { "gte_list", "يجب أن يحتوي حقل :attribute على الأقل على :value عُنصرًا/عناصر." });
            ar.Errors.Add(new string[] { "gte_numeric", "يجب أن تكون قيمة حقل :attribute مساوية أو أكبر من :value." });
            ar.Errors.Add(new string[] { "gte", "يجب أن يكون طول نص حقل :attribute على الأقل :value حروفٍ/حرفًا." });
            ar.Errors.Add(new string[] { "in", "حقل :attribute غير موجود." });
            ar.Errors.Add(new string[] { "integer", "يجب أن يكون حقل :attribute عددًا صحيحًا." });
            ar.Errors.Add(new string[] { "ip", "يجب أن يكون حقل :attribute عنوان IP صحيحًا." });
            ar.Errors.Add(new string[] { "ipv4", "يجب أن يكون حقل :attribute عنوان IPv4 صحيحًا." });
            ar.Errors.Add(new string[] { "ipv6", "يجب أن يكون حقل :attribute عنوان IPv6 صحيحًا." });
            ar.Errors.Add(new string[] { "json", "يجب أن يكون حقل :attribute نصًا من نوع JSON." });
            ar.Errors.Add(new string[] { "lt_list", "يجب أن يحتوي حقل :attribute على أقل من :value عناصر/عنصر." });
            ar.Errors.Add(new string[] { "lt_numeric", "يجب أن تكون قيمة حقل :attribute أصغر من :value." });
            ar.Errors.Add(new string[] { "lt", "يجب أن يكون طول نّص حقل :attribute أقل من :value حروفٍ/حرفًا." });
            ar.Errors.Add(new string[] { "lte_list", "يجب أن لا يحتوي حقل :attribute على أكثر من :value عناصر/عنصر." });
            ar.Errors.Add(new string[] { "lte_numeric", "يجب أن تكون قيمة حقل :attribute مساوية أو أصغر من :value." });
            ar.Errors.Add(new string[] { "lte", "يجب أن لا يتجاوز طول نّص حقل :attribute :value حروفٍ/حرفًا." });
            ar.Errors.Add(new string[] { "max_list", "يجب أن لا يحتوي حقل :attribute على أكثر من :max عناصر/عنصر." });
            ar.Errors.Add(new string[] { "max_numeric", "يجب أن تكون قيمة حقل :attribute مساوية أو أصغر من :max." });
            ar.Errors.Add(new string[] { "max", "يجب أن لا يتجاوز طول نّص حقل :attribute :max حروفٍ/حرفًا." });
            ar.Errors.Add(new string[] { "mimes", "يجب أن يكون ملفًا من نوع : :values." });
            ar.Errors.Add(new string[] { "min_list", "يجب أن يحتوي حقل :attribute على الأقل على :min عُنصرًا/عناصر." });
            ar.Errors.Add(new string[] { "min_numeric", "يجب أن تكون قيمة حقل :attribute مساوية أو أكبر من :min." });
            ar.Errors.Add(new string[] { "min", "يجب أن يكون طول نص حقل :attribute على الأقل :min حروفٍ/حرفًا." });
            ar.Errors.Add(new string[] { "not_in", "عنصر الحقل :attribute غير صحيح." });
            ar.Errors.Add(new string[] { "not_regex", "صيغة حقل :attribute غير صحيحة." });
            ar.Errors.Add(new string[] { "numeric", "يجب على حقل :attribute أن يكون رقمًا." });
            ar.Errors.Add(new string[] { "password", "كلمة المرور غير صحيحة." });
            ar.Errors.Add(new string[] { "regex", "صيغة حقل :attribute .غير صحيحة." });
            ar.Errors.Add(new string[] { "required", "حقل :attribute مطلوب." });
            ar.Errors.Add(new string[] { "same", "يجب أن يتطابق حقل :attribute مع :other." });
            ar.Errors.Add(new string[] { "size_list", "يجب أن يحتوي حقل :attribute على :size عنصرٍ/عناصر بالضبط." });
            ar.Errors.Add(new string[] { "size_numeric", "يجب أن تكون قيمة حقل :attribute مساوية لـ :size." });
            ar.Errors.Add(new string[] { "size", "يجب أن يحتوي نص حقل :attribute على :size حروفٍ/حرفًا بالضبط." });
            ar.Errors.Add(new string[] { "starts_with", "يجب أن يبدأ حقل :attribute بأحد القيم التالية: :values," });
            ar.Errors.Add(new string[] { "url", "صيغة رابط حقل :attribute غير صحيحة." });
            ar.Errors.Add(new string[] { "uuid", "حقل :attribute يجب أن يكون بصيغة UUID سليمة." });
            this.Langs.Add(ar);
            var az = new Lang();
            az.Name = "az";
            az.Errors.Add(new string[] { "accepted", ":attribute qəbul edilməlidir," });
            az.Errors.Add(new string[] { "active_url", ":attribute doğru URL deyil," });
            az.Errors.Add(new string[] { "after", ":attribute :date tarixindən sonra olmalıdır," });
            az.Errors.Add(new string[] { "after_or_equal", ":attribute :date tarixi ilə eyni və ya sonra olmalıdır," });
            az.Errors.Add(new string[] { "alpha", ":attribute yalnız hərflərdən ibarət ola bilər," });
            az.Errors.Add(new string[] { "alpha_dash", ":attribute yalnız hərf, rəqəm və tire simvolundan ibarət ola bilər," });
            az.Errors.Add(new string[] { "alpha_num", ":attribute yalnız hərf və rəqəmlərdən ibarət ola bilər," });
            az.Errors.Add(new string[] { "before", ":attribute :date tarixindən əvvəl olmalıdır," });
            az.Errors.Add(new string[] { "before_or_equal", ":attribute :date tarixindən əvvəl və ya bərabər olmalıdır," });
            az.Errors.Add(new string[] { "between_list", ":attribute :min ilə :max intervalında hissədən ibarət olmalıdır," });
            az.Errors.Add(new string[] { "between_numeric", ":attribute :min ilə :max arasında olmalıdır," });
            az.Errors.Add(new string[] { "between", ":attribute :min ilə :max simvolu intervalında olmalıdır," });
            az.Errors.Add(new string[] { "boolean", ":attribute doğru və ya yanlış ola bilər," });
            az.Errors.Add(new string[] { "confirmed", ":attribute doğrulanması yanlışdır," });
            az.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            az.Errors.Add(new string[] { "different", ":attribute və :other fərqli olmalıdır," });
            az.Errors.Add(new string[] { "email", ":attribute doğru email formatında deyil," });
            az.Errors.Add(new string[] { "ends_with", ":attribute nömrəsi aşağıdakılardan biri ilə bitməlidir: :values." });
            az.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            az.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            az.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            az.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            az.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            az.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            az.Errors.Add(new string[] { "in", "seçilmiş :attribute yanlışdır," });
            az.Errors.Add(new string[] { "integer", ":attribute tam ədəd olmalıdır," });
            az.Errors.Add(new string[] { "ip", ":attribute İP adres formatında olmalıdır," });
            az.Errors.Add(new string[] { "ipv4", ":attribute İPv4 adres formatında olmalıdır," });
            az.Errors.Add(new string[] { "ipv6", ":attribute İPv6 adres formatında olmalıdır," });
            az.Errors.Add(new string[] { "json", ":attribute JSON formatında olmalıdır," });
            az.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            az.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            az.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            az.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            az.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            az.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            az.Errors.Add(new string[] { "max_list", ":attribute maksimum :max hədd dən ibarət ola bilər," });
            az.Errors.Add(new string[] { "max_numeric", ":attribute maksiumum :max rəqəmdən ibarət ola bilər," });
            az.Errors.Add(new string[] { "max", ":attribute maksimum :max simvoldan ibarət ola bilər," });
            az.Errors.Add(new string[] { "mimes", ":attribute :values tipində fayl olmalıdır," });
            az.Errors.Add(new string[] { "min_list", ":attribute minimum :min hədddən ibarət ola bilər," });
            az.Errors.Add(new string[] { "min_numeric", ":attribute minimum :min rəqəmdən ibarət ola bilər," });
            az.Errors.Add(new string[] { "min", ":attribute minimum :min simvoldan ibarət ola bilər," });
            az.Errors.Add(new string[] { "not_in", "seçilmiş :attribute yanlışdır," });
            az.Errors.Add(new string[] { "not_regex", "Format :attribute qəbuledilməzdir." });
            az.Errors.Add(new string[] { "numeric", ":attribute rəqəmlərdən ibarət olmalıdır," });
            az.Errors.Add(new string[] { "password", "Şifrə səhvdir." });
            az.Errors.Add(new string[] { "regex", ":attribute formatı yanlışdır," });
            az.Errors.Add(new string[] { "required", ":attribute mütləqdir," });
            az.Errors.Add(new string[] { "same", ":attribute və :other eyni olmalıdır," });
            az.Errors.Add(new string[] { "size_list", ":attribute :size hədddən ibarət olmalıdır," });
            az.Errors.Add(new string[] { "size_numeric", ":attribute :size ölçüsündə olmalıdır," });
            az.Errors.Add(new string[] { "size", ":attribute :size simvoldan ibarət olmalıdır," });
            az.Errors.Add(new string[] { "starts_with", ":attribute aşağıdakılardan biri ilə başlamalıdır: :values." });
            az.Errors.Add(new string[] { "url", ":attribute formatı yanlışdır," });
            az.Errors.Add(new string[] { "uuid", ":attribute etibarlı UUID olmalıdır." });
            this.Langs.Add(az);
            var be = new Lang();
            be.Name = "be";
            be.Errors.Add(new string[] { "accepted", "Вы павінны прыняць :attribute." });
            be.Errors.Add(new string[] { "active_url", "Поле :attribute утрымлівае несапраўдны URL." });
            be.Errors.Add(new string[] { "after", "У полі :attribute павінна быць дата пасля :date." });
            be.Errors.Add(new string[] { "after_or_equal", ":attribute павінна быць датай пасля або роўнай :date." });
            be.Errors.Add(new string[] { "alpha", "Поле :attribute можа мець толькі літары." });
            be.Errors.Add(new string[] { "alpha_dash", "Поле :attribute можа мець толькі літары, лічбы і злучок." });
            be.Errors.Add(new string[] { "alpha_num", "Поле :attribute можа мець толькі літары і лічбы." });
            be.Errors.Add(new string[] { "before", "У полі :attribute павінна быць дата да :date." });
            be.Errors.Add(new string[] { "before_or_equal", ":attribute павінна быць датай да або роўнай :date." });
            be.Errors.Add(new string[] { "between_list", "Колькасць элементаў у поле :attribute павінна быць паміж :min і :max." });
            be.Errors.Add(new string[] { "between_numeric", "Поле :attribute павінна быць паміж :min і :max." });
            be.Errors.Add(new string[] { "between", "Колькасць сiмвалаў у поле :attribute павінна быць паміж :min і :max." });
            be.Errors.Add(new string[] { "boolean", "Поле :attribute павінна мець значэнне лагічнага тыпу." });
            be.Errors.Add(new string[] { "confirmed", "Поле :attribute не супадае з пацвярджэннем." });
            be.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            be.Errors.Add(new string[] { "different", "Палі :attribute і :other павінны адрознівацца." });
            be.Errors.Add(new string[] { "email", "Поле :attribute павінна быць сапраўдным электронным адрасам." });
            be.Errors.Add(new string[] { "ends_with", ":attribute павінен заканчвацца адным з наступных: :values." });
            be.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            be.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            be.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            be.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            be.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            be.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            be.Errors.Add(new string[] { "in", "Выбранае значэнне для :attribute памылкова." });
            be.Errors.Add(new string[] { "integer", "Поле :attribute павінна быць цэлым лікам." });
            be.Errors.Add(new string[] { "ip", "Поле :attribute дпавінна быць сапраўдным IP-адрасам." });
            be.Errors.Add(new string[] { "ipv4", ":attribute павінен быць сапраўдным IPv4-адрасам." });
            be.Errors.Add(new string[] { "ipv6", ":attribute павінен быць сапраўдным IPv6-адрасам." });
            be.Errors.Add(new string[] { "json", "Поле :attribute павінна быць JSON радком." });
            be.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            be.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            be.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            be.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            be.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            be.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            be.Errors.Add(new string[] { "max_list", "Колькасць элементаў у поле :attribute не можа перавышаць :max." });
            be.Errors.Add(new string[] { "max_numeric", "Поле :attribute не можа быць больш :max." });
            be.Errors.Add(new string[] { "max", "Колькасць сiмвалаў у поле :attribute не можа перавышаць :max." });
            be.Errors.Add(new string[] { "mimes", "Поле :attribute павінна быць файлам аднаго з наступных тыпаў: :values." });
            be.Errors.Add(new string[] { "min_list", "Колькасць элементаў у поле :attribute павінна быць не менш :min." });
            be.Errors.Add(new string[] { "min_numeric", "Поле :attribute павінна быць не менш :min." });
            be.Errors.Add(new string[] { "min", "Колькасць сiмвалаў у поле :attribute павінна быць не менш :min." });
            be.Errors.Add(new string[] { "not_in", "Выбранае значэнне для :attribute памылкова." });
            be.Errors.Add(new string[] { "not_regex", "Фармат :attribute недапушчальны." });
            be.Errors.Add(new string[] { "numeric", "Поле :attribute павінна быць лікам." });
            be.Errors.Add(new string[] { "password", "Пароль няправільны." });
            be.Errors.Add(new string[] { "regex", "Поле :attribute мае памылковы фармат." });
            be.Errors.Add(new string[] { "required", "Поле :attribute абавязкова для запаўнення." });
            be.Errors.Add(new string[] { "same", "Значэнне :attribute павінна супадаць з :other." });
            be.Errors.Add(new string[] { "size_list", "Колькасць элементаў у поле :attribute павінна быць :size." });
            be.Errors.Add(new string[] { "size_numeric", "Поле :attribute павінна быць :size." });
            be.Errors.Add(new string[] { "size", "Колькасць сiмвалаў у поле :attribute павінна быць :size." });
            be.Errors.Add(new string[] { "starts_with", ":attribute павінен пачынацца з аднаго з наступных значэнняў: :values." });
            be.Errors.Add(new string[] { "url", "Поле :attribute мае памылковы фармат." });
            be.Errors.Add(new string[] { "uuid", ":attribute павінен быць сапраўдным UUID." });
            this.Langs.Add(be);
            var bg = new Lang();
            bg.Name = "bg";
            bg.Errors.Add(new string[] { "accepted", "Трябва да приемете :attribute." });
            bg.Errors.Add(new string[] { "active_url", "Полето :attribute не е валиден URL адрес." });
            bg.Errors.Add(new string[] { "after", "Полето :attribute трябва да бъде дата след :date." });
            bg.Errors.Add(new string[] { "after_or_equal", "Полето :attribute трябва да бъде дата след или равна на :date." });
            bg.Errors.Add(new string[] { "alpha", "Полето :attribute трябва да съдържа само букви." });
            bg.Errors.Add(new string[] { "alpha_dash", "Полето :attribute трябва да съдържа само букви, цифри, долна черта и тире." });
            bg.Errors.Add(new string[] { "alpha_num", "Полето :attribute трябва да съдържа само букви и цифри." });
            bg.Errors.Add(new string[] { "before", "Полето :attribute трябва да бъде дата преди :date." });
            bg.Errors.Add(new string[] { "before_or_equal", "Полето :attribute трябва да бъде дата преди или равна на :date." });
            bg.Errors.Add(new string[] { "between_list", "Полето :attribute трябва да има между :min - :max елемента." });
            bg.Errors.Add(new string[] { "between_numeric", "Полето :attribute трябва да бъде между :min и :max." });
            bg.Errors.Add(new string[] { "between", "Полето :attribute трябва да бъде между :min и :max знака." });
            bg.Errors.Add(new string[] { "boolean", "Полето :attribute трябва да съдържа Да или Не," });
            bg.Errors.Add(new string[] { "confirmed", "Полето :attribute не е потвърдено." });
            bg.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            bg.Errors.Add(new string[] { "different", "Полетата :attribute и :other трябва да са различни." });
            bg.Errors.Add(new string[] { "email", "Полето :attribute е в невалиден формат." });
            bg.Errors.Add(new string[] { "ends_with", ":attribute трябва да завършва с една от следните стойности: :values." });
            bg.Errors.Add(new string[] { "gt_list", ":attribute трябва да разполага с повече от :value елемента." });
            bg.Errors.Add(new string[] { "gt_numeric", ":attribute трябва да бъде по-голяма от :value." });
            bg.Errors.Add(new string[] { "gt", ":attribute трябва да бъде по-голяма от :value знака." });
            bg.Errors.Add(new string[] { "gte_list", ":attribute трябва да разполага с :value елемента или повече." });
            bg.Errors.Add(new string[] { "gte_numeric", ":attribute трябва да бъде по-голяма от или равна на :value." });
            bg.Errors.Add(new string[] { "gte", ":attribute трябва да бъде по-голяма от или равна на :value знака." });
            bg.Errors.Add(new string[] { "in", "Избраното поле :attribute е невалидно." });
            bg.Errors.Add(new string[] { "integer", "Полето :attribute трябва да бъде цяло число." });
            bg.Errors.Add(new string[] { "ip", "Полето :attribute трябва да бъде IP адрес." });
            bg.Errors.Add(new string[] { "ipv4", "Полето :attribute трябва да бъде IPv4 адрес." });
            bg.Errors.Add(new string[] { "ipv6", "Полето :attribute трябва да бъде IPv6 адрес." });
            bg.Errors.Add(new string[] { "json", "Полето :attribute трябва да бъде JSON низ." });
            bg.Errors.Add(new string[] { "lt_list", ":attribute трябва да разполага с по-малко от :value елемента." });
            bg.Errors.Add(new string[] { "lt_numeric", ":attribute трябва да бъде по-малка от :value." });
            bg.Errors.Add(new string[] { "lt", ":attribute трябва да бъде по-малка от :value знака." });
            bg.Errors.Add(new string[] { "lte_list", ":attribute не трябва да разполага с повече от :value елемента." });
            bg.Errors.Add(new string[] { "lte_numeric", ":attribute трябва да бъде по-малка от или равна на :value." });
            bg.Errors.Add(new string[] { "lte", ":attribute трябва да бъде по-малка от или равна на :value знака." });
            bg.Errors.Add(new string[] { "max_list", "Полето :attribute трябва да има по-малко от :max елемента." });
            bg.Errors.Add(new string[] { "max_numeric", "Полето :attribute трябва да бъде по-малко от :max." });
            bg.Errors.Add(new string[] { "max", "Полето :attribute трябва да бъде по-малко от :max знака." });
            bg.Errors.Add(new string[] { "mimes", "Полето :attribute трябва да бъде файл от тип: :values." });
            bg.Errors.Add(new string[] { "min_list", "Полето :attribute трябва има минимум :min елемента." });
            bg.Errors.Add(new string[] { "min_numeric", "Полето :attribute трябва да бъде минимум :min." });
            bg.Errors.Add(new string[] { "min", "Полето :attribute трябва да бъде минимум :min знака." });
            bg.Errors.Add(new string[] { "not_in", "Избраното поле :attribute е невалидно." });
            bg.Errors.Add(new string[] { "not_regex", "Форматът на :attribute е невалиден." });
            bg.Errors.Add(new string[] { "numeric", "Полето :attribute трябва да бъде число." });
            bg.Errors.Add(new string[] { "password", "Паролата е грешна." });
            bg.Errors.Add(new string[] { "regex", "Полето :attribute е в невалиден формат." });
            bg.Errors.Add(new string[] { "required", "Полето :attribute е задължително." });
            bg.Errors.Add(new string[] { "same", "Полетата :attribute и :other трябва да съвпадат." });
            bg.Errors.Add(new string[] { "size_list", "Полето :attribute трябва да има :size елемента." });
            bg.Errors.Add(new string[] { "size_numeric", "Полето :attribute трябва да бъде :size." });
            bg.Errors.Add(new string[] { "size", "Полето :attribute трябва да бъде :size знака." });
            bg.Errors.Add(new string[] { "starts_with", ":attribute трябва да започва с едно от следните: :values." });
            bg.Errors.Add(new string[] { "url", "Полето :attribute е в невалиден формат." });
            bg.Errors.Add(new string[] { "uuid", ":attribute трябва да бъде валиден UUID." });
            this.Langs.Add(bg);
            var bn = new Lang();
            bn.Name = "bn";
            bn.Errors.Add(new string[] { "accepted", ":attribute গ্রহণ করা আবশ্যক।," });
            bn.Errors.Add(new string[] { "active_url", "এই :attribute একটি বৈধ URL নয়।," });
            bn.Errors.Add(new string[] { "after", ":date অবশ্যই :attribute এর পরের একটি তারিখ হতে হবে।," });
            bn.Errors.Add(new string[] { "after_or_equal", ":attribute টি অবশ্যই :date এর সাথে মিল অথবা এর পরের একটি তারিখ হতে হবে।," });
            bn.Errors.Add(new string[] { "alpha", ":attribute শুধুমাত্র অক্ষর থাকতে পারে।," });
            bn.Errors.Add(new string[] { "alpha_dash", ":attribute শুধুমাত্র অক্ষর, সংখ্যা, এবং ড্যাশ থাকতে পারে।," });
            bn.Errors.Add(new string[] { "alpha_num", ":attribute শুধুমাত্র বর্ণ ও সংখ্যা থাকতে পারে।," });
            bn.Errors.Add(new string[] { "before", ":date অবশ্যই :attribute এর আগের একটি তারিখ হতে হবে।," });
            bn.Errors.Add(new string[] { "before_or_equal", ":attribute টি অবশ্যই :date এর সাথে মিল অথবা এর আগের একটি তারিখ হতে হবে।," });
            bn.Errors.Add(new string[] { "between_list", ":min এবং :max আইটেম :attribute মধ্যে হতে হবে।," });
            bn.Errors.Add(new string[] { "between_numeric", ":min এবং :max :attribute মধ্যে হতে হবে।," });
            bn.Errors.Add(new string[] { "between", ":min এবং :max অক্ষর :attribute মধ্যে হতে হবে।," });
            bn.Errors.Add(new string[] { "boolean", ":attribute স্থানে  সত্য বা মিথ্যা হতে হবে।," });
            bn.Errors.Add(new string[] { "confirmed", ":attribute নিশ্চিতকরণ এর  সাথে মিলছে না।," });
            bn.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            bn.Errors.Add(new string[] { "different", ":attribute এবং :other আলাদা হতে হবে।," });
            bn.Errors.Add(new string[] { "email", ":attribute একটি বৈধ ইমেইল ঠিকানা হতে হবে।," });
            bn.Errors.Add(new string[] { "ends_with", ":attribute নিম্নলিখিত এক সঙ্গে শেষ করতে হবে: :values." });
            bn.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            bn.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            bn.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            bn.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            bn.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            bn.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            bn.Errors.Add(new string[] { "in", "নির্বাচিত :attribute টি অবৈধ।," });
            bn.Errors.Add(new string[] { "integer", ":attribute একটি পূর্ণসংখ্যা হতে হবে।," });
            bn.Errors.Add(new string[] { "ip", ":attribute একটি বৈধ  IP address হতে হবে।," });
            bn.Errors.Add(new string[] { "ipv4", ":attribute টি একটি বৈধ IPv4 address হতে হবে।," });
            bn.Errors.Add(new string[] { "ipv6", ":attribute টি একটি বৈধ IPv6 address হতে হবে।," });
            bn.Errors.Add(new string[] { "json", ":attribute একটি বৈধ JSON স্ট্রিং হতে হবে।," });
            bn.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            bn.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            bn.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            bn.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            bn.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            bn.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            bn.Errors.Add(new string[] { "max_list", ":attribute এর মান :max টি উপাদানের চেয়ে বড় হতে পারেনা।," });
            bn.Errors.Add(new string[] { "max_numeric", ":attribute এর মান :max এর চেয়ে বড় হতে পারেনা।," });
            bn.Errors.Add(new string[] { "max", ":attribute এর মান :max অক্ষর এর চেয়ে বড় হতে পারেনা।," });
            bn.Errors.Add(new string[] { "mimes", ":attribute এর একটি ফাইল হতে হবে: :values।," });
            bn.Errors.Add(new string[] { "min_list", ":attribute অবশ্যই :min উপাদানের চেয়ে ছোট হতে হবে।," });
            bn.Errors.Add(new string[] { "min_numeric", ":attribute অবশ্যই :min এর চেয়ে ছোট হতে হবে।," });
            bn.Errors.Add(new string[] { "min", ":attribute অবশ্যই :min অক্ষর এর চেয়ে ছোট হতে হবে।," });
            bn.Errors.Add(new string[] { "not_in", "নির্বাচিত :attribute অবৈধ।," });
            bn.Errors.Add(new string[] { "not_regex", ":attribute বিন্যাস অবৈধ." });
            bn.Errors.Add(new string[] { "numeric", ":attribute একটি সংখ্যা হতে হবে।," });
            bn.Errors.Add(new string[] { "password", "পাসওয়ার্ড ভুল." });
            bn.Errors.Add(new string[] { "regex", ":attribute বিন্যাস অবৈধ।," });
            bn.Errors.Add(new string[] { "required", ":attribute স্থানটি পূরণ করা বাধ্যতামূলক।," });
            bn.Errors.Add(new string[] { "same", ":attribute এবং :other অবশ্যই মিলতে হবে।," });
            bn.Errors.Add(new string[] { "size_list", ":attribute অবশ্যই :size আইটেম হতে হবে।," });
            bn.Errors.Add(new string[] { "size_numeric", ":attribute অবশ্যই :size হতে হবে।," });
            bn.Errors.Add(new string[] { "size", ":attribute অবশ্যই :size অক্ষর হতে হবে।," });
            bn.Errors.Add(new string[] { "starts_with", "দী :attribute নিম্নলিখিত এক সঙ্গে শুরু হবে: :values." });
            bn.Errors.Add(new string[] { "url", ":attribute বিন্যাস অবৈধ।," });
            bn.Errors.Add(new string[] { "uuid", "দী :attribute একটি বৈধ ইউইউআইডি হতে হবে." });
            this.Langs.Add(bn);
            var bs = new Lang();
            bs.Name = "bs";
            bs.Errors.Add(new string[] { "accepted", "Polje :attribute mora biti prihvaćeno." });
            bs.Errors.Add(new string[] { "active_url", "Polje :attribute nije validan URL." });
            bs.Errors.Add(new string[] { "after", "Polje :attribute mora biti datum nakon :date." });
            bs.Errors.Add(new string[] { "after_or_equal", "Polje :attribute mora biti datum nakon ili jednak :date." });
            bs.Errors.Add(new string[] { "alpha", "Polje :attribute može sadržati samo slova." });
            bs.Errors.Add(new string[] { "alpha_dash", "Polje :attribute može sadržati samo slova, brojeve i povlake." });
            bs.Errors.Add(new string[] { "alpha_num", "Polje :attribute može sadržati samo slova i brojeve." });
            bs.Errors.Add(new string[] { "before", "Polje :attribute mora biti datum prije :date." });
            bs.Errors.Add(new string[] { "before_or_equal", "Polje :attribute mora biti datum prije ili jednak :date." });
            bs.Errors.Add(new string[] { "between_list", "Polje :attribute mora sadržati između :min i :max stavki." });
            bs.Errors.Add(new string[] { "between_numeric", "Polje :attribute mora imati vrijednost između :min i :max." });
            bs.Errors.Add(new string[] { "between", "Polje :attribute mora sadržati između :min i :max znakova." });
            bs.Errors.Add(new string[] { "boolean", "Polje :attribute mora biti tačno ili netačno." });
            bs.Errors.Add(new string[] { "confirmed", "Potvrda polja :attribute se ne poklapa." });
            bs.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            bs.Errors.Add(new string[] { "different", "Polja :attribute i :other moraju biti različita." });
            bs.Errors.Add(new string[] { "email", "Format polja :attribute mora biti validan e-mail." });
            bs.Errors.Add(new string[] { "ends_with", "Polje :attribute se mora završiti s jednom od sljedećih vrijednosti: :values." });
            bs.Errors.Add(new string[] { "gt_list", "Polje :attribute mora sadržati više od :value stavki." });
            bs.Errors.Add(new string[] { "gt_numeric", "Polje :attribute mora imati vrijednost veću od :value." });
            bs.Errors.Add(new string[] { "gt", "Polje :attribute mora sadržati više od :value znakova." });
            bs.Errors.Add(new string[] { "gte_list", "Polje :attribute mora sadržati :value stavki ili više." });
            bs.Errors.Add(new string[] { "gte_numeric", "Polje :attribute mora imati vrijednost veću ili jednaku :value." });
            bs.Errors.Add(new string[] { "gte", "Polje :attribute mora sadržati :value znakova ili više." });
            bs.Errors.Add(new string[] { "in", "Odabrano polje :attribute nije validno." });
            bs.Errors.Add(new string[] { "integer", "Polje :attribute mora biti broj." });
            bs.Errors.Add(new string[] { "ip", "Polje :attribute mora biti validna IP adresa." });
            bs.Errors.Add(new string[] { "ipv4", "Polje :attribute mora biti validna IPv4 adresa." });
            bs.Errors.Add(new string[] { "ipv6", "Polje :attribute mora biti validna IPv6 adresa." });
            bs.Errors.Add(new string[] { "json", "Polje :attribute mora biti validan JSON string." });
            bs.Errors.Add(new string[] { "lt_list", "Polje :attribute mora sadržati manje od :value stavki." });
            bs.Errors.Add(new string[] { "lt_numeric", "Polje :attribute imati vrijednost manju od :value." });
            bs.Errors.Add(new string[] { "lt", "Polje :attribute mora sadržati manje od :value znakova." });
            bs.Errors.Add(new string[] { "lte_list", "Polje :attribute ne može sadržati više od :value stavki." });
            bs.Errors.Add(new string[] { "lte_numeric", "Polje :attribute mora imati vrijednost manju ili jednaku :value." });
            bs.Errors.Add(new string[] { "lte", "Polje :attribute ne može sadržati više od :value znakova." });
            bs.Errors.Add(new string[] { "max_list", "Polje :attribute mora sadržati manje od :max stavki." });
            bs.Errors.Add(new string[] { "max_numeric", "Polje :attribute mora imati vrijednost manju od :max." });
            bs.Errors.Add(new string[] { "max", "Polje :attribute mora sadržati manje od :max znakova." });
            bs.Errors.Add(new string[] { "mimes", "Polje :attribute mora biti fajl tipa: :values." });
            bs.Errors.Add(new string[] { "min_list", "Polje :attribute mora sadržati najmanje :min stavki." });
            bs.Errors.Add(new string[] { "min_numeric", "Polje :attribute mora biti najmanje :min." });
            bs.Errors.Add(new string[] { "min", "Polje :attribute mora sadržati najmanje :min znakova." });
            bs.Errors.Add(new string[] { "not_in", "Odabrani element polja :attribute nije validan." });
            bs.Errors.Add(new string[] { "not_regex", "Format polja :attribute nije ispravan." });
            bs.Errors.Add(new string[] { "numeric", "Polje :attribute mora biti broj." });
            bs.Errors.Add(new string[] { "password", "Lozinka nije tačna." });
            bs.Errors.Add(new string[] { "regex", "Format polja :attribute nije ispravan." });
            bs.Errors.Add(new string[] { "required", "Polje :attribute je obavezno." });
            bs.Errors.Add(new string[] { "same", "Polja :attribute i :other se moraju poklapati." });
            bs.Errors.Add(new string[] { "size_list", "Polje :attribute mora biti :size znakova." });
            bs.Errors.Add(new string[] { "size_numeric", "Polje :attribute mora biti :size." });
            bs.Errors.Add(new string[] { "size", "Polje :attribute mora biti :size znakova." });
            bs.Errors.Add(new string[] { "starts_with", "Polje :attribute mora početi s jednom od sljedećih vrijednosti: :values." });
            bs.Errors.Add(new string[] { "url", "Format polja :attribute nije validan." });
            bs.Errors.Add(new string[] { "uuid", "Polje :attribute mora biti validan UUID." });
            this.Langs.Add(bs);
            var ca = new Lang();
            ca.Name = "ca";
            ca.Errors.Add(new string[] { "accepted", ":attribute ha de ser acceptat." });
            ca.Errors.Add(new string[] { "active_url", ":attribute no és un URL vàlid." });
            ca.Errors.Add(new string[] { "after", ":attribute ha de ser una data posterior a :date." });
            ca.Errors.Add(new string[] { "after_or_equal", ":attribute ha de ser una data posterior o igual a :date." });
            ca.Errors.Add(new string[] { "alpha", ":attribute només pot contenir lletres." });
            ca.Errors.Add(new string[] { "alpha_dash", ":attribute només pot contenir lletres, números i guions." });
            ca.Errors.Add(new string[] { "alpha_num", ":attribute només pot contenir lletres i números." });
            ca.Errors.Add(new string[] { "before", ":attribute ha de ser una data anterior a :date." });
            ca.Errors.Add(new string[] { "before_or_equal", ":attribute ha de ser una data anterior o igual a :date." });
            ca.Errors.Add(new string[] { "between_list", ":attribute ha de tenir entre :min - :max ítems." });
            ca.Errors.Add(new string[] { "between_numeric", ":attribute ha destar entre :min - :max." });
            ca.Errors.Add(new string[] { "between", ":attribute ha de tenir entre :min - :max caràcters." });
            ca.Errors.Add(new string[] { "boolean", "El camp :attribute ha de ser verdader o fals," });
            ca.Errors.Add(new string[] { "confirmed", "La confirmació de :attribute no coincideix." });
            ca.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ca.Errors.Add(new string[] { "different", ":attribute i :other han de ser diferents." });
            ca.Errors.Add(new string[] { "email", ":attribute no és un e-mail vàlid," });
            ca.Errors.Add(new string[] { "ends_with", "La :attribute ha d\acabar amb una de les següents: :values." });
            ca.Errors.Add(new string[] { "gt_list", "El :attribute ha de tenir més de :value ítems." });
            ca.Errors.Add(new string[] { "gt_numeric", "El :attribute ha de ser superior a :value." });
            ca.Errors.Add(new string[] { "gt", "El :attribute ha de superar els :value caràcters." });
            ca.Errors.Add(new string[] { "gte_list", "El :attribute ha de tenir :value ítems o més." });
            ca.Errors.Add(new string[] { "gte_numeric", "El :attribute ha de ser igual o superior a :value." });
            ca.Errors.Add(new string[] { "gte", "El :attribute ha de ser igual o superior a :value caràcters." });
            ca.Errors.Add(new string[] { "in", ":attribute és invàlid," });
            ca.Errors.Add(new string[] { "integer", ":attribute ha de ser un nombre enter." });
            ca.Errors.Add(new string[] { "ip", ":attribute ha de ser una adreça IP vàlida." });
            ca.Errors.Add(new string[] { "ipv4", ":attribute ha de ser una adreça IPv4 vàlida." });
            ca.Errors.Add(new string[] { "ipv6", ":attribute ha de ser una adreça IPv6 vàlida." });
            ca.Errors.Add(new string[] { "json", "El camp :attribute ha de ser una cadena JSON vàlida." });
            ca.Errors.Add(new string[] { "lt_list", "El :attribute ha de tenir menys de :value ítems." });
            ca.Errors.Add(new string[] { "lt_numeric", "El :attribute ha de ser inferior a :value." });
            ca.Errors.Add(new string[] { "lt", "El :attribute no ha de superar els :value caràcters." });
            ca.Errors.Add(new string[] { "lte_list", "El :attribute no ha de tenir més de :value ítems." });
            ca.Errors.Add(new string[] { "lte_numeric", "El :attribute ha de ser igual o inferior a :value." });
            ca.Errors.Add(new string[] { "lte", "El :attribute ha de ser igual o inferior a :value caràcters." });
            ca.Errors.Add(new string[] { "max_list", ":attribute no pot tenir més de :max ítems." });
            ca.Errors.Add(new string[] { "max_numeric", ":attribute no pot ser més gran que :max." });
            ca.Errors.Add(new string[] { "max", ":attribute no pot ser més gran que :max caràcters." });
            ca.Errors.Add(new string[] { "mimes", ":attribute ha de ser un arxiu amb format: :values." });
            ca.Errors.Add(new string[] { "min_list", ":attribute ha de tenir almenys :min ítems." });
            ca.Errors.Add(new string[] { "min_numeric", "El tamany de :attribute ha de ser d\almenys :min." });
            ca.Errors.Add(new string[] { "min", ":attribute ha de contenir almenys :min caràcters." });
            ca.Errors.Add(new string[] { "not_in", ":attribute és invàlid." });
            ca.Errors.Add(new string[] { "not_regex", "El format de :attribute no és vàlid." });
            ca.Errors.Add(new string[] { "numeric", ":attribute ha de ser numèric." });
            ca.Errors.Add(new string[] { "password", "La contrasenya és incorrecta." });
            ca.Errors.Add(new string[] { "regex", "El format de :attribute és invàlid." });
            ca.Errors.Add(new string[] { "required", "El camp :attribute és obligatori." });
            ca.Errors.Add(new string[] { "same", ":attribute i :other han de coincidir." });
            ca.Errors.Add(new string[] { "size_list", ":attribute ha de contenir :size ítems." });
            ca.Errors.Add(new string[] { "size_numeric", "El tamany de :attribute ha de ser :size." });
            ca.Errors.Add(new string[] { "size", ":attribute ha de contenir :size caràcters." });
            ca.Errors.Add(new string[] { "starts_with", "El :attribute ha de començar per un dels valors següents: :values," });
            ca.Errors.Add(new string[] { "url", ":attribute no és una adreça web vàlida." });
            ca.Errors.Add(new string[] { "uuid", "El :attribute ha de ser un indentificador únic universal (UUID) vàlid." });
            this.Langs.Add(ca);
            var cs = new Lang();
            cs.Name = "cs";
            cs.Errors.Add(new string[] { "accepted", ":attribute musí být přijat." });
            cs.Errors.Add(new string[] { "active_url", ":attribute není platnou URL adresou." });
            cs.Errors.Add(new string[] { "after", ":attribute musí být datum po :date." });
            cs.Errors.Add(new string[] { "after_or_equal", ":attribute musí být datum :date nebo pozdější." });
            cs.Errors.Add(new string[] { "alpha", ":attribute může obsahovat pouze písmena." });
            cs.Errors.Add(new string[] { "alpha_dash", ":attribute může obsahovat pouze písmena, číslice, pomlčky a podtržítka. České znaky (á, é, í, ó, ú, ů, ž, š, č, ř, ď, ť, ň) nejsou podporovány." });
            cs.Errors.Add(new string[] { "alpha_num", ":attribute může obsahovat pouze písmena a číslice." });
            cs.Errors.Add(new string[] { "before", ":attribute musí být datum před :date." });
            cs.Errors.Add(new string[] { "before_or_equal", "Datum :attribute musí být před nebo rovno :date." });
            cs.Errors.Add(new string[] { "between_list", ":attribute musí obsahovat nejméně :min a nesmí obsahovat více než :max prvků." });
            cs.Errors.Add(new string[] { "between_numeric", ":attribute musí být hodnota mezi :min a :max." });
            cs.Errors.Add(new string[] { "between", ":attribute musí být delší než :min a kratší než :max znaků." });
            cs.Errors.Add(new string[] { "boolean", ":attribute musí být true nebo false," });
            cs.Errors.Add(new string[] { "confirmed", ":attribute nesouhlasí." });
            cs.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            cs.Errors.Add(new string[] { "different", ":attribute a :other se musí lišit." });
            cs.Errors.Add(new string[] { "email", ":attribute není platný formát." });
            cs.Errors.Add(new string[] { "ends_with", ":attribute musí končit jednou z následujících hodnot: :values," });
            cs.Errors.Add(new string[] { "gt_list", "Pole :attribute musí mít více prvků než :value." });
            cs.Errors.Add(new string[] { "gt_numeric", ":attribute musí být větší než :value." });
            cs.Errors.Add(new string[] { "gt", "Počet znaků :attribute musí být větší :value." });
            cs.Errors.Add(new string[] { "gte_list", "Pole :attribute musí mít :value prvků nebo více." });
            cs.Errors.Add(new string[] { "gte_numeric", ":attribute musí být větší nebo rovno :value." });
            cs.Errors.Add(new string[] { "gte", "Počet znaků :attribute musí být větší nebo rovno :value." });
            cs.Errors.Add(new string[] { "in", "Zvolená hodnota pro :attribute je neplatná." });
            cs.Errors.Add(new string[] { "integer", ":attribute musí být celé číslo." });
            cs.Errors.Add(new string[] { "ip", ":attribute musí být platnou IP adresou." });
            cs.Errors.Add(new string[] { "ipv4", ":attribute musí být platná IPv4 adresa." });
            cs.Errors.Add(new string[] { "ipv6", ":attribute musí být platná IPv6 adresa." });
            cs.Errors.Add(new string[] { "json", ":attribute musí být platný JSON řetězec." });
            cs.Errors.Add(new string[] { "lt_list", ":attribute by měl obsahovat méně než :value položek." });
            cs.Errors.Add(new string[] { "lt_numeric", ":attribute musí být menší než :value." });
            cs.Errors.Add(new string[] { "lt", ":attribute musí obsahovat méně než :value znaků." });
            cs.Errors.Add(new string[] { "lte_list", ":attribute by měl obsahovat maximálně :value položek." });
            cs.Errors.Add(new string[] { "lte_numeric", ":attribute musí být menší nebo rovno než :value." });
            cs.Errors.Add(new string[] { "lte", ":attribute nesmí být delší než :value znaků." });
            cs.Errors.Add(new string[] { "max_list", ":attribute nemůže obsahovat více než :max prvků." });
            cs.Errors.Add(new string[] { "max_numeric", ":attribute nemůže být větší než :max." });
            cs.Errors.Add(new string[] { "max", ":attribute nemůže být delší než :max znaků." });
            cs.Errors.Add(new string[] { "mimes", ":attribute musí být jeden z následujících datových typů :values." });
            cs.Errors.Add(new string[] { "min_list", ":attribute musí obsahovat více než :min prvků." });
            cs.Errors.Add(new string[] { "min_numeric", ":attribute musí být větší než :min." });
            cs.Errors.Add(new string[] { "min", ":attribute musí být delší než :min znaků." });
            cs.Errors.Add(new string[] { "not_in", "Zvolená hodnota pro :attribute je neplatná." });
            cs.Errors.Add(new string[] { "not_regex", ":attribute musí být regulární výraz." });
            cs.Errors.Add(new string[] { "numeric", ":attribute musí být číslo." });
            cs.Errors.Add(new string[] { "password", "Heslo je nesprávné." });
            cs.Errors.Add(new string[] { "regex", ":attribute nemá správný formát." });
            cs.Errors.Add(new string[] { "required", ":attribute musí být vyplněno." });
            cs.Errors.Add(new string[] { "same", ":attribute a :other se musí shodovat." });
            cs.Errors.Add(new string[] { "size_list", ":attribute musí obsahovat právě :size prvků." });
            cs.Errors.Add(new string[] { "size_numeric", ":attribute musí být přesně :size." });
            cs.Errors.Add(new string[] { "size", ":attribute musí být přesně :size znaků dlouhý." });
            cs.Errors.Add(new string[] { "starts_with", ":attribute musí začínat jednou z následujících hodnot: :values," });
            cs.Errors.Add(new string[] { "url", "Formát :attribute je neplatný." });
            cs.Errors.Add(new string[] { "uuid", ":attribute musí být validní UUID." });
            this.Langs.Add(cs);
            var cy = new Lang();
            cy.Name = "cy";
            cy.Errors.Add(new string[] { "accepted", "Rhaid derbyn :attribute." });
            cy.Errors.Add(new string[] { "active_url", "Nid yw :attribute yn URL dilys." });
            cy.Errors.Add(new string[] { "after", "Rhaid i :attribute fod yn ddyddiad sydd ar ôl :date." });
            cy.Errors.Add(new string[] { "after_or_equal", "Y :attribute rhaid iddo fod yn ddyddiad ar ôl neu yn hafal i :date." });
            cy.Errors.Add(new string[] { "alpha", "Dim ond llythrennau\n unig gall :attribute gynnwys." });
            cy.Errors.Add(new string[] { "alpha_dash", "Dim ond llythrennau, rhifau a dash yn unig gall :attribute gynnwys." });
            cy.Errors.Add(new string[] { "alpha_num", "Dim ond llythrennau a rhifau yn unig gall :attribute gynnwys." });
            cy.Errors.Add(new string[] { "before", "Rhaid i :attribute fod yn ddyddiad sydd cyn :date." });
            cy.Errors.Add(new string[] { "before_or_equal", "Y :attribute rhaid iddo fod yn ddyddiad cyn neu yn hafal i :date." });
            cy.Errors.Add(new string[] { "between_list", "Rhaid i :attribute fod rhwng :min a :max eitem." });
            cy.Errors.Add(new string[] { "between_numeric", "Rhaid i :attribute fod rhwng :min a :max." });
            cy.Errors.Add(new string[] { "between", "Rhaid i :attribute fod rhwng :min a :max nodyn." });
            cy.Errors.Add(new string[] { "boolean", "Rhaid i\r maes :attribute fod yn wir neu gau." });
            cy.Errors.Add(new string[] { "confirmed", "Nid yw\r cadarnhad :attribute yn gyfwerth." });
            cy.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            cy.Errors.Add(new string[] { "different", "Rhaid i :attribute a :other fod yn wahanol." });
            cy.Errors.Add(new string[] { "email", "Rhaid i :attribute fod yn gyfeiriad ebost dilys." });
            cy.Errors.Add(new string[] { "ends_with", "Y :attribute rhaid i ben gydag un o\r canlynol: :values." });
            cy.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            cy.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            cy.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            cy.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            cy.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            cy.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            cy.Errors.Add(new string[] { "in", "Nid yw :attribute yn ddilys." });
            cy.Errors.Add(new string[] { "integer", "Rhaid i :attribute fod yn integer." });
            cy.Errors.Add(new string[] { "ip", "Rhaid i :attribute fod yn gyfeiriad IP dilys." });
            cy.Errors.Add(new string[] { "ipv4", "Y :attribute rhaid iddo fod yn ddilys ar IPv4 cyfeiriad." });
            cy.Errors.Add(new string[] { "ipv6", "Y :attribute rhaid iddo fod yn ddilys cyfeiriad IPv6." });
            cy.Errors.Add(new string[] { "json", "Y :attribute rhaid iddo fod yn ddilys JSON llinyn." });
            cy.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            cy.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            cy.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            cy.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            cy.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            cy.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            cy.Errors.Add(new string[] { "max_list", "Ni chai :attribute fod yn fwy na :max eitem." });
            cy.Errors.Add(new string[] { "max_numeric", "Ni chai :attribute fod yn fwy na :max." });
            cy.Errors.Add(new string[] { "max", "Ni chai :attribute fod yn fwy na :max nodyn." });
            cy.Errors.Add(new string[] { "mimes", "Rhaid i :attribute fod yn ffeil o\r math: :values." });
            cy.Errors.Add(new string[] { "min_list", "Rhaid i :attribute fod o leiaf :min eitem." });
            cy.Errors.Add(new string[] { "min_numeric", "Rhaid i :attribute fod o leiaf :min." });
            cy.Errors.Add(new string[] { "min", "Rhaid i :attribute fod o leiaf :min nodyn." });
            cy.Errors.Add(new string[] { "not_in", "Nid yw :attribute yn ddilys." });
            cy.Errors.Add(new string[] { "not_regex", "Y :attribute fformat annilys." });
            cy.Errors.Add(new string[] { "numeric", "Rhaid i :attribute fod yn rif." });
            cy.Errors.Add(new string[] { "password", "Mae\r cyfrinair yn anghywir." });
            cy.Errors.Add(new string[] { "regex", "Nid yw fformat :attribute yn ddilys." });
            cy.Errors.Add(new string[] { "required", "Rhaid cynnwys :attribute." });
            cy.Errors.Add(new string[] { "same", "Rhaid i :attribute a :other fod yn gyfwerth." });
            cy.Errors.Add(new string[] { "size_list", "Rhaid i :attribute fod yn :size eitem." });
            cy.Errors.Add(new string[] { "size_numeric", "Rhaid i :attribute fod yn :size." });
            cy.Errors.Add(new string[] { "size", "Rhaid i :attribute fod yn :size nodyn." });
            cy.Errors.Add(new string[] { "starts_with", "Y :attribute rhaid dechrau gydag un o\r canlynol: :values." });
            cy.Errors.Add(new string[] { "url", "Nid yw fformat :attribute yn ddilys." });
            cy.Errors.Add(new string[] { "uuid", "Y :attribute rhaid iddo fod yn ddilys UUID." });
            this.Langs.Add(cy);
            var da = new Lang();
            da.Name = "da";
            da.Errors.Add(new string[] { "accepted", ":attribute skal accepteres." });
            da.Errors.Add(new string[] { "active_url", ":attribute er ikke en gyldig URL." });
            da.Errors.Add(new string[] { "after", ":attribute skal være en dato efter :date." });
            da.Errors.Add(new string[] { "after_or_equal", ":attribute skal være en dato efter eller lig med :date." });
            da.Errors.Add(new string[] { "alpha", ":attribute må kun bestå af bogstaver." });
            da.Errors.Add(new string[] { "alpha_dash", ":attribute må kun bestå af bogstaver, tal og bindestreger." });
            da.Errors.Add(new string[] { "alpha_num", ":attribute må kun bestå af bogstaver og tal." });
            da.Errors.Add(new string[] { "before", ":attribute skal være en dato før :date." });
            da.Errors.Add(new string[] { "before_or_equal", ":attribute skal være en dato før eller lig med :date." });
            da.Errors.Add(new string[] { "between_list", ":attribute skal indeholde mellem :min og :max elementer." });
            da.Errors.Add(new string[] { "between_numeric", ":attribute skal være mellem :min og :max." });
            da.Errors.Add(new string[] { "between", ":attribute skal være mellem :min og :max tegn." });
            da.Errors.Add(new string[] { "boolean", ":attribute skal være sand eller falsk." });
            da.Errors.Add(new string[] { "confirmed", ":attribute er ikke det samme som bekræftelsesfeltet." });
            da.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            da.Errors.Add(new string[] { "different", ":attribute og :other skal være forskellige." });
            da.Errors.Add(new string[] { "email", ":attribute skal være en gyldig e-mailadresse." });
            da.Errors.Add(new string[] { "ends_with", ":attribute skal ende med et af følgende: :values." });
            da.Errors.Add(new string[] { "gt_list", ":attribute skal være mere end :value elementer." });
            da.Errors.Add(new string[] { "gt_numeric", ":attribute skal være større end :value." });
            da.Errors.Add(new string[] { "gt", ":attribute skal være mere end :value tegn." });
            da.Errors.Add(new string[] { "gte_list", ":attribute skal have :value elementer eller mere." });
            da.Errors.Add(new string[] { "gte_numeric", ":attribute skal være større end eller lig med :value." });
            da.Errors.Add(new string[] { "gte", ":attribute skal være mere end eller lig med :value tegn." });
            da.Errors.Add(new string[] { "in", "Valgte :attribute er ugyldig." });
            da.Errors.Add(new string[] { "integer", ":attribute skal være et heltal." });
            da.Errors.Add(new string[] { "ip", ":attribute skal være en gyldig IP adresse." });
            da.Errors.Add(new string[] { "ipv4", ":attribute skal være en gyldig IPv4 adresse." });
            da.Errors.Add(new string[] { "ipv6", ":attribute skal være en gyldig IPv6 adresse." });
            da.Errors.Add(new string[] { "json", ":attribute skal være en gyldig JSON streng." });
            da.Errors.Add(new string[] { "lt_list", ":attribute skal have mindre end :value items." });
            da.Errors.Add(new string[] { "lt_numeric", ":attribute skal være mindre end :value." });
            da.Errors.Add(new string[] { "lt", ":attribute skal være mindre end :value tegn." });
            da.Errors.Add(new string[] { "lte_list", ":attribute må ikke have mere end :value elementer." });
            da.Errors.Add(new string[] { "lte_numeric", ":attribute skal være mindre eller lig med :value." });
            da.Errors.Add(new string[] { "lte", ":attribute skal være mindre eller lig med :value tegn." });
            da.Errors.Add(new string[] { "max_list", ":attribute må ikke indeholde mere end :max elementer." });
            da.Errors.Add(new string[] { "max_numeric", ":attribute må ikke være større end :max." });
            da.Errors.Add(new string[] { "max", ":attribute må ikke være mere end :max tegn." });
            da.Errors.Add(new string[] { "mimes", ":attribute skal være en fil af typen: :values." });
            da.Errors.Add(new string[] { "min_list", ":attribute skal indeholde mindst :min elementer." });
            da.Errors.Add(new string[] { "min_numeric", ":attribute skal være mindst :min." });
            da.Errors.Add(new string[] { "min", ":attribute skal være mindst :min tegn." });
            da.Errors.Add(new string[] { "not_in", "Valgte :attribute er ugyldig." });
            da.Errors.Add(new string[] { "not_regex", "Formatet for :attribute er ugyldigt." });
            da.Errors.Add(new string[] { "numeric", ":attribute skal være et tal." });
            da.Errors.Add(new string[] { "password", "Adgangskoden er forkert." });
            da.Errors.Add(new string[] { "regex", ":attribute formatet er ugyldigt." });
            da.Errors.Add(new string[] { "required", ":attribute skal udfyldes." });
            da.Errors.Add(new string[] { "same", ":attribute og :other skal være ens." });
            da.Errors.Add(new string[] { "size_list", ":attribute skal indeholde :size elementer." });
            da.Errors.Add(new string[] { "size_numeric", ":attribute skal være :size." });
            da.Errors.Add(new string[] { "size", ":attribute skal være :size tegn lang." });
            da.Errors.Add(new string[] { "starts_with", ":attribute skal starte med én af følgende: :values." });
            da.Errors.Add(new string[] { "url", ":attribute formatet er ugyldigt." });
            da.Errors.Add(new string[] { "uuid", ":attribute skal være en gyldig UUID." });
            this.Langs.Add(da);
            var de = new Lang();
            de.Name = "de";
            de.Errors.Add(new string[] { "accepted", ":attribute muss akzeptiert werden." });
            de.Errors.Add(new string[] { "active_url", ":attribute ist keine gültige Internet-Adresse." });
            de.Errors.Add(new string[] { "after", ":attribute muss ein Datum nach :date sein." });
            de.Errors.Add(new string[] { "after_or_equal", ":attribute muss ein Datum nach :date oder gleich :date sein." });
            de.Errors.Add(new string[] { "alpha", ":attribute darf nur aus Buchstaben bestehen." });
            de.Errors.Add(new string[] { "alpha_dash", ":attribute darf nur aus Buchstaben, Zahlen, Binde- und Unterstrichen bestehen." });
            de.Errors.Add(new string[] { "alpha_num", ":attribute darf nur aus Buchstaben und Zahlen bestehen." });
            de.Errors.Add(new string[] { "before", ":attribute muss ein Datum vor :date sein." });
            de.Errors.Add(new string[] { "before_or_equal", ":attribute muss ein Datum vor :date oder gleich :date sein." });
            de.Errors.Add(new string[] { "between_list", ":attribute muss zwischen :min & :max Elemente haben." });
            de.Errors.Add(new string[] { "between_numeric", ":attribute muss zwischen :min & :max liegen." });
            de.Errors.Add(new string[] { "between", ":attribute muss zwischen :min & :max Zeichen lang sein." });
            de.Errors.Add(new string[] { "boolean", ":attribute muss entweder true oder false sein." });
            de.Errors.Add(new string[] { "confirmed", ":attribute stimmt nicht mit der Bestätigung überein." });
            de.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            de.Errors.Add(new string[] { "different", ":attribute und :other müssen sich unterscheiden." });
            de.Errors.Add(new string[] { "email", ":attribute muss eine gültige E-Mail-Adresse sein." });
            de.Errors.Add(new string[] { "ends_with", ":attribute muss eine der folgenden Endungen aufweisen: :values," });
            de.Errors.Add(new string[] { "gt_list", ":attribute muss mehr als :value Elemente haben." });
            de.Errors.Add(new string[] { "gt_numeric", ":attribute muss größer als :value sein." });
            de.Errors.Add(new string[] { "gt", ":attribute muss länger als :value Zeichen sein." });
            de.Errors.Add(new string[] { "gte_list", ":attribute muss mindestens :value Elemente haben." });
            de.Errors.Add(new string[] { "gte_numeric", ":attribute muss größer oder gleich :value sein." });
            de.Errors.Add(new string[] { "gte", ":attribute muss mindestens :value Zeichen lang sein." });
            de.Errors.Add(new string[] { "in", "Der gewählte Wert für :attribute ist ungültig." });
            de.Errors.Add(new string[] { "integer", ":attribute muss eine ganze Zahl sein." });
            de.Errors.Add(new string[] { "ip", ":attribute muss eine gültige IP-Adresse sein." });
            de.Errors.Add(new string[] { "ipv4", ":attribute muss eine gültige IPv4-Adresse sein." });
            de.Errors.Add(new string[] { "ipv6", ":attribute muss eine gültige IPv6-Adresse sein." });
            de.Errors.Add(new string[] { "json", ":attribute muss ein gültiger JSON-String sein." });
            de.Errors.Add(new string[] { "lt_list", ":attribute muss weniger als :value Elemente haben." });
            de.Errors.Add(new string[] { "lt_numeric", ":attribute muss kleiner als :value sein." });
            de.Errors.Add(new string[] { "lt", ":attribute muss kürzer als :value Zeichen sein." });
            de.Errors.Add(new string[] { "lte_list", ":attribute darf maximal :value Elemente haben." });
            de.Errors.Add(new string[] { "lte_numeric", ":attribute muss kleiner oder gleich :value sein." });
            de.Errors.Add(new string[] { "lte", ":attribute darf maximal :value Zeichen lang sein." });
            de.Errors.Add(new string[] { "max_list", ":attribute darf maximal :max Elemente haben." });
            de.Errors.Add(new string[] { "max_numeric", ":attribute darf maximal :max sein." });
            de.Errors.Add(new string[] { "max", ":attribute darf maximal :max Zeichen haben." });
            de.Errors.Add(new string[] { "mimes", ":attribute muss den Dateityp :values haben." });
            de.Errors.Add(new string[] { "min_list", ":attribute muss mindestens :min Elemente haben." });
            de.Errors.Add(new string[] { "min_numeric", ":attribute muss mindestens :min sein." });
            de.Errors.Add(new string[] { "min", ":attribute muss mindestens :min Zeichen lang sein." });
            de.Errors.Add(new string[] { "not_in", "Der gewählte Wert für :attribute ist ungültig." });
            de.Errors.Add(new string[] { "not_regex", ":attribute hat ein ungültiges Format." });
            de.Errors.Add(new string[] { "numeric", ":attribute muss eine Zahl sein." });
            de.Errors.Add(new string[] { "password", "Das Passwort ist falsch." });
            de.Errors.Add(new string[] { "regex", ":attribute Format ist ungültig." });
            de.Errors.Add(new string[] { "required", ":attribute muss ausgefüllt werden." });
            de.Errors.Add(new string[] { "same", ":attribute und :other müssen übereinstimmen." });
            de.Errors.Add(new string[] { "size_list", ":attribute muss genau :size Elemente haben." });
            de.Errors.Add(new string[] { "size_numeric", ":attribute muss gleich :size sein." });
            de.Errors.Add(new string[] { "size", ":attribute muss :size Zeichen lang sein." });
            de.Errors.Add(new string[] { "starts_with", ":attribute muss mit einem der folgenden Anfänge aufweisen: :values," });
            de.Errors.Add(new string[] { "url", ":attribute muss eine URL sein." });
            de.Errors.Add(new string[] { "uuid", ":attribute muss ein UUID sein." });
            this.Langs.Add(de);
            var de_CH = new Lang();
            de_CH.Name = "de_CH";
            de_CH.Errors.Add(new string[] { "accepted", ":attribute muss akzeptiert werden." });
            de_CH.Errors.Add(new string[] { "active_url", ":attribute ist keine gültige Internet-Adresse." });
            de_CH.Errors.Add(new string[] { "after", ":attribute muss ein Datum nach dem :date sein." });
            de_CH.Errors.Add(new string[] { "after_or_equal", ":attribute muss ein Datum nach dem :date oder gleich dem :date sein." });
            de_CH.Errors.Add(new string[] { "alpha", ":attribute darf nur aus Buchstaben bestehen." });
            de_CH.Errors.Add(new string[] { "alpha_dash", ":attribute darf nur aus Buchstaben, Zahlen, Binde- und Unterstrichen bestehen." });
            de_CH.Errors.Add(new string[] { "alpha_num", ":attribute darf nur aus Buchstaben und Zahlen bestehen." });
            de_CH.Errors.Add(new string[] { "before", ":attribute muss ein Datum vor dem :date sein." });
            de_CH.Errors.Add(new string[] { "before_or_equal", ":attribute muss ein Datum vor dem :date oder gleich dem :date sein." });
            de_CH.Errors.Add(new string[] { "between_list", ":attribute muss zwischen :min & :max Elemente haben." });
            de_CH.Errors.Add(new string[] { "between_numeric", ":attribute muss zwischen :min & :max liegen." });
            de_CH.Errors.Add(new string[] { "between", ":attribute muss zwischen :min & :max Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "boolean", ":attribute muss entweder true oder false sein." });
            de_CH.Errors.Add(new string[] { "confirmed", ":attribute stimmt nicht mit der Bestätigung überein." });
            de_CH.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            de_CH.Errors.Add(new string[] { "different", ":attribute und :other müssen sich unterscheiden." });
            de_CH.Errors.Add(new string[] { "email", ":attribute muss eine gültige E-Mail-Adresse sein." });
            de_CH.Errors.Add(new string[] { "ends_with", ":attribute muss eine der folgenden Endungen aufweisen: :values," });
            de_CH.Errors.Add(new string[] { "gt_list", ":attribute muss mindestens :value Elemente haben." });
            de_CH.Errors.Add(new string[] { "gt_numeric", ":attribute muss mindestens :value sein." });
            de_CH.Errors.Add(new string[] { "gt", ":attribute muss mindestens :value Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "gte_list", ":attribute muss grösser oder gleich :value Elemente haben." });
            de_CH.Errors.Add(new string[] { "gte_numeric", ":attribute muss grösser oder gleich :value sein." });
            de_CH.Errors.Add(new string[] { "gte", ":attribute muss grösser oder gleich :value Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "in", "Der gewählte Wert für :attribute ist ungültig." });
            de_CH.Errors.Add(new string[] { "integer", ":attribute muss eine ganze Zahl sein." });
            de_CH.Errors.Add(new string[] { "ip", ":attribute muss eine gültige IP-Adresse sein." });
            de_CH.Errors.Add(new string[] { "ipv4", ":attribute muss eine gültige IPv4-Adresse sein." });
            de_CH.Errors.Add(new string[] { "ipv6", ":attribute muss eine gültige IPv6-Adresse sein." });
            de_CH.Errors.Add(new string[] { "json", ":attribute muss ein gültiger JSON-String sein." });
            de_CH.Errors.Add(new string[] { "lt_list", ":attribute muss kleiner :value Elemente haben." });
            de_CH.Errors.Add(new string[] { "lt_numeric", ":attribute muss kleiner :value sein." });
            de_CH.Errors.Add(new string[] { "lt", ":attribute muss kleiner :value Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "lte_list", ":attribute muss kleiner oder gleich :value Elemente haben." });
            de_CH.Errors.Add(new string[] { "lte_numeric", ":attribute muss kleiner oder gleich :value sein." });
            de_CH.Errors.Add(new string[] { "lte", ":attribute muss kleiner oder gleich :value Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "max_list", ":attribute darf nicht mehr als :max Elemente haben." });
            de_CH.Errors.Add(new string[] { "max_numeric", ":attribute darf maximal :max sein." });
            de_CH.Errors.Add(new string[] { "max", ":attribute darf maximal :max Zeichen haben." });
            de_CH.Errors.Add(new string[] { "mimes", ":attribute muss den Dateityp :values haben." });
            de_CH.Errors.Add(new string[] { "min_list", ":attribute muss mindestens :min Elemente haben." });
            de_CH.Errors.Add(new string[] { "min_numeric", ":attribute muss mindestens :min sein." });
            de_CH.Errors.Add(new string[] { "min", ":attribute muss mindestens :min Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "not_in", "Der gewählte Wert für :attribute ist ungültig." });
            de_CH.Errors.Add(new string[] { "not_regex", ":attribute hat ein ungültiges Format." });
            de_CH.Errors.Add(new string[] { "numeric", ":attribute muss eine Zahl sein." });
            de_CH.Errors.Add(new string[] { "password", "Das Passwort ist falsch." });
            de_CH.Errors.Add(new string[] { "regex", ":attribute Format ist ungültig." });
            de_CH.Errors.Add(new string[] { "required", ":attribute muss ausgefüllt sein." });
            de_CH.Errors.Add(new string[] { "same", ":attribute und :other müssen übereinstimmen." });
            de_CH.Errors.Add(new string[] { "size_list", ":attribute muss genau :size Elemente haben." });
            de_CH.Errors.Add(new string[] { "size_numeric", ":attribute muss gleich :size sein." });
            de_CH.Errors.Add(new string[] { "size", ":attribute muss :size Zeichen lang sein." });
            de_CH.Errors.Add(new string[] { "starts_with", ":attribute muss einen der folgenden Anfänge aufweisen: :values," });
            de_CH.Errors.Add(new string[] { "url", ":attribute muss eine URL sein." });
            de_CH.Errors.Add(new string[] { "uuid", ":attribute muss ein UUID sein." });
            this.Langs.Add(de_CH);
            var el = new Lang();
            el.Name = "el";
            el.Errors.Add(new string[] { "accepted", "Το πεδίο :attribute πρέπει να γίνει αποδεκτό." });
            el.Errors.Add(new string[] { "active_url", "Το πεδίο :attribute δεν είναι αποδεκτή διεύθυνση URL." });
            el.Errors.Add(new string[] { "after", "Το πεδίο :attribute πρέπει να είναι μία ημερομηνία μετά από :date." });
            el.Errors.Add(new string[] { "after_or_equal", "Το πεδίο :attribute πρέπει να είναι μία ημερομηνία ίδια ή μετά από :date." });
            el.Errors.Add(new string[] { "alpha", "Το πεδίο :attribute μπορεί να περιέχει μόνο γράμματα." });
            el.Errors.Add(new string[] { "alpha_dash", "Το πεδίο :attribute μπορεί να περιέχει μόνο γράμματα, αριθμούς, και παύλες." });
            el.Errors.Add(new string[] { "alpha_num", "Το πεδίο :attribute μπορεί να περιέχει μόνο γράμματα και αριθμούς." });
            el.Errors.Add(new string[] { "before", "Το πεδίο :attribute πρέπει να είναι μία ημερομηνία πριν από :date." });
            el.Errors.Add(new string[] { "before_or_equal", "Το πεδίο :attribute πρέπει να είναι μία ημερομηνία ίδια ή πριν από :date." });
            el.Errors.Add(new string[] { "between_list", "Το πεδίο :attribute πρέπει να έχει μεταξύ :min - :max αντικείμενα." });
            el.Errors.Add(new string[] { "between_numeric", "Το πεδίο :attribute πρέπει να είναι μεταξύ :min - :max." });
            el.Errors.Add(new string[] { "between", "Το πεδίο :attribute πρέπει να είναι μεταξύ :min - :max χαρακτήρες." });
            el.Errors.Add(new string[] { "boolean", "Το πεδίο :attribute πρέπει να είναι true ή false." });
            el.Errors.Add(new string[] { "confirmed", "Η επιβεβαίωση του :attribute δεν ταιριάζει." });
            el.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            el.Errors.Add(new string[] { "different", "Το πεδίο :attribute και :other πρέπει να είναι διαφορετικά." });
            el.Errors.Add(new string[] { "email", "Το πεδίο :attribute πρέπει να είναι μία έγκυρη διεύθυνση email." });
            el.Errors.Add(new string[] { "ends_with", "Το πεδίο :attribute πρέπει να τελειώνει με ένα από τα παρακάτω: :values." });
            el.Errors.Add(new string[] { "gt_list", "To πεδίο :attribute πρέπει να έχει περισσότερα από :value αντικείμενα." });
            el.Errors.Add(new string[] { "gt_numeric", "To πεδίο :attribute πρέπει να είναι μεγαλύτερο από :value." });
            el.Errors.Add(new string[] { "gt", "To πεδίο :attribute πρέπει να είναι μεγαλύτερο από :value χαρακτήρες." });
            el.Errors.Add(new string[] { "gte_list", "To πεδίο :attribute πρέπει να έχει :value αντικείμενα ή περισσότερα." });
            el.Errors.Add(new string[] { "gte_numeric", "To πεδίο :attribute πρέπει να είναι μεγαλύτερο ή ίσο από :value." });
            el.Errors.Add(new string[] { "gte", "To πεδίο :attribute πρέπει να είναι μεγαλύτερο ή ίσο από :value χαρακτήρες." });
            el.Errors.Add(new string[] { "in", "Το επιλεγμένο :attribute δεν είναι έγκυρο." });
            el.Errors.Add(new string[] { "integer", "Το πεδίο :attribute πρέπει να είναι ακέραιος." });
            el.Errors.Add(new string[] { "ip", "Το πεδίο :attribute πρέπει να είναι μία έγκυρη διεύθυνση IP." });
            el.Errors.Add(new string[] { "ipv4", "Το πεδίο :attribute πρέπει να είναι μία έγκυρη διεύθυνση IPv4." });
            el.Errors.Add(new string[] { "ipv6", "Το πεδίο :attribute πρέπει να είναι μία έγκυρη διεύθυνση IPv6." });
            el.Errors.Add(new string[] { "json", "Το πεδίο :attribute πρέπει να είναι μία έγκυρη συμβολοσειρά JSON." });
            el.Errors.Add(new string[] { "lt_list", "To πεδίο :attribute πρέπει να έχει λιγότερα από :value αντικείμενα." });
            el.Errors.Add(new string[] { "lt_numeric", "To πεδίο :attribute πρέπει να είναι μικρότερo από :value." });
            el.Errors.Add(new string[] { "lt", "To πεδίο :attribute πρέπει να είναι μικρότερo από :value χαρακτήρες." });
            el.Errors.Add(new string[] { "lte_list", "To πεδίο :attribute δεν πρέπει να υπερβαίνει τα :value αντικείμενα." });
            el.Errors.Add(new string[] { "lte_numeric", "To πεδίο :attribute πρέπει να είναι μικρότερo ή ίσο από :value." });
            el.Errors.Add(new string[] { "lte", "To πεδίο :attribute πρέπει να είναι μικρότερo ή ίσο από  :value χαρακτήρες." });
            el.Errors.Add(new string[] { "max_list", "Το πεδίο :attribute δεν μπορεί να έχει περισσότερα από :max αντικείμενα." });
            el.Errors.Add(new string[] { "max_numeric", "Το πεδίο :attribute δεν μπορεί να είναι μεγαλύτερο από :max." });
            el.Errors.Add(new string[] { "max", "Το πεδίο :attribute δεν μπορεί να έχει περισσότερους από :max χαρακτήρες." });
            el.Errors.Add(new string[] { "mimes", "Το πεδίο :attribute πρέπει να είναι αρχείο τύπου: :values." });
            el.Errors.Add(new string[] { "min_list", "Το πεδίο :attribute πρέπει να έχει τουλάχιστον :min αντικείμενα." });
            el.Errors.Add(new string[] { "min_numeric", "Το πεδίο :attribute πρέπει να είναι τουλάχιστον :min." });
            el.Errors.Add(new string[] { "min", "Το πεδίο :attribute πρέπει να έχει τουλάχιστον :min χαρακτήρες." });
            el.Errors.Add(new string[] { "not_in", "Το επιλεγμένο :attribute δεν είναι αποδεκτό." });
            el.Errors.Add(new string[] { "not_regex", "Η μορφή του πεδίου :attribute δεν είναι αποδεκτή." });
            el.Errors.Add(new string[] { "numeric", "Το πεδίο :attribute πρέπει να είναι αριθμός." });
            el.Errors.Add(new string[] { "password", "Ο κωδικός είναι λανθασμένος." });
            el.Errors.Add(new string[] { "regex", "Η μορφή του πεδίου :attribute δεν είναι αποδεκτή." });
            el.Errors.Add(new string[] { "required", "Το πεδίο :attribute είναι απαραίτητο." });
            el.Errors.Add(new string[] { "same", "Τα πεδία :attribute και :other πρέπει να είναι ίδια." });
            el.Errors.Add(new string[] { "size_list", "Το πεδίο :attribute πρέπει να περιέχει :size αντικείμενα." });
            el.Errors.Add(new string[] { "size_numeric", "Το πεδίο :attribute πρέπει να είναι :size." });
            el.Errors.Add(new string[] { "size", "Το πεδίο :attribute πρέπει να είναι :size χαρακτήρες." });
            el.Errors.Add(new string[] { "starts_with", "Το στοιχείο :attribute πρέπει να ξεκινά με ένα από τα παρακάτω: :values," });
            el.Errors.Add(new string[] { "url", "Το πεδίο :attribute δεν είναι έγκυρη διεύθυνση URL." });
            el.Errors.Add(new string[] { "uuid", "Το πεδίο :attribute πρέπει να είναι έγκυρο UUID." });
            this.Langs.Add(el);
            var es = new Lang();
            es.Name = "es";
            es.Errors.Add(new string[] { "accepted", ":attribute debe ser aceptado." });
            es.Errors.Add(new string[] { "active_url", ":attribute no es una URL válida." });
            es.Errors.Add(new string[] { "after", ":attribute debe ser una fecha posterior a :date." });
            es.Errors.Add(new string[] { "after_or_equal", ":attribute debe ser una fecha posterior o igual a :date." });
            es.Errors.Add(new string[] { "alpha", ":attribute sólo debe contener letras." });
            es.Errors.Add(new string[] { "alpha_dash", ":attribute sólo debe contener letras, números, guiones y guiones bajos." });
            es.Errors.Add(new string[] { "alpha_num", ":attribute sólo debe contener letras y números." });
            es.Errors.Add(new string[] { "before", ":attribute debe ser una fecha anterior a :date." });
            es.Errors.Add(new string[] { "before_or_equal", ":attribute debe ser una fecha anterior o igual a :date." });
            es.Errors.Add(new string[] { "between_list", ":attribute tiene que tener entre :min - :max elementos." });
            es.Errors.Add(new string[] { "between_numeric", ":attribute tiene que estar entre :min - :max." });
            es.Errors.Add(new string[] { "between", ":attribute tiene que tener entre :min - :max caracteres." });
            es.Errors.Add(new string[] { "boolean", "El campo :attribute debe tener un valor verdadero o falso." });
            es.Errors.Add(new string[] { "confirmed", "La confirmación de :attribute no coincide." });
            es.Errors.Add(new string[] { "declined", ":attribute debe ser rechazado." });
            es.Errors.Add(new string[] { "different", ":attribute y :other deben ser diferentes." });
            es.Errors.Add(new string[] { "email", ":attribute no es un correo válido." });
            es.Errors.Add(new string[] { "ends_with", "El campo :attribute debe finalizar con uno de los siguientes valores: :values," });
            es.Errors.Add(new string[] { "gt_list", "El campo :attribute debe tener más de :value elementos." });
            es.Errors.Add(new string[] { "gt_numeric", "El campo :attribute debe ser mayor que :value." });
            es.Errors.Add(new string[] { "gt", "El campo :attribute debe tener más de :value caracteres." });
            es.Errors.Add(new string[] { "gte_list", "El campo :attribute debe tener como mínimo :value elementos." });
            es.Errors.Add(new string[] { "gte_numeric", "El campo :attribute debe ser como mínimo :value." });
            es.Errors.Add(new string[] { "gte", "El campo :attribute debe tener como mínimo :value caracteres." });
            es.Errors.Add(new string[] { "in", ":attribute es inválido." });
            es.Errors.Add(new string[] { "integer", ":attribute debe ser un número entero." });
            es.Errors.Add(new string[] { "ip", ":attribute debe ser una dirección IP válida." });
            es.Errors.Add(new string[] { "ipv4", ":attribute debe ser una dirección IPv4 válida." });
            es.Errors.Add(new string[] { "ipv6", ":attribute debe ser una dirección IPv6 válida." });
            es.Errors.Add(new string[] { "json", "El campo :attribute debe ser una cadena JSON válida." });
            es.Errors.Add(new string[] { "lt_list", "El campo :attribute debe tener menos de :value elementos." });
            es.Errors.Add(new string[] { "lt_numeric", "El campo :attribute debe ser menor que :value." });
            es.Errors.Add(new string[] { "lt", "El campo :attribute debe tener menos de :value caracteres." });
            es.Errors.Add(new string[] { "lte_list", "El campo :attribute debe tener como máximo :value elementos." });
            es.Errors.Add(new string[] { "lte_numeric", "El campo :attribute debe ser como máximo :value." });
            es.Errors.Add(new string[] { "lte", "El campo :attribute debe tener como máximo :value caracteres." });
            es.Errors.Add(new string[] { "max_list", ":attribute no debe tener más de :max elementos." });
            es.Errors.Add(new string[] { "max_numeric", ":attribute no debe ser mayor que :max." });
            es.Errors.Add(new string[] { "max", ":attribute no debe ser mayor que :max caracteres." });
            es.Errors.Add(new string[] { "mimes", ":attribute debe ser un archivo con formato: :values." });
            es.Errors.Add(new string[] { "min_list", ":attribute debe tener al menos :min elementos." });
            es.Errors.Add(new string[] { "min_numeric", "El tamaño de :attribute debe ser de al menos :min." });
            es.Errors.Add(new string[] { "min", ":attribute debe contener al menos :min caracteres." });
            es.Errors.Add(new string[] { "not_in", ":attribute es inválido." });
            es.Errors.Add(new string[] { "not_regex", "El formato del campo :attribute no es válido." });
            es.Errors.Add(new string[] { "numeric", ":attribute debe ser numérico." });
            es.Errors.Add(new string[] { "password", "La contraseña es incorrecta." });
            es.Errors.Add(new string[] { "regex", "El formato de :attribute es inválido." });
            es.Errors.Add(new string[] { "required", "El campo :attribute es obligatorio." });
            es.Errors.Add(new string[] { "same", ":attribute y :other deben coincidir." });
            es.Errors.Add(new string[] { "size_list", ":attribute debe contener :size elementos." });
            es.Errors.Add(new string[] { "size_numeric", "El tamaño de :attribute debe ser :size." });
            es.Errors.Add(new string[] { "size", ":attribute debe contener :size caracteres." });
            es.Errors.Add(new string[] { "starts_with", "El campo :attribute debe comenzar con uno de los siguientes valores: :values," });
            es.Errors.Add(new string[] { "url", ":attribute debe ser una URL válida." });
            es.Errors.Add(new string[] { "uuid", "El campo :attribute debe ser un UUID válido." });
            this.Langs.Add(es);
            var et = new Lang();
            et.Name = "et";
            et.Errors.Add(new string[] { "accepted", ":attribute tuleb aktsepteerida." });
            et.Errors.Add(new string[] { "active_url", ":attribute ei ole kehtiv URL." });
            et.Errors.Add(new string[] { "after", ":attribute peab olema kuupäev pärast :date." });
            et.Errors.Add(new string[] { "after_or_equal", ":attribute peab olema kuupäev pärast või samastuma :date." });
            et.Errors.Add(new string[] { "alpha", ":attribute võib sisaldada vaid tähemärke." });
            et.Errors.Add(new string[] { "alpha_dash", ":attribute võib sisaldada vaid tähti, numbreid ja kriipse." });
            et.Errors.Add(new string[] { "alpha_num", ":attribute võib sisaldada vaid tähti ja numbreid." });
            et.Errors.Add(new string[] { "before", ":attribute peab olema kuupäev enne :date." });
            et.Errors.Add(new string[] { "before_or_equal", ":attribute peab olema kuupäev enne või samastuma :date." });
            et.Errors.Add(new string[] { "between_list", ":attribute peab olema :min ja :max kirje vahel." });
            et.Errors.Add(new string[] { "between_numeric", ":attribute peab olema :min ja :max vahel." });
            et.Errors.Add(new string[] { "between", ":attribute peab olema :min ja :max tähemärgi vahel." });
            et.Errors.Add(new string[] { "boolean", ":attribute väli peab olema tõene või väär." });
            et.Errors.Add(new string[] { "confirmed", ":attribute kinnitus ei vasta." });
            et.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            et.Errors.Add(new string[] { "different", ":attribute ja :other peavad olema erinevad." });
            et.Errors.Add(new string[] { "email", ":attribute peab olema kehtiv e-posti aadress." });
            et.Errors.Add(new string[] { "ends_with", ":attribute peab lõppema ühega järgmistest: :values." });
            et.Errors.Add(new string[] { "gt_list", ":attribute peab sisaldama rohkem kui :value üksust," });
            et.Errors.Add(new string[] { "gt_numeric", ":attribute peab olema suurem kui :value," });
            et.Errors.Add(new string[] { "gt", ":attribute peab sisaldama rohkem kui :value tähemärki," });
            et.Errors.Add(new string[] { "gte_list", ":attribute peab sisaldama vähemalt :value üksust," });
            et.Errors.Add(new string[] { "gte_numeric", ":attribute peab olema suurem kui :value või samasugune," });
            et.Errors.Add(new string[] { "gte", ":attribute peab sisaldama rohkem kui :value tähemärki või sama palju," });
            et.Errors.Add(new string[] { "in", "Valitud :attribute on vigane." });
            et.Errors.Add(new string[] { "integer", ":attribute peab olema täisarv." });
            et.Errors.Add(new string[] { "ip", ":attribute peab olema kehtiv IP aadress." });
            et.Errors.Add(new string[] { "ipv4", ":attribute peab olema kehtiv IPv4 aadress." });
            et.Errors.Add(new string[] { "ipv6", ":attribute peab olema kehtiv IPv6 aadress." });
            et.Errors.Add(new string[] { "json", ":attribute peab olema kehtiv JSON string." });
            et.Errors.Add(new string[] { "lt_list", ":attribute peab sisaldama vähem kui :value üksust," });
            et.Errors.Add(new string[] { "lt_numeric", ":attribute peab olema väiksem kui :value," });
            et.Errors.Add(new string[] { "lt", ":attribute ei tohi ületada :value tähemärki," });
            et.Errors.Add(new string[] { "lte_list", ":attribute ei tohi sisaldada rohkem kui :value üksust," });
            et.Errors.Add(new string[] { "lte_numeric", ":attribute peab olema väiksem kui :value või samasugune," });
            et.Errors.Add(new string[] { "lte", ":attribute peab sisaldama vähem või sama palju :value tähemärke," });
            et.Errors.Add(new string[] { "max_list", ":attribute ei tohi sisaldada rohkem kui :max kirjet." });
            et.Errors.Add(new string[] { "max_numeric", ":attribute ei tohi olla suurem kui :max." });
            et.Errors.Add(new string[] { "max", ":attribute ei tohi olla suurem kui :max tähemärki." });
            et.Errors.Add(new string[] { "mimes", ":attribute peab olema :values tüüpi." });
            et.Errors.Add(new string[] { "min_list", ":attribute peab olema vähemalt :min kirjet." });
            et.Errors.Add(new string[] { "min_numeric", ":attribute peab olema vähemalt :min." });
            et.Errors.Add(new string[] { "min", ":attribute peab olema vähemalt :min tähemärki." });
            et.Errors.Add(new string[] { "not_in", "Valitud :attribute on vigane." });
            et.Errors.Add(new string[] { "not_regex", ":attribute vorming on vale," });
            et.Errors.Add(new string[] { "numeric", ":attribute peab olema number." });
            et.Errors.Add(new string[] { "password", "Parool on vale." });
            et.Errors.Add(new string[] { "regex", ":attribute vorming on vigane." });
            et.Errors.Add(new string[] { "required", ":attribute väli on nõutud." });
            et.Errors.Add(new string[] { "same", ":attribute ja :other peavad sobima." });
            et.Errors.Add(new string[] { "size_list", ":attribute peab sisaldama :size kirjet." });
            et.Errors.Add(new string[] { "size_numeric", ":attribute peab olema :size." });
            et.Errors.Add(new string[] { "size", ":attribute peab olema :size tähemärki." });
            et.Errors.Add(new string[] { "starts_with", ":attribute peab algama ühega järgmistest: :values," });
            et.Errors.Add(new string[] { "url", ":attribute vorming on vigane." });
            et.Errors.Add(new string[] { "uuid", ":attribute peab olema õige UUID," });
            this.Langs.Add(et);
            var eu = new Lang();
            eu.Name = "eu";
            eu.Errors.Add(new string[] { "accepted", ":attribute onartu beharra dago." });
            eu.Errors.Add(new string[] { "active_url", ":attribute ez da baliozko URL bat." });
            eu.Errors.Add(new string[] { "after", ":attribute :date osteko data izan behar da." });
            eu.Errors.Add(new string[] { "after_or_equal", ":attribute :date osteko data edo data bera izan behar da." });
            eu.Errors.Add(new string[] { "alpha", ":attribute hizkiak besterik ezin ditu izan." });
            eu.Errors.Add(new string[] { "alpha_dash", ":attribute hizkiak, zenbakiak eta marrak besterik ezin ditu izan." });
            eu.Errors.Add(new string[] { "alpha_num", ":attribute hizkiak eta zenbakiak besterik ezin ditu izan." });
            eu.Errors.Add(new string[] { "before", ":attribute :date aurreko data izan behar da." });
            eu.Errors.Add(new string[] { "before_or_equal", ":attribute :date aurreko data edo data bera izan behar da." });
            eu.Errors.Add(new string[] { "between_list", ":attribute-(e)k :min eta :max arteko elementu kopurua izan behar du." });
            eu.Errors.Add(new string[] { "between_numeric", ":attribute :min eta :max artean egon behar da." });
            eu.Errors.Add(new string[] { "between", ":attribute-(e)k :min eta :max karaktere artean izan behar ditu." });
            eu.Errors.Add(new string[] { "boolean", ":attribute-(r)en balioa egia edo gezurra izan behar da." });
            eu.Errors.Add(new string[] { "confirmed", ":attribute-(r)en berrespena ez dator bat." });
            eu.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            eu.Errors.Add(new string[] { "different", ":attribute eta :other ezberdinak izan behar dira." });
            eu.Errors.Add(new string[] { "email", ":attribute baliozko helbide elektronikoa izan behar da." });
            eu.Errors.Add(new string[] { "ends_with", ":attribute-(e)k ondorengo balioetako batekin amaitu behar du: :values," });
            eu.Errors.Add(new string[] { "gt_list", ":attribute-(e)k :value elementu baino gehiago izan behar ditu." });
            eu.Errors.Add(new string[] { "gt_numeric", ":attribute-(e)k :value baino handiagoa izan behar du." });
            eu.Errors.Add(new string[] { "gt", ":attribute-(e)k :value karaktere baino gehiago izan behar ditu." });
            eu.Errors.Add(new string[] { "gte_list", ":attribute-(e)k :value elementu edo gehiago izan behar ditu." });
            eu.Errors.Add(new string[] { "gte_numeric", ":attribute-(e)k :value baino handiagoa edo berdina izan behar du." });
            eu.Errors.Add(new string[] { "gte", ":attribute-(e)k :value karaktere edo gehiago izan behar ditu." });
            eu.Errors.Add(new string[] { "in", ":attribute baliogabea da." });
            eu.Errors.Add(new string[] { "integer", ":attribute zenbaki osoa izan behar da." });
            eu.Errors.Add(new string[] { "ip", ":attribute baliozko IP helbidea izan behar da." });
            eu.Errors.Add(new string[] { "ipv4", ":attribute baliozko IPv4 helbidea izan behar da." });
            eu.Errors.Add(new string[] { "ipv6", ":attribute baliozko IPv6 helbidea izan behar da." });
            eu.Errors.Add(new string[] { "json", ":attribute baliozko JSON karaktere-katea izan behar da." });
            eu.Errors.Add(new string[] { "lt_list", ":attribute-(e)k :value elementu baino gutxiago izan behar ditu." });
            eu.Errors.Add(new string[] { "lt_numeric", ":attribute-(e)k :value baino txikiagoa izan behar du." });
            eu.Errors.Add(new string[] { "lt", ":attribute-(e)k :value karaktere baino gutxiago izan behar ditu." });
            eu.Errors.Add(new string[] { "lte_list", ":attribute-(e)k :value elementu edo gutxiago izan behar ditu." });
            eu.Errors.Add(new string[] { "lte_numeric", ":attribute-(e)k :value baino txikiagoa edo berdina izan behar du." });
            eu.Errors.Add(new string[] { "lte", ":attribute-(e)k :value karaktere edo gutxiago izan behar ditu." });
            eu.Errors.Add(new string[] { "max_list", ":attribute-(e)k ezin du :max elementu baino gehiago eduki." });
            eu.Errors.Add(new string[] { "max_numeric", ":attribute ezin da :max baino handiagoa izan." });
            eu.Errors.Add(new string[] { "max", ":attribute-(e)k ezin du :max karaktere baino gehiago eduki." });
            eu.Errors.Add(new string[] { "mimes", ":attribute :values motako fitxategia izan behar da." });
            eu.Errors.Add(new string[] { "min_list", ":attribute-(e)k gutxienez :min elementu izan behar ditu." });
            eu.Errors.Add(new string[] { "min_numeric", ":attribute-(e)k gutxienez :min-(e)ko tamaina izan behar du." });
            eu.Errors.Add(new string[] { "min", ":attribute-(e)k gutxienez :min karaktere izan behar ditu." });
            eu.Errors.Add(new string[] { "not_in", ":attribute baliogabea da." });
            eu.Errors.Add(new string[] { "not_regex", ":attribute formatua baliogabea da." });
            eu.Errors.Add(new string[] { "numeric", ":attribute zenbakizkoa izan behar da." });
            eu.Errors.Add(new string[] { "password", "Pasahitza ez da zuzena." });
            eu.Errors.Add(new string[] { "regex", ":attribute baliogabea da." });
            eu.Errors.Add(new string[] { "required", ":attribute derrigorrezkoa da." });
            eu.Errors.Add(new string[] { "same", ":attribute eta :other bat etorri behar dira." });
            eu.Errors.Add(new string[] { "size_list", ":attribute-(e)k :size elementu izan behar ditu." });
            eu.Errors.Add(new string[] { "size_numeric", ":attribute-(e)k :size tamaina izan behar du." });
            eu.Errors.Add(new string[] { "size", ":attribute-(e)k :size karaktere izan behar ditu." });
            eu.Errors.Add(new string[] { "starts_with", ":attribute-(e)k ondorengo balioetako batekin hasi behar du :values," });
            eu.Errors.Add(new string[] { "url", ":attribute-(r)en formatua baliogabea da." });
            eu.Errors.Add(new string[] { "uuid", ":attribute-(e)k baliozko UUIDa izan behar du." });
            this.Langs.Add(eu);
            var fa = new Lang();
            fa.Name = "fa";
            fa.Errors.Add(new string[] { "accepted", ":attribute باید پذیرفته شده باشد." });
            fa.Errors.Add(new string[] { "active_url", "آدرس :attribute معتبر نیست." });
            fa.Errors.Add(new string[] { "after", ":attribute باید تاریخی بعد از :date باشد." });
            fa.Errors.Add(new string[] { "after_or_equal", ":attribute باید تاریخی بعد از :date، یا مطابق با آن باشد." });
            fa.Errors.Add(new string[] { "alpha", ":attribute باید فقط حروف الفبا باشد." });
            fa.Errors.Add(new string[] { "alpha_dash", ":attribute باید فقط حروف الفبا، اعداد، خط تیره و زیرخط باشد." });
            fa.Errors.Add(new string[] { "alpha_num", ":attribute باید فقط حروف الفبا و اعداد باشد." });
            fa.Errors.Add(new string[] { "before", ":attribute باید تاریخی قبل از :date باشد." });
            fa.Errors.Add(new string[] { "before_or_equal", ":attribute باید تاریخی قبل از :date، یا مطابق با آن باشد." });
            fa.Errors.Add(new string[] { "between_list", ":attribute باید بین :min و :max آیتم باشد." });
            fa.Errors.Add(new string[] { "between_numeric", ":attribute باید بین :min و :max باشد." });
            fa.Errors.Add(new string[] { "between", ":attribute باید بین :min و :max کاراکتر باشد." });
            fa.Errors.Add(new string[] { "boolean", "فیلد :attribute فقط می‌تواند true و یا false باشد." });
            fa.Errors.Add(new string[] { "confirmed", ":attribute با فیلد تکرار مطابقت ندارد." });
            fa.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            fa.Errors.Add(new string[] { "different", ":attribute و :other باید از یکدیگر متفاوت باشند." });
            fa.Errors.Add(new string[] { "email", ":attribute باید یک ایمیل معتبر باشد." });
            fa.Errors.Add(new string[] { "ends_with", "فیلد :attribute باید با یکی از مقادیر زیر خاتمه یابد: :values," });
            fa.Errors.Add(new string[] { "gt_list", ":attribute باید بیشتر از :value آیتم داشته باشد." });
            fa.Errors.Add(new string[] { "gt_numeric", ":attribute باید بزرگتر از :value باشد." });
            fa.Errors.Add(new string[] { "gt", ":attribute باید بیشتر از :value کاراکتر داشته باشد." });
            fa.Errors.Add(new string[] { "gte_list", ":attribute باید بیشتر یا مساوی :value آیتم داشته باشد." });
            fa.Errors.Add(new string[] { "gte_numeric", ":attribute باید بزرگتر یا مساوی :value باشد." });
            fa.Errors.Add(new string[] { "gte", ":attribute باید بیشتر یا مساوی :value کاراکتر داشته باشد." });
            fa.Errors.Add(new string[] { "in", ":attribute انتخاب شده، معتبر نیست." });
            fa.Errors.Add(new string[] { "integer", ":attribute باید عدد صحیح باشد." });
            fa.Errors.Add(new string[] { "ip", ":attribute باید آدرس IP معتبر باشد." });
            fa.Errors.Add(new string[] { "ipv4", ":attribute باید یک آدرس معتبر از نوع IPv4 باشد." });
            fa.Errors.Add(new string[] { "ipv6", ":attribute باید یک آدرس معتبر از نوع IPv6 باشد." });
            fa.Errors.Add(new string[] { "json", "فیلد :attribute باید یک رشته از نوع JSON باشد." });
            fa.Errors.Add(new string[] { "lt_list", ":attribute باید کمتر از :value آیتم داشته باشد." });
            fa.Errors.Add(new string[] { "lt_numeric", ":attribute باید کوچکتر از :value باشد." });
            fa.Errors.Add(new string[] { "lt", ":attribute باید کمتر از :value کاراکتر داشته باشد." });
            fa.Errors.Add(new string[] { "lte_list", ":attribute باید کمتر یا مساوی :value آیتم داشته باشد." });
            fa.Errors.Add(new string[] { "lte_numeric", ":attribute باید کوچکتر یا مساوی :value باشد." });
            fa.Errors.Add(new string[] { "lte", ":attribute باید کمتر یا مساوی :value کاراکتر داشته باشد." });
            fa.Errors.Add(new string[] { "max_list", ":attribute نباید بیشتر از :max آیتم داشته باشد." });
            fa.Errors.Add(new string[] { "max_numeric", ":attribute نباید بزرگتر از :max باشد." });
            fa.Errors.Add(new string[] { "max", ":attribute نباید بیشتر از :max کاراکتر داشته باشد." });
            fa.Errors.Add(new string[] { "mimes", "فرمت‌های معتبر فایل عبارتند از: :values." });
            fa.Errors.Add(new string[] { "min_list", ":attribute نباید کمتر از :min آیتم داشته باشد." });
            fa.Errors.Add(new string[] { "min_numeric", ":attribute نباید کوچکتر از :min باشد." });
            fa.Errors.Add(new string[] { "min", ":attribute نباید کمتر از :min کاراکتر داشته باشد." });
            fa.Errors.Add(new string[] { "not_in", ":attribute انتخاب شده، معتبر نیست." });
            fa.Errors.Add(new string[] { "not_regex", "فرمت :attribute معتبر نیست." });
            fa.Errors.Add(new string[] { "numeric", ":attribute باید عدد یا رشته‌ای از اعداد باشد." });
            fa.Errors.Add(new string[] { "password", "رمزعبور اشتباه است." });
            fa.Errors.Add(new string[] { "regex", "فرمت :attribute معتبر نیست." });
            fa.Errors.Add(new string[] { "required", "فیلد :attribute الزامی است." });
            fa.Errors.Add(new string[] { "same", ":attribute و :other باید همانند هم باشند." });
            fa.Errors.Add(new string[] { "size_list", ":attribute باید شامل :size آیتم باشد." });
            fa.Errors.Add(new string[] { "size_numeric", ":attribute باید برابر با :size باشد." });
            fa.Errors.Add(new string[] { "size", ":attribute باید برابر با :size کاراکتر باشد." });
            fa.Errors.Add(new string[] { "starts_with", ":attribute باید با یکی از این ها شروع شود: :values," });
            fa.Errors.Add(new string[] { "url", ":attribute معتبر نمی‌باشد." });
            fa.Errors.Add(new string[] { "uuid", ":attribute باید یک UUID معتبر باشد." });
            this.Langs.Add(fa);
            var fi = new Lang();
            fi.Name = "fi";
            fi.Errors.Add(new string[] { "accepted", "Kenttä :attribute tulee hyväksyä." });
            fi.Errors.Add(new string[] { "active_url", "Kentän :attribute tulee olla kelvollinen URL-osoite." });
            fi.Errors.Add(new string[] { "after", "Kentän :attribute päiväyksen tulee olla jälkeen :date." });
            fi.Errors.Add(new string[] { "after_or_equal", "Kentän :attribute päiväyksen tulee olla sama ja jälkeen :date," });
            fi.Errors.Add(new string[] { "alpha", "Kenttä :attribute voi sisältää vain kirjaimia." });
            fi.Errors.Add(new string[] { "alpha_dash", "Kenttä :attribute voi sisältää vain kirjaimia, numeroita ja viivoja." });
            fi.Errors.Add(new string[] { "alpha_num", "Kenttä :attribute voi sisältää vain kirjaimia ja numeroita." });
            fi.Errors.Add(new string[] { "before", "Kentän :attribute päiväyksen tulee olla ennen :date." });
            fi.Errors.Add(new string[] { "before_or_equal", "Kentän :attribute päiväyksen tulee olla sama tai ennen kuin :date." });
            fi.Errors.Add(new string[] { "between_list", "Kentän :attribute tulee sisältää välillä :min - :max arvoa." });
            fi.Errors.Add(new string[] { "between_numeric", "Kentän :attribute tulee olla välillä :min - :max." });
            fi.Errors.Add(new string[] { "between", "Kentän :attribute tulee olla :min - :max merkkiä pitkä." });
            fi.Errors.Add(new string[] { "boolean", "Kentän :attribute arvon tulee olla tosi tai epätosi." });
            fi.Errors.Add(new string[] { "confirmed", "Kentän :attribute vahvistus ei täsmää." });
            fi.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            fi.Errors.Add(new string[] { "different", "Kenttien :attribute ja :other tulee olla eriarvoisia." });
            fi.Errors.Add(new string[] { "email", "Kentän :attribute arvo ei ole validi sähköpostiosoite." });
            fi.Errors.Add(new string[] { "ends_with", ":attribute: n on päätyttävä jompaankumpaan seuraavista: :values." });
            fi.Errors.Add(new string[] { "gt_list", "Kentän :attribute tulee sisältää enemmän kuin :value arvoa." });
            fi.Errors.Add(new string[] { "gt_numeric", "Kentän :attribute arvo tulee olla suurempi kuin :value." });
            fi.Errors.Add(new string[] { "gt", "Kentän :attribute arvo tulee olla pidempi kuin :value merkkiä." });
            fi.Errors.Add(new string[] { "gte_list", "Kentän :attribute tulee sisältää :value arvoa tai enemmän." });
            fi.Errors.Add(new string[] { "gte_numeric", "Kentän :attribute arvo tulee olla suurempi tai yhtäsuuri kuin :value." });
            fi.Errors.Add(new string[] { "gte", "Kentän :attribute arvo tulee olla pidempi tai yhtä pitkä kuin :value merkkiä." });
            fi.Errors.Add(new string[] { "in", "Kentän :attribute arvo on virheellinen." });
            fi.Errors.Add(new string[] { "integer", "Kentän :attribute arvon tulee olla numero." });
            fi.Errors.Add(new string[] { "ip", "Kentän :attribute arvon tulee olla validi IP-osoite." });
            fi.Errors.Add(new string[] { "ipv4", "Kentän :attribute arvon tulee olla validi IPv4-osoite." });
            fi.Errors.Add(new string[] { "ipv6", "Kentän :attribute arvon tulee olla validi IPv6-osoite." });
            fi.Errors.Add(new string[] { "json", "Kentän :attribute arvon tulee olla validia JSON:ia." });
            fi.Errors.Add(new string[] { "lt_list", "Kentän :attribute tulee sisältää vähemmän kuin :value arvoa." });
            fi.Errors.Add(new string[] { "lt_numeric", "Kentän :attribute arvo tulee olla pienempi kuin :value." });
            fi.Errors.Add(new string[] { "lt", "Kentän :attribute arvo tulee olla lyhyempi kuin :value merkkiä." });
            fi.Errors.Add(new string[] { "lte_list", "Kentän :attribute tulee sisältää :value arvoa tai vähemmän." });
            fi.Errors.Add(new string[] { "lte_numeric", "Kentän :attribute arvo tulee olla pienempi tai yhtäsuuri kuin :value." });
            fi.Errors.Add(new string[] { "lte", "Kentän :attribute arvo tulee olla lyhyempi tai yhtä pitkä kuin :value merkkiä." });
            fi.Errors.Add(new string[] { "max_list", "Kentän :attribute ei tule sisältää enempää kuin :max arvoa." });
            fi.Errors.Add(new string[] { "max_numeric", "Kentän arvon :attribute tulee olla enintään :max." });
            fi.Errors.Add(new string[] { "max", "Kentän :attribute arvon tulee olla enintään :max merkkiä pitkä." });
            fi.Errors.Add(new string[] { "mimes", "Kentän :attribute arvon tulee olla tiedostotyyppiä: :values." });
            fi.Errors.Add(new string[] { "min_list", "Kentän :attribute tulee sisältää vähintään :min arvoa." });
            fi.Errors.Add(new string[] { "min_numeric", "Kentän :attribute arvon tulee olla vähintään :min." });
            fi.Errors.Add(new string[] { "min", "Kentän :attribute arvon tulee olla vähintään :min merkkiä." });
            fi.Errors.Add(new string[] { "not_in", "Kentän :attribute arvo on virheellinen." });
            fi.Errors.Add(new string[] { "not_regex", "Kentän :attribute formaatti on virheellinen." });
            fi.Errors.Add(new string[] { "numeric", "Kentän :attribute arvon tulee olla numero." });
            fi.Errors.Add(new string[] { "password", "Salasana on väärä." });
            fi.Errors.Add(new string[] { "regex", "Kentän :attribute arvo on väärää muotoa." });
            fi.Errors.Add(new string[] { "required", "Kenttä :attribute vaaditaan." });
            fi.Errors.Add(new string[] { "same", "Kenttien :attribute ja :other on oltava samanarvoiset." });
            fi.Errors.Add(new string[] { "size_list", "Kentän :attribute tulee sisältää :size arvoa." });
            fi.Errors.Add(new string[] { "size_numeric", "Kentän :attribute arvon tulee olla kokoa :size." });
            fi.Errors.Add(new string[] { "size", "Kentän :attribute arvon tulee olla kokoa :size merkkiä." });
            fi.Errors.Add(new string[] { "starts_with", "Attribuutin :attribute tulee alkaa yhdellä seuraavista: :values," });
            fi.Errors.Add(new string[] { "url", "Kentän :attribute arvon tulee olla validi URL-osoite." });
            fi.Errors.Add(new string[] { "uuid", ":attribute tulee olla kelvollinen UUID." });
            this.Langs.Add(fi);
            var fil = new Lang();
            fil.Name = "fil";
            fil.Errors.Add(new string[] { "accepted", "Dapat na tanggapin ang :attribute." });
            fil.Errors.Add(new string[] { "active_url", "Hindi valid na URL ang :attribute." });
            fil.Errors.Add(new string[] { "after", "Ang :attribute ay dapat na isang petsa pagkatapos ng :date." });
            fil.Errors.Add(new string[] { "after_or_equal", "Ang :attribute ay dapat na isang petsa na pagkatapos o katumbas ng :date." });
            fil.Errors.Add(new string[] { "alpha", "Mga titik lang dapat ang nilalaman ng :attribute." });
            fil.Errors.Add(new string[] { "alpha_dash", "Mag titik, numero, gitlling at underscore lang dapat ang nilalaman ng :attribute." });
            fil.Errors.Add(new string[] { "alpha_num", "Mag titik, numero, gitlling at underscore lang dapat ang nilalaman ng :attribute." });
            fil.Errors.Add(new string[] { "before", "Ang :attribute ay dapat na isang petsa bago ang :date." });
            fil.Errors.Add(new string[] { "before_or_equal", "Ang :attribute ay dapat na isang petsa bago ang o katumbas ng :date." });
            fil.Errors.Add(new string[] { "between_list", "Ang :attribute ay dapat na nasa pagitan ng :min at :max (na) item." });
            fil.Errors.Add(new string[] { "between_numeric", "Ang :attribute ay dapat na nasa pagitan ng :min at :max." });
            fil.Errors.Add(new string[] { "between", "Ang :attribute ay dapat na nasa pagitan ng :min at :max (na) character." });
            fil.Errors.Add(new string[] { "boolean", "Dapat na true o false ang field na :attribute." });
            fil.Errors.Add(new string[] { "confirmed", "Hindi tumutugma ang pagkumpirma ng :attribute." });
            fil.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            fil.Errors.Add(new string[] { "different", "Dapat na magkaiba ang :attribute at :other." });
            fil.Errors.Add(new string[] { "email", "Dapat na valid na email address ang :attribute." });
            fil.Errors.Add(new string[] { "ends_with", "The :attribute must end with one of the following: :values." });
            fil.Errors.Add(new string[] { "gt_list", "Ang :attribute ay dapat na mayroong mahigit sa :value (na) item." });
            fil.Errors.Add(new string[] { "gt_numeric", "Ang :attribute ay dapat na mas malaki sa :value." });
            fil.Errors.Add(new string[] { "gt", "Ang :attribute ay dapat na mas marami sa :value (na) character." });
            fil.Errors.Add(new string[] { "gte_list", "Ang :attribute ay dapat na mayroong :value (na) item o higit pa." });
            fil.Errors.Add(new string[] { "gte_numeric", "Ang :attribute ay dapat na mas malaki sa o katumbas ng :value." });
            fil.Errors.Add(new string[] { "gte", "Ang :attribute ay dapat na mas marami sa o katumbas ng :value (na) character." });
            fil.Errors.Add(new string[] { "in", "Hindi valid ang piniling :attribute." });
            fil.Errors.Add(new string[] { "integer", "Dapat na isang integer ang :attribute." });
            fil.Errors.Add(new string[] { "ip", "Dapat na valid na IP address ang :attribute." });
            fil.Errors.Add(new string[] { "ipv4", "Dapat na valid na IPv4 address ang :attribute." });
            fil.Errors.Add(new string[] { "ipv6", "Dapat na IPv6 address ang :attribute." });
            fil.Errors.Add(new string[] { "json", "Dapat na valid na JSON string ang :attribute." });
            fil.Errors.Add(new string[] { "lt_list", "Ang :attribute ay dapat na may mas bababa sa :value (na) item." });
            fil.Errors.Add(new string[] { "lt_numeric", "Ang :attribute ay dapat na mas mababa sa :value." });
            fil.Errors.Add(new string[] { "lt", "Ang :attribute ay dapat na mas mababa sa :value (na) character." });
            fil.Errors.Add(new string[] { "lte_list", "Hindi dapat magkaroon ang :attribute ng higit sa :value (na) item." });
            fil.Errors.Add(new string[] { "lte_numeric", "Ang :attribute ay dapat na mas mababa sa o katumbas ng :value." });
            fil.Errors.Add(new string[] { "lte", "Ang :attribute ay dapat na mas mababa sa o katumbas ng :value (na) character." });
            fil.Errors.Add(new string[] { "max_list", "Hindi dapat magkaroon ang :attribute ng mahigit sa :max (na) item." });
            fil.Errors.Add(new string[] { "max_numeric", "Ang :attribute ay hindi dapat mas malaki sa :max." });
            fil.Errors.Add(new string[] { "max", "Ang :attribute ay hindi dapat mas malaki sa :max (na) character." });
            fil.Errors.Add(new string[] { "mimes", "Ang :attribute ay dapat na isang file na may uri na: :values." });
            fil.Errors.Add(new string[] { "min_list", "Ang :attribute ay dapat na may hindi bababa sa :min (na) item." });
            fil.Errors.Add(new string[] { "min_numeric", "Ang :attribute ay dapat na hindi bababa sa :min." });
            fil.Errors.Add(new string[] { "min", "Ang :attribute ay dapat na hindi bababa sa :min (na) character." });
            fil.Errors.Add(new string[] { "not_in", "Hindi valid ang piniling :attribute." });
            fil.Errors.Add(new string[] { "not_regex", "Hindi valid ang format na :attribute." });
            fil.Errors.Add(new string[] { "numeric", "Dapat na numero ang :attribute." });
            fil.Errors.Add(new string[] { "password", "The password is incorrect." });
            fil.Errors.Add(new string[] { "regex", "Hindi valid ang format na :attribute." });
            fil.Errors.Add(new string[] { "required", "Kinakailangan ang field na :attribute." });
            fil.Errors.Add(new string[] { "same", "Dapat na magtugma ang :attribute at :other." });
            fil.Errors.Add(new string[] { "size_list", "Dapat na maglaman ang :attribute ng :size (na) item." });
            fil.Errors.Add(new string[] { "size_numeric", "Ang :attribute ay dapat na :size." });
            fil.Errors.Add(new string[] { "size", "Ang :attribute ay dapat na :size (na) character." });
            fil.Errors.Add(new string[] { "starts_with", "Dapat na magsimula ang :attribute sa isa sa sumusunod: :values," });
            fil.Errors.Add(new string[] { "url", "Hindi valid ang format na :attribute." });
            fil.Errors.Add(new string[] { "uuid", "Dapat na valid na UUID ang :attribute." });
            this.Langs.Add(fil);
            var fr = new Lang();
            fr.Name = "fr";
            fr.Errors.Add(new string[] { "accepted", "Le champ :attribute doit être accepté." });
            fr.Errors.Add(new string[] { "active_url", "Le champ :attribute nest pas une URL valide." });
            fr.Errors.Add(new string[] { "after", "Le champ :attribute doit être une date postérieure au :date." });
            fr.Errors.Add(new string[] { "after_or_equal", "Le champ :attribute doit être une date postérieure ou égale au :date." });
            fr.Errors.Add(new string[] { "alpha", "Le champ :attribute doit contenir uniquement des lettres." });
            fr.Errors.Add(new string[] { "alpha_dash", "Le champ :attribute doit contenir uniquement des lettres, des chiffres et des tirets." });
            fr.Errors.Add(new string[] { "alpha_num", "Le champ :attribute doit contenir uniquement des chiffres et des lettres." });
            fr.Errors.Add(new string[] { "before", "Le champ :attribute doit être une date antérieure au :date." });
            fr.Errors.Add(new string[] { "before_or_equal", "Le champ :attribute doit être une date antérieure ou égale au :date." });
            fr.Errors.Add(new string[] { "between_list", "Le tableau :attribute doit contenir entre :min et :max éléments." });
            fr.Errors.Add(new string[] { "between_numeric", "La valeur de :attribute doit être comprise entre :min et :max." });
            fr.Errors.Add(new string[] { "between", "Le texte :attribute doit contenir entre :min et :max caractères." });
            fr.Errors.Add(new string[] { "boolean", "Le champ :attribute doit être vrai ou faux." });
            fr.Errors.Add(new string[] { "confirmed", "Le champ de confirmation :attribute ne correspond pas." });
            fr.Errors.Add(new string[] { "declined", "Le champ :attribute doit être décliné." });
            fr.Errors.Add(new string[] { "different", "Les champs :attribute et :other doivent être différents." });
            fr.Errors.Add(new string[] { "email", "Le champ :attribute doit être une adresse e-mail valide." });
            fr.Errors.Add(new string[] { "ends_with", "Le champ :attribute doit se terminer par une des valeurs suivantes : :values," });
            fr.Errors.Add(new string[] { "gt_list", "Le tableau :attribute doit contenir plus de :value éléments." });
            fr.Errors.Add(new string[] { "gt_numeric", "La valeur de :attribute doit être supérieure à :value." });
            fr.Errors.Add(new string[] { "gt", "Le texte :attribute doit contenir plus de :value caractères." });
            fr.Errors.Add(new string[] { "gte_list", "Le tableau :attribute doit contenir au moins :value éléments." });
            fr.Errors.Add(new string[] { "gte_numeric", "La valeur de :attribute doit être supérieure ou égale à :value." });
            fr.Errors.Add(new string[] { "gte", "Le texte :attribute doit contenir au moins :value caractères." });
            fr.Errors.Add(new string[] { "in", "Le champ :attribute est invalide." });
            fr.Errors.Add(new string[] { "integer", "Le champ :attribute doit être un entier." });
            fr.Errors.Add(new string[] { "ip", "Le champ :attribute doit être une adresse IP valide." });
            fr.Errors.Add(new string[] { "ipv4", "Le champ :attribute doit être une adresse IPv4 valide." });
            fr.Errors.Add(new string[] { "ipv6", "Le champ :attribute doit être une adresse IPv6 valide." });
            fr.Errors.Add(new string[] { "json", "Le champ :attribute doit être un document JSON valide." });
            fr.Errors.Add(new string[] { "lt_list", "Le tableau :attribute doit contenir moins de :value éléments." });
            fr.Errors.Add(new string[] { "lt_numeric", "La valeur de :attribute doit être inférieure à :value." });
            fr.Errors.Add(new string[] { "lt", "Le texte :attribute doit contenir moins de :value caractères." });
            fr.Errors.Add(new string[] { "lte_list", "Le tableau :attribute doit contenir au plus :value éléments." });
            fr.Errors.Add(new string[] { "lte_numeric", "La valeur de :attribute doit être inférieure ou égale à :value." });
            fr.Errors.Add(new string[] { "lte", "Le texte :attribute doit contenir au plus :value caractères." });
            fr.Errors.Add(new string[] { "max_list", "Le tableau :attribute ne peut contenir plus de :max éléments." });
            fr.Errors.Add(new string[] { "max_numeric", "La valeur de :attribute ne peut être supérieure à :max." });
            fr.Errors.Add(new string[] { "max", "Le texte de :attribute ne peut contenir plus de :max caractères." });
            fr.Errors.Add(new string[] { "mimes", "Le champ :attribute doit être un fichier de type : :values." });
            fr.Errors.Add(new string[] { "min_list", "Le tableau :attribute doit contenir au moins :min éléments." });
            fr.Errors.Add(new string[] { "min_numeric", "La valeur de :attribute doit être supérieure ou égale à :min." });
            fr.Errors.Add(new string[] { "min", "Le texte :attribute doit contenir au moins :min caractères." });
            fr.Errors.Add(new string[] { "not_in", "Le champ :attribute sélectionné nest pas valide." });
            fr.Errors.Add(new string[] { "not_regex", "Le format du champ :attribute nest pas valide." });
            fr.Errors.Add(new string[] { "numeric", "Le champ :attribute doit contenir un nombre." });
            fr.Errors.Add(new string[] { "password", "Le mot de passe est incorrect," });
            fr.Errors.Add(new string[] { "regex", "Le format du champ :attribute est invalide." });
            fr.Errors.Add(new string[] { "required", "Le champ :attribute est obligatoire." });
            fr.Errors.Add(new string[] { "same", "Les champs :attribute et :other doivent être identiques." });
            fr.Errors.Add(new string[] { "size_list", "Le tableau :attribute doit contenir :size éléments." });
            fr.Errors.Add(new string[] { "size_numeric", "La valeur de :attribute doit être :size." });
            fr.Errors.Add(new string[] { "size", "Le texte de :attribute doit contenir :size caractères." });
            fr.Errors.Add(new string[] { "starts_with", "Le champ :attribute doit commencer avec une des valeurs suivantes : :values," });
            fr.Errors.Add(new string[] { "url", "Le format de lURL de :attribute nest pas valide." });
            fr.Errors.Add(new string[] { "uuid", "Le champ :attribute doit être un UUID valide," });
            this.Langs.Add(fr);
            var gl = new Lang();
            gl.Name = "gl";
            gl.Errors.Add(new string[] { "accepted", ":attribute debe ser aceptado." });
            gl.Errors.Add(new string[] { "active_url", ":attribute non é unha URL válida." });
            gl.Errors.Add(new string[] { "after", ":attribute debe ser unha data posterior a :date." });
            gl.Errors.Add(new string[] { "after_or_equal", ":attribute debe ser unha data posterior ou igual a :date." });
            gl.Errors.Add(new string[] { "alpha", ":attribute só debe conter letras." });
            gl.Errors.Add(new string[] { "alpha_dash", ":attribute só debe conter letras, números, guións e guións baixos." });
            gl.Errors.Add(new string[] { "alpha_num", ":attribute só debe conter letras e números." });
            gl.Errors.Add(new string[] { "before", ":attribute debe ser unha data previa a :date." });
            gl.Errors.Add(new string[] { "before_or_equal", ":attribute debe ser unha data previa ou igual a :date." });
            gl.Errors.Add(new string[] { "between_list", ":attribute debe conter entre :min e :max elementos." });
            gl.Errors.Add(new string[] { "between_numeric", ":attribute debe estar entre :min e :max." });
            gl.Errors.Add(new string[] { "between", ":attribute debe ter entre :min e :max caracteres." });
            gl.Errors.Add(new string[] { "boolean", "O campo :attribute debe ser verdadeiro ou falso." });
            gl.Errors.Add(new string[] { "confirmed", "A confirmación de :attribute non coincide." });
            gl.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            gl.Errors.Add(new string[] { "different", ":attribute e :other deben ser diferentes." });
            gl.Errors.Add(new string[] { "email", ":attribute debe ser unha dirección de correo electrónico válida." });
            gl.Errors.Add(new string[] { "ends_with", ":attribute debe finalizar cun dos seguintes valores: :values," });
            gl.Errors.Add(new string[] { "gt_list", ":attribute debe ter máis de :value elementos." });
            gl.Errors.Add(new string[] { "gt_numeric", ":attribute debe ser maior que :value." });
            gl.Errors.Add(new string[] { "gt", ":attribute debe ter máis de :value caracteres." });
            gl.Errors.Add(new string[] { "gte_list", ":attribute debe ter polo menos :value elementos." });
            gl.Errors.Add(new string[] { "gte_numeric", ":attribute debe ser polo menos :value." });
            gl.Errors.Add(new string[] { "gte", ":attribute debe ter polo menos :value caracteres." });
            gl.Errors.Add(new string[] { "in", ":attribute seleccionado non é válido." });
            gl.Errors.Add(new string[] { "integer", ":attribute debe ser un número enteiro." });
            gl.Errors.Add(new string[] { "ip", ":attribute debe ser unha dirección IP válida." });
            gl.Errors.Add(new string[] { "ipv4", ":attribute debe ser unha dirección IPv4 válida." });
            gl.Errors.Add(new string[] { "ipv6", ":attribute debe ser unha dirección IPv6 válida." });
            gl.Errors.Add(new string[] { "json", ":attribute debe ser unha cadea JSON válida." });
            gl.Errors.Add(new string[] { "lt_list", ":attribute debe ter menos de :value elementos." });
            gl.Errors.Add(new string[] { "lt_numeric", ":attribute debe ser menor que :value." });
            gl.Errors.Add(new string[] { "lt", ":attribute debe ter menos de :value caracteres." });
            gl.Errors.Add(new string[] { "lte_list", ":attribute non debe ter máis de :value elementos." });
            gl.Errors.Add(new string[] { "lte_numeric", ":attribute debe ser como máximo :value." });
            gl.Errors.Add(new string[] { "lte", ":attribute debe ter como máximo :value caracteres." });
            gl.Errors.Add(new string[] { "max_list", ":attribute non debe ter máis de :max elementos." });
            gl.Errors.Add(new string[] { "max_numeric", ":attribute non debe ser maior de :max." });
            gl.Errors.Add(new string[] { "max", ":attribute non debe ser maior de :max caracteres." });
            gl.Errors.Add(new string[] { "mimes", ":attribute debe ser un arquivo de tipo: :values." });
            gl.Errors.Add(new string[] { "min_list", ":attribute debe ter polo menos :min elementos." });
            gl.Errors.Add(new string[] { "min_numeric", ":attribute debe ser polo menos :min." });
            gl.Errors.Add(new string[] { "min", ":attribute debe ser polo menos de :min caracteres." });
            gl.Errors.Add(new string[] { "not_in", ":attribute seleccionado non é válido." });
            gl.Errors.Add(new string[] { "not_regex", "O formato de :attribute non é válido." });
            gl.Errors.Add(new string[] { "numeric", ":attribute debe ser un número." });
            gl.Errors.Add(new string[] { "password", "O contrasinal é incorrecto." });
            gl.Errors.Add(new string[] { "regex", "O formato de :attribute non é válido." });
            gl.Errors.Add(new string[] { "required", "O campo :attribute é obrigatorio." });
            gl.Errors.Add(new string[] { "same", ":attribute e :other deben coincidir." });
            gl.Errors.Add(new string[] { "size_list", ":attribute debe conter :size elementos." });
            gl.Errors.Add(new string[] { "size_numeric", ":attribute debe ser :size." });
            gl.Errors.Add(new string[] { "size", ":attribute debe ter :size caracteres." });
            gl.Errors.Add(new string[] { "starts_with", ":attribute debe comezar cun dos seguintes valores: :values," });
            gl.Errors.Add(new string[] { "url", "O formato de :attribute non é válido." });
            gl.Errors.Add(new string[] { "uuid", ":attribute debe ser un UUID válido." });
            this.Langs.Add(gl);
            var gu = new Lang();
            gu.Name = "gu";
            gu.Errors.Add(new string[] { "accepted", ":attribute સ્વીકૃત હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "active_url", ":attribute માન્ય URL નથી." });
            gu.Errors.Add(new string[] { "after", ":attribute પછી તારીખ હોવી જોઈએ :તારીખ." });
            gu.Errors.Add(new string[] { "after_or_equal", ":attribute પછી તારીખ કે સમાંતર હોવું જોઈએ :તારીખ." });
            gu.Errors.Add(new string[] { "alpha", ":attribute માત્ર અક્ષરોનો જ સમાવેશ કરી શકે." });
            gu.Errors.Add(new string[] { "alpha_dash", ":attribute માત્ર અક્ષરો, આંકડાઓ, ડેશ અને ની નીચે લીટીનો જ સમાવેશ કરી શકે." });
            gu.Errors.Add(new string[] { "alpha_num", ":attribute માત્ર અક્ષરો તથા આંકડાઓનો જ સમાવેશ કરી શકે." });
            gu.Errors.Add(new string[] { "before", ":attribute પહેલાં તારીખ હોવી જોઈએ :તારીખ." });
            gu.Errors.Add(new string[] { "before_or_equal", ":attribute પહેલાં તારીખ કે સમાંતર હોવું જોઈએ :તારીખ." });
            gu.Errors.Add(new string[] { "between_list", ":attribute ની વચ્ચે હોવું જોઈએ :min અને :max વસ્તુઓ." });
            gu.Errors.Add(new string[] { "between_numeric", ":attribute ની વચ્ચે હોવું જોઈએ :min અને :max." });
            gu.Errors.Add(new string[] { "between", ":attribute ની વચ્ચે હોવું જોઈએ :min અને :max અક્ષરો." });
            gu.Errors.Add(new string[] { "boolean", ":attribute પ્રવૃત્તિ ક્ષેત્ર ખરું કે ખોટું હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "confirmed", ":attribute પુષ્ટિકરણ બંધબેસતું નથી." });
            gu.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            gu.Errors.Add(new string[] { "different", ":attribute અને :other અલગ હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "email", ":attribute માન્ય ઈમેઈલ એડ્રેસ હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "ends_with", ":attribute નીચેમાંથી એક પ્રમાણે પૂરું થતું હોવું જોઈએ :values." });
            gu.Errors.Add(new string[] { "gt_list", ":attribute ના કરતાં વિશેષ :value વસ્તુઓ." });
            gu.Errors.Add(new string[] { "gt_numeric", ":attribute થી વિશેષ હોવું જોઈએ :value." });
            gu.Errors.Add(new string[] { "gt", ":attribute થી વિશેષ હોવું જોઈએ :value મૂલ્ય અક્ષરો." });
            gu.Errors.Add(new string[] { "gte_list", ":attribute હોવું જોઈએ :value વસ્તુઓ કે વિશેષ." });
            gu.Errors.Add(new string[] { "gte_numeric", ":attribute થી વિશેષ અથવા સમાંતર હોવું જોઈએ :value." });
            gu.Errors.Add(new string[] { "gte", ":attribute થી વિશેષ અથવા સમાંતર હોવું જોઈએ :value મૂલ્ય અક્ષરો." });
            gu.Errors.Add(new string[] { "in", ":attribute અમાન્ય છે." });
            gu.Errors.Add(new string[] { "integer", ":attribute પૂર્ણ સંખ્યા હોવી જોઈએ." });
            gu.Errors.Add(new string[] { "ip", ":attribute માન્ય IP address હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "ipv4", ":attribute માન્ય IPv4 address હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "ipv6", ":attribute માન્ય IPv6 address હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "json", ":attribute માન્ય JSON શબ્દમાળા હોવી જોઈએ." });
            gu.Errors.Add(new string[] { "lt_list", ":attribute ઓછું હોવું જોઈએ :value વસ્તુઓ." });
            gu.Errors.Add(new string[] { "lt_numeric", ":attribute ઓછું હોવું જોઈએ :value." });
            gu.Errors.Add(new string[] { "lt", ":attribute ઓછું હોવું જોઈએ :value અક્ષરો." });
            gu.Errors.Add(new string[] { "lte_list", ":attribute ના કરતા વધુ ન હોવું જોઈએ :value વસ્તુઓ." });
            gu.Errors.Add(new string[] { "lte_numeric", ":attribute ઓછું કે સમાંતર હોવું જોઈએ :value." });
            gu.Errors.Add(new string[] { "lte", ":attribute ઓછું કે સમાંતર હોવું જોઈએ :value અક્ષરો." });
            gu.Errors.Add(new string[] { "max_list", ":attribute ના કરતાં વધુ ન હોઈ શકે :max વસ્તુઓ." });
            gu.Errors.Add(new string[] { "max_numeric", ":attribute મોટું ન હોઈ શકે :max." });
            gu.Errors.Add(new string[] { "max", ":attribute મોટું ન હોઈ શકે :max અક્ષરો." });
            gu.Errors.Add(new string[] { "mimes", ":attribute પ્રકારની ફાઈલ હોવી જોઈએ :values." });
            gu.Errors.Add(new string[] { "min_list", ":attribute  હોવું જ જોઈએ :min વસ્તુઓ." });
            gu.Errors.Add(new string[] { "min_numeric", ":attribute ઓછામાં ઓછું હોવું જોઈએ :min." });
            gu.Errors.Add(new string[] { "min", ":attribute ઓછામાં ઓછું હોવું જોઈએ :min અક્ષરો." });
            gu.Errors.Add(new string[] { "not_in", "પસંદ કરાયેલ :attribute અમાન્ય છે." });
            gu.Errors.Add(new string[] { "not_regex", ":attribute અમાન્ય ગોઠવણ છે." });
            gu.Errors.Add(new string[] { "numeric", ":attribute આંક હોવો જોઈએ." });
            gu.Errors.Add(new string[] { "password", "The password is incorrect." });
            gu.Errors.Add(new string[] { "regex", ":attribute અમાન્ય ગોઠવણ છે." });
            gu.Errors.Add(new string[] { "required", ":attribute પ્રવૃત્તિ ક્ષેત્ર આવશ્યક છે." });
            gu.Errors.Add(new string[] { "same", ":attribute અને :other બંધબેસતું હોવું જોઈએ." });
            gu.Errors.Add(new string[] { "size_list", ":attribute સમાવેશ કરતું હોવું જોઈએ : કદ વસ્તુઓ." });
            gu.Errors.Add(new string[] { "size_numeric", ":attribute હોવું જોઈએ :કદ." });
            gu.Errors.Add(new string[] { "size", ":attribute હોવું જોઈએ :size અક્ષરો." });
            gu.Errors.Add(new string[] { "starts_with", ":attribute નીચેમાંથી કોઈએક વડે શરૂ થતું હોવું જોઈએ :values." });
            gu.Errors.Add(new string[] { "url", ":attribute ગોઠવણ અમાન્ય છે." });
            gu.Errors.Add(new string[] { "uuid", ":attribute માન્ય UUID હોવું જોઈએ." });
            this.Langs.Add(gu);
            var he = new Lang();
            he.Name = "he";
            he.Errors.Add(new string[] { "accepted", "שדה :attribute חייב להיות מסומן." });
            he.Errors.Add(new string[] { "active_url", "שדה :attribute הוא לא כתובת אתר תקנית." });
            he.Errors.Add(new string[] { "after", "שדה :attribute חייב להיות תאריך אחרי :date." });
            he.Errors.Add(new string[] { "after_or_equal", "שדה :attribute חייב להיות תאריך מאוחר או שווה ל :date." });
            he.Errors.Add(new string[] { "alpha", "שדה :attribute יכול להכיל אותיות בלבד." });
            he.Errors.Add(new string[] { "alpha_dash", "שדה :attribute יכול להכיל אותיות, מספרים ומקפים בלבד." });
            he.Errors.Add(new string[] { "alpha_num", "שדה :attribute יכול להכיל אותיות ומספרים בלבד." });
            he.Errors.Add(new string[] { "before", "שדה :attribute חייב להיות תאריך לפני :date." });
            he.Errors.Add(new string[] { "before_or_equal", "שדה :attribute חייב להיות תאריך מוקדם או שווה ל :date." });
            he.Errors.Add(new string[] { "between_list", "שדה :attribute חייב להיות בין :min ל-:max פריטים." });
            he.Errors.Add(new string[] { "between_numeric", "שדה :attribute חייב להיות בין :min ל-:max." });
            he.Errors.Add(new string[] { "between", "שדה :attribute חייב להיות בין :min ל-:max תווים." });
            he.Errors.Add(new string[] { "boolean", "שדה :attribute חייב להיות אמת או שקר." });
            he.Errors.Add(new string[] { "confirmed", "שדה האישור של :attribute לא תואם." });
            he.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            he.Errors.Add(new string[] { "different", "שדה :attribute ושדה :other חייבים להיות שונים." });
            he.Errors.Add(new string[] { "email", "שדה :attribute חייב להיות כתובת אימייל תקנית." });
            he.Errors.Add(new string[] { "ends_with", "שדה :attribute חייב להסתיים באחד מהבאים: :values," });
            he.Errors.Add(new string[] { "gt_list", "על ה :attribute לכלול יותר מ- :value פריטים." });
            he.Errors.Add(new string[] { "gt_numeric", "על ה :attribute להיות גדול יותר מ- :value." });
            he.Errors.Add(new string[] { "gt", "על ה :attribute להיות גדול יותר מ- :value תווים." });
            he.Errors.Add(new string[] { "gte_list", "ה :attribute חייב לכלול :value פריטים או יותר." });
            he.Errors.Add(new string[] { "gte_numeric", "על ה :attribute להיות גדול יותר או שווה ל- :value." });
            he.Errors.Add(new string[] { "gte", "על ה :attribute להיות גדול יותר או שווה ל- :value תווים." });
            he.Errors.Add(new string[] { "in", "בחירת ה-:attribute אינה תקפה." });
            he.Errors.Add(new string[] { "integer", "שדה :attribute חייב להיות מספר שלם." });
            he.Errors.Add(new string[] { "ip", "שדה :attribute חייב להיות כתובת IP תקנית." });
            he.Errors.Add(new string[] { "ipv4", "שדה :attribute חייב להיות כתובת IPv4 תקנית." });
            he.Errors.Add(new string[] { "ipv6", "שדה :attribute חייב להיות כתובת IPv6 תקנית." });
            he.Errors.Add(new string[] { "json", "שדה :attribute חייב להיות מחרוזת JSON תקנית." });
            he.Errors.Add(new string[] { "lt_list", "על ה :attribute לכלול פחות מ- :value פריטים." });
            he.Errors.Add(new string[] { "lt_numeric", "על ה :attribute להיות נמוך יותר מ- :value." });
            he.Errors.Add(new string[] { "lt", "על ה :attribute להכיל פחות מ- :value תווים." });
            he.Errors.Add(new string[] { "lte_list", "ה :attribute לא יכול לכלול יותר מאשר :value פריטים." });
            he.Errors.Add(new string[] { "lte_numeric", "על ה :attribute להיות נמוך או שווה ל- :value." });
            he.Errors.Add(new string[] { "lte", "על ה :attribute להכיל :value תווים או פחות." });
            he.Errors.Add(new string[] { "max_list", "שדה :attribute לא יכול להכיל יותר מ-:max פריטים." });
            he.Errors.Add(new string[] { "max_numeric", "שדה :attribute אינו יכול להיות גדול מ-:max." });
            he.Errors.Add(new string[] { "max", "שדה :attribute לא יכול להיות גדול מ-:max characters." });
            he.Errors.Add(new string[] { "mimes", "שדה :attribute צריך להיות קובץ מסוג: :values." });
            he.Errors.Add(new string[] { "min_list", "שדה :attribute חייב להיות לפחות :min פריטים." });
            he.Errors.Add(new string[] { "min_numeric", "שדה :attribute חייב להיות לפחות :min." });
            he.Errors.Add(new string[] { "min", "שדה :attribute חייב להיות לפחות :min תווים." });
            he.Errors.Add(new string[] { "not_in", "בחירת ה-:attribute אינה תקפה." });
            he.Errors.Add(new string[] { "not_regex", "הפורמט של :attribute איננו חוקי." });
            he.Errors.Add(new string[] { "numeric", "שדה :attribute חייב להיות מספר." });
            he.Errors.Add(new string[] { "password", "הסיסמה שגויה." });
            he.Errors.Add(new string[] { "regex", "שדה :attribute בעל פורמט שאינו תקין." });
            he.Errors.Add(new string[] { "required", "שדה :attribute הוא חובה." });
            he.Errors.Add(new string[] { "same", "שדה :attribute ו-:other חייבים להיות זהים." });
            he.Errors.Add(new string[] { "size_list", "שדה :attribute חייב להכיל :size פריטים." });
            he.Errors.Add(new string[] { "size_numeric", "שדה :attribute חייב להיות :size." });
            he.Errors.Add(new string[] { "size", "שדה :attribute חייב להיות :size תווים." });
            he.Errors.Add(new string[] { "starts_with", "ה :attribute חייב להתחיל עם אחד מהבאים: :values," });
            he.Errors.Add(new string[] { "url", "שדה :attribute בעל פורמט שאינו תקין." });
            he.Errors.Add(new string[] { "uuid", "ה :attribute חייב להיות מזהה ייחודי אוניברסלי (UUID) חוקי." });
            this.Langs.Add(he);
            var hi = new Lang();
            hi.Name = "hi";
            hi.Errors.Add(new string[] { "accepted", ":attribute को स्वीकार किया जाना चाहिए।," });
            hi.Errors.Add(new string[] { "active_url", ":attribute एक मान्य URL नहीं है।," });
            hi.Errors.Add(new string[] { "after", ":attribute, :date के बाद की एक तारीख होनी चाहिए।," });
            hi.Errors.Add(new string[] { "after_or_equal", ":attribute, :date के बाद या उसके बराबर की तारीख होनी चाहिए।," });
            hi.Errors.Add(new string[] { "alpha", ":attribute में केवल अक्षर हो सकते हैं।," });
            hi.Errors.Add(new string[] { "alpha_dash", ":attribute में केवल अक्षर, संख्या, और डैश हो सकते हैं।," });
            hi.Errors.Add(new string[] { "alpha_num", ":attribute में केवल अक्षर और संख्याएं हो सकती हैं।," });
            hi.Errors.Add(new string[] { "before", ":attribute, :date से पहले की एक तारीख होनी चाहिए।," });
            hi.Errors.Add(new string[] { "before_or_equal", ":attribute, :date इससे पहले या उसके बराबर की तारीख होनी चाहिए।," });
            hi.Errors.Add(new string[] { "between_list", ":attribute, :min और :max आइटमों के बीच होनी चाहिए।," });
            hi.Errors.Add(new string[] { "between_numeric", ":attribute, :min और :max के बीच होना चाहिए।," });
            hi.Errors.Add(new string[] { "between", ":attribute, :min और :max वर्णों के बीच होना चाहिए।," });
            hi.Errors.Add(new string[] { "boolean", ":attribute फील्ड सही या गलत होना चाहिए।," });
            hi.Errors.Add(new string[] { "confirmed", ":attribute पुष्टिकरण मेल नहीं खा रहा है।," });
            hi.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            hi.Errors.Add(new string[] { "different", ":attribute और :other अलग होना चाहिए।," });
            hi.Errors.Add(new string[] { "email", ":attribute एक मान्य ईमेल पता होना चाहिए।," });
            hi.Errors.Add(new string[] { "ends_with", ":attribute को निम्नलिखित में से एक के साथ समाप्त होना चाहिए: :values । ," });
            hi.Errors.Add(new string[] { "gt_list", ":attribute, :value मद से अधिक होना चाहिए।," });
            hi.Errors.Add(new string[] { "gt_numeric", ":attribute, :value से अधिक होना चाहिए।," });
            hi.Errors.Add(new string[] { "gt", ":attribute, :value characters से अधिक होना चाहिए।," });
            hi.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            hi.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            hi.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            hi.Errors.Add(new string[] { "in", "चुना गया :attribute अमान्य है।," });
            hi.Errors.Add(new string[] { "integer", ":attribute एक पूर्णांक होना चाहिए।," });
            hi.Errors.Add(new string[] { "ip", ":attribute एक मान्य IP address होना चाहिए।," });
            hi.Errors.Add(new string[] { "ipv4", ":attribute एक वैध IPv4 address होना चाहिए।," });
            hi.Errors.Add(new string[] { "ipv6", ":attribute एक वैध IPv6 address होना चाहिए।," });
            hi.Errors.Add(new string[] { "json", ":attribute एक मान्य JSON स्ट्रिंग होना चाहिए।," });
            hi.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            hi.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            hi.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            hi.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            hi.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            hi.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            hi.Errors.Add(new string[] { "max_list", ":attribute, :max आइटमों से अधिक नहीं हो सकता है।," });
            hi.Errors.Add(new string[] { "max_numeric", ":attribute, :max से बड़ा नहीं हो सकता है।," });
            hi.Errors.Add(new string[] { "max", ":attribute, :max वर्णों से बड़ा नहीं हो सकता है।," });
            hi.Errors.Add(new string[] { "mimes", ":attribute एक प्रकार की फ़ाइल: :values होना चाहिए।," });
            hi.Errors.Add(new string[] { "min_list", ":attribute कम से कम :min आइटम होना चाहिए।," });
            hi.Errors.Add(new string[] { "min_numeric", ":attribute कम से कम :min होना चाहिए।," });
            hi.Errors.Add(new string[] { "min", ":attribute कम से कम :min वर्ण होना चाहिए।," });
            hi.Errors.Add(new string[] { "not_in", "चुना गया :attribute अमान्य है।," });
            hi.Errors.Add(new string[] { "not_regex", ":attribute प्रारूप अमान्य है।," });
            hi.Errors.Add(new string[] { "numeric", ":attribute एक संख्या होनी चाहिए।," });
            hi.Errors.Add(new string[] { "password", "पासवर्ड गलत है । ," });
            hi.Errors.Add(new string[] { "regex", ":attribute फॉर्मेट अमान्य है।," });
            hi.Errors.Add(new string[] { "required", ":attribute फील्ड आवश्यक होता है।," });
            hi.Errors.Add(new string[] { "same", ":attribute और :other मेल खाना चाहिए।," });
            hi.Errors.Add(new string[] { "size_list", ":attribute में :size आइटम होने चाहिए।," });
            hi.Errors.Add(new string[] { "size_numeric", ":attribute, :size होना चाहिए।," });
            hi.Errors.Add(new string[] { "size", ":attribute, :size वर्ण होना चाहिए।," });
            hi.Errors.Add(new string[] { "starts_with", ":attribute निम्नलिखित में से किसी एक से शुरू करना चाहिए: :values," });
            hi.Errors.Add(new string[] { "url", ":attribute फॉर्मेट अमान्य है।," });
            hi.Errors.Add(new string[] { "uuid", ":attribute एक वैध UUID होना चाहिए।," });
            this.Langs.Add(hi);
            var hr = new Lang();
            hr.Name = "hr";
            hr.Errors.Add(new string[] { "accepted", "Polje :attribute mora biti prihvaćeno." });
            hr.Errors.Add(new string[] { "active_url", "Polje :attribute nije ispravan URL." });
            hr.Errors.Add(new string[] { "after", "Polje :attribute mora biti datum nakon :date." });
            hr.Errors.Add(new string[] { "after_or_equal", "Polje :attribute mora biti datum veći ili jednak :date." });
            hr.Errors.Add(new string[] { "alpha", "Polje :attribute smije sadržavati samo slova." });
            hr.Errors.Add(new string[] { "alpha_dash", "Polje :attribute smije sadržavati samo slova, brojeve i crtice." });
            hr.Errors.Add(new string[] { "alpha_num", "Polje :attribute smije sadržavati samo slova i brojeve." });
            hr.Errors.Add(new string[] { "before", "Polje :attribute mora biti datum prije :date." });
            hr.Errors.Add(new string[] { "before_or_equal", "Polje :attribute mora biti datum manji ili jednak :date." });
            hr.Errors.Add(new string[] { "between_list", "Polje :attribute mora imati između :min - :max stavki." });
            hr.Errors.Add(new string[] { "between_numeric", "Polje :attribute mora biti između :min - :max." });
            hr.Errors.Add(new string[] { "between", "Polje :attribute mora biti između :min - :max znakova." });
            hr.Errors.Add(new string[] { "boolean", "Polje :attribute mora biti false ili true." });
            hr.Errors.Add(new string[] { "confirmed", "Potvrda polja :attribute se ne podudara." });
            hr.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            hr.Errors.Add(new string[] { "different", "Polja :attribute i :other moraju biti različita." });
            hr.Errors.Add(new string[] { "email", "Polje :attribute mora biti ispravna e-mail adresa." });
            hr.Errors.Add(new string[] { "ends_with", ":attribute bi trebao završiti s jednim od sljedećih: :values." });
            hr.Errors.Add(new string[] { "gt_list", "Polje :attribute mora biti veće od :value stavki." });
            hr.Errors.Add(new string[] { "gt_numeric", "Polje :attribute mora biti veće od :value." });
            hr.Errors.Add(new string[] { "gt", "Polje :attribute mora biti veće od :value karaktera." });
            hr.Errors.Add(new string[] { "gte_list", "Polje :attribute mora imati :value stavki ili više." });
            hr.Errors.Add(new string[] { "gte_numeric", "Polje :attribute mora biti veće ili jednako :value." });
            hr.Errors.Add(new string[] { "gte", "Polje :attribute mora biti veće ili jednako :value znakova." });
            hr.Errors.Add(new string[] { "in", "Odabrano polje :attribute nije ispravno." });
            hr.Errors.Add(new string[] { "integer", "Polje :attribute mora biti broj." });
            hr.Errors.Add(new string[] { "ip", "Polje :attribute mora biti ispravna IP adresa." });
            hr.Errors.Add(new string[] { "ipv4", "Polje :attribute mora biti ispravna IPv4 adresa." });
            hr.Errors.Add(new string[] { "ipv6", "Polje :attribute mora biti ispravna IPv6 adresa." });
            hr.Errors.Add(new string[] { "json", "Polje :attribute mora biti ispravan JSON string." });
            hr.Errors.Add(new string[] { "lt_list", "Polje :attribute mora biti manje od :value stavki." });
            hr.Errors.Add(new string[] { "lt_numeric", "Polje :attribute mora biti manje od :value." });
            hr.Errors.Add(new string[] { "lt", "Polje :attribute mora biti manje od :value znakova." });
            hr.Errors.Add(new string[] { "lte_list", "Polje :attribute ne smije imati više od :value stavki." });
            hr.Errors.Add(new string[] { "lte_numeric", "Polje :attribute mora biti manje ili jednako :value." });
            hr.Errors.Add(new string[] { "lte", "Polje :attribute mora biti manje ili jednako :value znakova." });
            hr.Errors.Add(new string[] { "max_list", "Polje :attribute ne smije imati više od :max stavki." });
            hr.Errors.Add(new string[] { "max_numeric", "Polje :attribute mora biti manje od :max." });
            hr.Errors.Add(new string[] { "max", "Polje :attribute mora sadržavati manje od :max znakova." });
            hr.Errors.Add(new string[] { "mimes", "Polje :attribute mora biti datoteka tipa: :values." });
            hr.Errors.Add(new string[] { "min_list", "Polje :attribute mora sadržavati najmanje :min stavki." });
            hr.Errors.Add(new string[] { "min_numeric", "Polje :attribute mora biti najmanje :min." });
            hr.Errors.Add(new string[] { "min", "Polje :attribute mora sadržavati najmanje :min znakova." });
            hr.Errors.Add(new string[] { "not_in", "Odabrano polje :attribute nije ispravno." });
            hr.Errors.Add(new string[] { "not_regex", "Format polja :attribute je neispravan." });
            hr.Errors.Add(new string[] { "numeric", "Polje :attribute mora biti broj." });
            hr.Errors.Add(new string[] { "password", "Lozinka je pogrešna." });
            hr.Errors.Add(new string[] { "regex", "Polje :attribute se ne podudara s formatom." });
            hr.Errors.Add(new string[] { "required", "Polje :attribute je obavezno." });
            hr.Errors.Add(new string[] { "same", "Polja :attribute i :other se moraju podudarati." });
            hr.Errors.Add(new string[] { "size_list", "Polje :attribute mora sadržavati :size stavki." });
            hr.Errors.Add(new string[] { "size_numeric", "Polje :attribute mora biti :size." });
            hr.Errors.Add(new string[] { "size", "Polje :attribute mora biti :size znakova." });
            hr.Errors.Add(new string[] { "starts_with", "Stavka :attribute mora započinjati jednom od narednih stavki: :values," });
            hr.Errors.Add(new string[] { "url", "Polje :attribute nije ispravnog formata." });
            hr.Errors.Add(new string[] { "uuid", "Stavka :attribute mora biti valjani UUID." });
            this.Langs.Add(hr);
            var hu = new Lang();
            hu.Name = "hu";
            hu.Errors.Add(new string[] { "accepted", "A(z) :attribute el kell legyen fogadva!," });
            hu.Errors.Add(new string[] { "active_url", "A(z) :attribute nem érvényes url!," });
            hu.Errors.Add(new string[] { "after", "A(z) :attribute :date utáni dátum kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "after_or_equal", "A(z) :attribute nem lehet korábbi dátum, mint :date!," });
            hu.Errors.Add(new string[] { "alpha", "A(z) :attribute kizárólag betűket tartalmazhat!," });
            hu.Errors.Add(new string[] { "alpha_dash", "A(z) :attribute kizárólag betűket, számokat és kötőjeleket tartalmazhat!," });
            hu.Errors.Add(new string[] { "alpha_num", "A(z) :attribute kizárólag betűket és számokat tartalmazhat!," });
            hu.Errors.Add(new string[] { "before", "A(z) :attribute :date előtti dátum kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "before_or_equal", "A(z) :attribute nem lehet későbbi dátum, mint :date!," });
            hu.Errors.Add(new string[] { "between_list", "A(z) :attribute :min - :max közötti elemet kell, hogy tartalmazzon!," });
            hu.Errors.Add(new string[] { "between_numeric", "A(z) :attribute :min és :max közötti szám kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "between", "A(z) :attribute hossza :min és :max karakter között kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "boolean", "A(z) :attribute mező csak true vagy false értéket kaphat!," });
            hu.Errors.Add(new string[] { "confirmed", "A(z) :attribute nem egyezik a megerősítéssel." });
            hu.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            hu.Errors.Add(new string[] { "different", "A(z) :attribute és :other értékei különbözőek kell, hogy legyenek!," });
            hu.Errors.Add(new string[] { "email", "A(z) :attribute nem érvényes email formátum." });
            hu.Errors.Add(new string[] { "ends_with", "A(z) :attribute a következővel kell végződjön: :values," });
            hu.Errors.Add(new string[] { "gt_list", "A(z) :attribute több, mint :value elemet kell, hogy tartalmazzon." });
            hu.Errors.Add(new string[] { "gt_numeric", "A(z) :attribute nagyobb kell, hogy legyen, mint :value!," });
            hu.Errors.Add(new string[] { "gt", "A(z) :attribute hosszabb kell, hogy legyen, mint :value karakter." });
            hu.Errors.Add(new string[] { "gte_list", "A(z) :attribute legalább :value elemet kell, hogy tartalmazzon." });
            hu.Errors.Add(new string[] { "gte_numeric", "A(z) :attribute nagyobb vagy egyenlő kell, hogy legyen, mint :value!," });
            hu.Errors.Add(new string[] { "gte", "A(z) :attribute hossza nem lehet kevesebb, mint :value karakter." });
            hu.Errors.Add(new string[] { "in", "A kiválasztott :attribute érvénytelen." });
            hu.Errors.Add(new string[] { "integer", "A(z) :attribute értéke szám kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "ip", "A(z) :attribute érvényes IP cím kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "ipv4", "A(z) :attribute érvényes IPv4 cím kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "ipv6", "A(z) :attribute érvényes IPv6 cím kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "json", "A(z) :attribute érvényes JSON szöveg kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "lt_list", "A(z) :attribute kevesebb, mint :value elemet kell, hogy tartalmazzon." });
            hu.Errors.Add(new string[] { "lt_numeric", "A(z) :attribute kisebb kell, hogy legyen, mint :value!," });
            hu.Errors.Add(new string[] { "lt", "A(z) :attribute rövidebb kell, hogy legyen, mint :value karakter." });
            hu.Errors.Add(new string[] { "lte_list", "A(z) :attribute legfeljebb :value elemet kell, hogy tartalmazzon." });
            hu.Errors.Add(new string[] { "lte_numeric", "A(z) :attribute kisebb vagy egyenlő kell, hogy legyen, mint :value!," });
            hu.Errors.Add(new string[] { "lte", "A(z) :attribute hossza nem lehet több, mint :value karakter." });
            hu.Errors.Add(new string[] { "max_list", "A(z) :attribute legfeljebb :max elemet kell, hogy tartalmazzon." });
            hu.Errors.Add(new string[] { "max_numeric", "A(z) :attribute értéke nem lehet nagyobb, mint :max!," });
            hu.Errors.Add(new string[] { "max", "A(z) :attribute hossza nem lehet több, mint :max karakter." });
            hu.Errors.Add(new string[] { "mimes", "A(z) :attribute kizárólag az alábbi fájlformátumok egyike lehet: :values." });
            hu.Errors.Add(new string[] { "min_list", "A(z) :attribute legalább :min elemet kell, hogy tartalmazzon." });
            hu.Errors.Add(new string[] { "min_numeric", "A(z) :attribute értéke nem lehet kisebb, mint :min!," });
            hu.Errors.Add(new string[] { "min", "A(z) :attribute hossza nem lehet kevesebb, mint :min karakter." });
            hu.Errors.Add(new string[] { "not_in", "A(z) :attribute értéke érvénytelen." });
            hu.Errors.Add(new string[] { "not_regex", "A(z) :attribute formátuma érvénytelen." });
            hu.Errors.Add(new string[] { "numeric", "A(z) :attribute szám kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "password", "A(z) :attribute jelszónak kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "regex", "A(z) :attribute formátuma érvénytelen." });
            hu.Errors.Add(new string[] { "required", "A(z) :attribute megadása kötelező!," });
            hu.Errors.Add(new string[] { "same", "A(z) :attribute és :other mezőknek egyezniük kell!," });
            hu.Errors.Add(new string[] { "size_list", "A(z) :attribute :size elemet kell tartalmazzon!," });
            hu.Errors.Add(new string[] { "size_numeric", "A(z) :attribute értéke :size kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "size", "A(z) :attribute hossza :size karakter kell, hogy legyen!," });
            hu.Errors.Add(new string[] { "starts_with", ":attribute a következővel kell kezdődjön: :values," });
            hu.Errors.Add(new string[] { "url", "A(z) :attribute érvénytelen link." });
            hu.Errors.Add(new string[] { "uuid", ":attribute érvényes UUID-val kell rendelkezzen." });
            this.Langs.Add(hu);
            var hy = new Lang();
            hy.Name = "hy";
            hy.Errors.Add(new string[] { "accepted", ":attribute դաշտը պետք է ընդունվի։," });
            hy.Errors.Add(new string[] { "active_url", ":attribute դաշտը վավեր URL չէ։," });
            hy.Errors.Add(new string[] { "after", ":attribute դաշտի ամսաթիվը պետք է լինի :date-ից հետո։," });
            hy.Errors.Add(new string[] { "after_or_equal", ":attribute դաշտի ամսաթիվը պետք է լինի :date կամ դրանից հետո։," });
            hy.Errors.Add(new string[] { "alpha", ":attribute դաշտը պետք է պարունակի միայն տառեր։," });
            hy.Errors.Add(new string[] { "alpha_dash", ":attribute դաշտը պետք է պարունակի միայն տառեր, թվեր, գծիկներ և ընդգծումներ։," });
            hy.Errors.Add(new string[] { "alpha_num", ":attribute դաշտը պետք է պարունակի միայն տառեր և թվեր։," });
            hy.Errors.Add(new string[] { "before", ":attribute դաշտի ամսաթիվը պետք է լինի :date-ից առաջ։," });
            hy.Errors.Add(new string[] { "before_or_equal", ":attribute դաշտի ամսաթիվը պետք է լինի :date կամ դրանից առաջ։," });
            hy.Errors.Add(new string[] { "between_list", ":attribute դաշտում էլեմենտների քանակը պետք է լինի :min-ի և :max-ի միջև։," });
            hy.Errors.Add(new string[] { "between_numeric", ":attribute դաշտը պետք է լինի :min և :max թվերի միջև։," });
            hy.Errors.Add(new string[] { "between", ":attribute դաշտը պետք է ունենա :min-ից :max նիշ։," });
            hy.Errors.Add(new string[] { "boolean", ":attribute դաշտի արժեքը պետք է լինի ճշմարիտ կամ կեղծ։," });
            hy.Errors.Add(new string[] { "confirmed", ":attribute դաշտը չի համապատասխանում հաստատմանը։," });
            hy.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            hy.Errors.Add(new string[] { "different", ":attribute և :other դաշտերը պետք է լինեն տարբեր։," });
            hy.Errors.Add(new string[] { "email", ":attribute դաշտը պետք է լինի վավերական Էլ․ հասցե։," });
            hy.Errors.Add(new string[] { "ends_with", ":attribute դաշտը պետք է ավարտվի հետևյալ արժեքներից մեկով․ :values։," });
            hy.Errors.Add(new string[] { "gt_list", ":attribute դաշտում էլեմենտների քանակը պետք է լինի :value-ից մեծ։," });
            hy.Errors.Add(new string[] { "gt_numeric", ":attribute դաշտը պետք է լինի :value-ից մեծ։," });
            hy.Errors.Add(new string[] { "gt", ":attribute դաշտի նիշերի քանակը պետք է գերազանցի :value-ը։," });
            hy.Errors.Add(new string[] { "gte_list", ":attribute դաշտում էլեմենտների քանակը պետք է մեծ կամ հավասար լինի :value-ից։," });
            hy.Errors.Add(new string[] { "gte_numeric", ":attribute դաշտը պետք է մեծ կամ հավասար լինի :value-ից։," });
            hy.Errors.Add(new string[] { "gte", ":attribute դաշտի նիշերի քանակը պետք է մեծ կամ հավասար լինի :value-ից։," });
            hy.Errors.Add(new string[] { "in", ":attribute դաշտի ընտրված արժեքն անվավեր է։," });
            hy.Errors.Add(new string[] { "integer", ":attribute դաշտը պետք է լինի ամբողջ թիվ։," });
            hy.Errors.Add(new string[] { "ip", ":attribute դաշտը պետք է լինի վավեր IP հասցե." });
            hy.Errors.Add(new string[] { "ipv4", ":attribute դաշտը պետք է լինի վավեր IPv4 հասցե։," });
            hy.Errors.Add(new string[] { "ipv6", ":attribute դաշտը պետք է լինի վավեր IPv6 հասցե։," });
            hy.Errors.Add(new string[] { "json", ":attribute դաշտը պետք է լինի վավեր JSON տեքստ։," });
            hy.Errors.Add(new string[] { "lt_list", ":attribute դաշտում էլեմենտների քանակը պետք է փոքր լինի :value-ից։," });
            hy.Errors.Add(new string[] { "lt_numeric", ":attribute դաշտը պետք է փոքր լինի :value-ից։," });
            hy.Errors.Add(new string[] { "lt", ":attribute դաշտը պետք է ունենա :value-ից պակաս նիշեր։," });
            hy.Errors.Add(new string[] { "lte_list", ":attribute դաշտում էլեմենտների քանակը պետք է փոքր կամ հավասար լինի :value-ից։," });
            hy.Errors.Add(new string[] { "lte_numeric", ":attribute դաշտը պետք է փոքր կամ հավասար լինի :value-ից։," });
            hy.Errors.Add(new string[] { "lte", ":attribute դաշտի նիշերի քանակը պետք է փոքր կամ հավասար լինի :value-ից։," });
            hy.Errors.Add(new string[] { "max_list", ":attribute դաշտում էլեմենտների քանակը չպետք է գերազանցի :max-ը։," });
            hy.Errors.Add(new string[] { "max_numeric", ":attribute դաշտը չի կարող լինել :max-ից մեծ։," });
            hy.Errors.Add(new string[] { "max", ":attribute դաշտի նիշերի քանակը չի կարող լինել :max-ց մեծ։," });
            hy.Errors.Add(new string[] { "mimes", ":attribute դաշտի ֆայլի տեսակը պետք է լինի հետևյալներից մեկը․ :values։," });
            hy.Errors.Add(new string[] { "min_list", ":attribute դաշտում էլեմենտների քանակը պետք է լինի առնվազն :min։," });
            hy.Errors.Add(new string[] { "min_numeric", ":attribute դաշտը պետք է լինի առնվազն :min։," });
            hy.Errors.Add(new string[] { "min", ":attribute դաշտի նիշերի քանակը պետք է լինի առնվազն :min։," });
            hy.Errors.Add(new string[] { "not_in", ":attribute դաշտի ընտրված արժեքն անվավեր է։," });
            hy.Errors.Add(new string[] { "not_regex", ":attribute դաշտի ձևաչափը սխալ է։," });
            hy.Errors.Add(new string[] { "numeric", ":attribute դաշտը պետք է լինի թիվ։," });
            hy.Errors.Add(new string[] { "password", "Գաղտնաբառը սխալ է։," });
            hy.Errors.Add(new string[] { "regex", ":attribute դաշտի ձևաչափը սխալ է։," });
            hy.Errors.Add(new string[] { "required", ":attribute դաշտը պարտադիր է։," });
            hy.Errors.Add(new string[] { "same", ":attribute և :other դաշտերը պետք է համընկնեն։," });
            hy.Errors.Add(new string[] { "size_list", ":attribute դաշտը պետք է պարունակի :size էլեմենտ։," });
            hy.Errors.Add(new string[] { "size_numeric", ":attribute դաշտը պետք է հավասար լինի :size-ի։," });
            hy.Errors.Add(new string[] { "size", ":attribute դաշտը պետք է ունենա :size նիշ։," });
            hy.Errors.Add(new string[] { "starts_with", ":attribute դաշտը պետք է սկսվի հետևյալ արժեքներից մեկով․ :values։," });
            hy.Errors.Add(new string[] { "url", ":attribute դաշտի ձևաչափը սխալ է։," });
            hy.Errors.Add(new string[] { "uuid", ":attribute դաշտը պետք է լինի վավեր UUID։," });
            this.Langs.Add(hy);
            var id = new Lang();
            id.Name = "id";
            id.Errors.Add(new string[] { "accepted", ":attribute harus diterima." });
            id.Errors.Add(new string[] { "active_url", ":attribute bukan URL yang valid." });
            id.Errors.Add(new string[] { "after", ":attribute harus berisi tanggal setelah :date." });
            id.Errors.Add(new string[] { "after_or_equal", ":attribute harus berisi tanggal setelah atau sama dengan :date." });
            id.Errors.Add(new string[] { "alpha", ":attribute hanya boleh berisi huruf." });
            id.Errors.Add(new string[] { "alpha_dash", ":attribute hanya boleh berisi huruf, angka, strip, dan garis bawah." });
            id.Errors.Add(new string[] { "alpha_num", ":attribute hanya boleh berisi huruf dan angka." });
            id.Errors.Add(new string[] { "before", ":attribute harus berisi tanggal sebelum :date." });
            id.Errors.Add(new string[] { "before_or_equal", ":attribute harus berisi tanggal sebelum atau sama dengan :date." });
            id.Errors.Add(new string[] { "between_list", ":Attribute harus memiliki :min sampai :max anggota." });
            id.Errors.Add(new string[] { "between_numeric", ":Attribute harus bernilai antara :min sampai :max." });
            id.Errors.Add(new string[] { "between", ":Attribute harus berisi antara :min sampai :max karakter." });
            id.Errors.Add(new string[] { "boolean", ":attribute harus bernilai true atau false," });
            id.Errors.Add(new string[] { "confirmed", "Konfirmasi :attribute tidak cocok." });
            id.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            id.Errors.Add(new string[] { "different", ":attribute dan :other harus berbeda." });
            id.Errors.Add(new string[] { "email", ":attribute harus berupa alamat surel yang valid." });
            id.Errors.Add(new string[] { "ends_with", ":attribute harus diakhiri salah satu dari berikut: :values," });
            id.Errors.Add(new string[] { "gt_list", ":Attribute harus memiliki lebih dari :value anggota." });
            id.Errors.Add(new string[] { "gt_numeric", ":Attribute harus bernilai lebih besar dari :value." });
            id.Errors.Add(new string[] { "gt", ":Attribute harus berisi lebih besar dari :value karakter." });
            id.Errors.Add(new string[] { "gte_list", ":Attribute harus terdiri dari :value anggota atau lebih." });
            id.Errors.Add(new string[] { "gte_numeric", ":Attribute harus bernilai lebih besar dari atau sama dengan :value." });
            id.Errors.Add(new string[] { "gte", ":Attribute harus berisi lebih besar dari atau sama dengan :value karakter." });
            id.Errors.Add(new string[] { "in", ":attribute yang dipilih tidak valid." });
            id.Errors.Add(new string[] { "integer", ":attribute harus berupa bilangan bulat." });
            id.Errors.Add(new string[] { "ip", ":attribute harus berupa alamat IP yang valid." });
            id.Errors.Add(new string[] { "ipv4", ":attribute harus berupa alamat IPv4 yang valid." });
            id.Errors.Add(new string[] { "ipv6", ":attribute harus berupa alamat IPv6 yang valid." });
            id.Errors.Add(new string[] { "json", ":attribute harus berupa JSON string yang valid." });
            id.Errors.Add(new string[] { "lt_list", ":Attribute harus memiliki kurang dari :value anggota." });
            id.Errors.Add(new string[] { "lt_numeric", ":Attribute harus bernilai kurang dari :value." });
            id.Errors.Add(new string[] { "lt", ":Attribute harus berisi kurang dari :value karakter." });
            id.Errors.Add(new string[] { "lte_list", ":Attribute harus tidak lebih dari :value anggota." });
            id.Errors.Add(new string[] { "lte_numeric", ":Attribute harus bernilai kurang dari atau sama dengan :value." });
            id.Errors.Add(new string[] { "lte", ":Attribute harus berisi kurang dari atau sama dengan :value karakter." });
            id.Errors.Add(new string[] { "max_list", ":Attribute maksimal terdiri dari :max anggota." });
            id.Errors.Add(new string[] { "max_numeric", ":Attribute maksimal bernilai :max." });
            id.Errors.Add(new string[] { "max", ":Attribute maksimal berisi :max karakter." });
            id.Errors.Add(new string[] { "mimes", ":attribute harus berupa berkas berjenis: :values." });
            id.Errors.Add(new string[] { "min_list", ":Attribute minimal terdiri dari :min anggota." });
            id.Errors.Add(new string[] { "min_numeric", ":Attribute minimal bernilai :min." });
            id.Errors.Add(new string[] { "min", ":Attribute minimal berisi :min karakter." });
            id.Errors.Add(new string[] { "not_in", ":attribute yang dipilih tidak valid." });
            id.Errors.Add(new string[] { "not_regex", "Format :attribute tidak valid." });
            id.Errors.Add(new string[] { "numeric", ":attribute harus berupa angka." });
            id.Errors.Add(new string[] { "password", "Kata sandi salah." });
            id.Errors.Add(new string[] { "regex", "Format :attribute tidak valid." });
            id.Errors.Add(new string[] { "required", ":attribute wajib diisi." });
            id.Errors.Add(new string[] { "same", ":attribute dan :other harus sama." });
            id.Errors.Add(new string[] { "size_list", ":Attribute harus mengandung :size anggota." });
            id.Errors.Add(new string[] { "size_numeric", ":Attribute harus berukuran :size." });
            id.Errors.Add(new string[] { "size", ":Attribute harus berukuran :size karakter." });
            id.Errors.Add(new string[] { "starts_with", ":attribute harus diawali salah satu dari berikut: :values," });
            id.Errors.Add(new string[] { "url", "Format :attribute tidak valid." });
            id.Errors.Add(new string[] { "uuid", ":attribute harus merupakan UUID yang valid." });
            this.Langs.Add(id);
            var _is = new Lang();
            _is.Name = "_is";
            _is.Errors.Add(new string[] { "accepted", "Reiturinn :attribute verður að vera samþykktur." });
            _is.Errors.Add(new string[] { "active_url", "Reiturinn :attribute er ekki leyfileg vefslóð." });
            _is.Errors.Add(new string[] { "after", "Reiturinn :attribute verður að vera dagsetning eftir :date." });
            _is.Errors.Add(new string[] { "after_or_equal", ":attribute verður að vera dagsetning eftir eða sú sama og :date." });
            _is.Errors.Add(new string[] { "alpha", "Reiturinn :attribute má aðeins innihalda bókstafi." });
            _is.Errors.Add(new string[] { "alpha_dash", "Reiturinn :attribute má aðeins innihalda bókstafi, tölur og undirstikanir." });
            _is.Errors.Add(new string[] { "alpha_num", "Reiturinn :attribute má aðeins innihalda bókstafi og tölur." });
            _is.Errors.Add(new string[] { "before", "Reiturinn :attribute verður að vera dagsetning eftir :date." });
            _is.Errors.Add(new string[] { "before_or_equal", ":attribute verður að vera dagsetning fyrir eða sú samaog :date." });
            _is.Errors.Add(new string[] { "between_list", "Reiturinn :attribute verður að vera á milli :min - :max staka." });
            _is.Errors.Add(new string[] { "between_numeric", "Reiturinn :attribute verður að vera á milli :min - :max." });
            _is.Errors.Add(new string[] { "between", "Reiturinn :attribute verður að vera á milli :min - :max stafa." });
            _is.Errors.Add(new string[] { "boolean", "Reiturinn :attribute verður að vera réttur eða rangur." });
            _is.Errors.Add(new string[] { "confirmed", "Staðfesting á reitnum :attribute passar ekki." });
            _is.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            _is.Errors.Add(new string[] { "different", "Reiturinn :attribute og :other verða að vera ólíkir." });
            _is.Errors.Add(new string[] { "email", "Reiturinn :attribute snið netfangsins er ekki rétt." });
            _is.Errors.Add(new string[] { "ends_with", "Við :attribute verður að enda með eftirfarandi: :values." });
            _is.Errors.Add(new string[] { "gt_list", ":attribute verður að hafa fleiri en :value atriði." });
            _is.Errors.Add(new string[] { "gt_numeric", ":attribute verður að vera stærra en :value." });
            _is.Errors.Add(new string[] { "gt", ":attribute verður að vera lengri en :value stafir." });
            _is.Errors.Add(new string[] { "gte_list", ":attribute verður að hafa :value eða fleiri atriði." });
            _is.Errors.Add(new string[] { "gte_numeric", ":attribute verður að vera stærra en eða jafnt :value." });
            _is.Errors.Add(new string[] { "gte", ":attribute verður að vera lengri eða jafnlangur og :value stafir." });
            _is.Errors.Add(new string[] { "in", "Reiturinn :attribute er ekki réttur." });
            _is.Errors.Add(new string[] { "integer", "Reiturinn :attribute verður að vera tala." });
            _is.Errors.Add(new string[] { "ip", "Reiturinn :attribute verður að vera lögleg IP-tala." });
            _is.Errors.Add(new string[] { "ipv4", ":attribute verður að vera gild IPv4-tala." });
            _is.Errors.Add(new string[] { "ipv6", ":attribute verður að vera gild IPv6-tala." });
            _is.Errors.Add(new string[] { "json", ":attribute verður að vera gildur JSON-strengur." });
            _is.Errors.Add(new string[] { "lt_list", ":attribute verður að hafa færri en :value atriði." });
            _is.Errors.Add(new string[] { "lt_numeric", ":attribute verður að vera minni en :value." });
            _is.Errors.Add(new string[] { "lt", ":attribute verður að vera styttri en :value stafir." });
            _is.Errors.Add(new string[] { "lte_list", ":attribute má ekki hafa fleiri en :value atriði." });
            _is.Errors.Add(new string[] { "lte_numeric", ":attribute verður að vera minna en eða jafnt :value." });
            _is.Errors.Add(new string[] { "lte", ":attribute verður að vera styttri eða jafnlangur og :value stafir." });
            _is.Errors.Add(new string[] { "max_list", "Reiturinn :attribute verður að innihalda færri en :max stök." });
            _is.Errors.Add(new string[] { "max_numeric", "Reiturinn :attribute verður að innihalda færri stafi en :max." });
            _is.Errors.Add(new string[] { "max", "Reiturinn :attribute verður að innihalda færri en :max stafi." });
            _is.Errors.Add(new string[] { "mimes", "Reiturinn :attribute verður að vera skrá af gerðinni: :values." });
            _is.Errors.Add(new string[] { "min_list", "Reiturinn :attribute verður að vera að lágmarki :min stök." });
            _is.Errors.Add(new string[] { "min_numeric", "Reiturinn :attribute verður að vera að lágmarki :min tölustafir." });
            _is.Errors.Add(new string[] { "min", "Reiturinn :attribute verður að vera að lágmarki :min stafir." });
            _is.Errors.Add(new string[] { "not_in", "Reiturinn :attribute er ógildur." });
            _is.Errors.Add(new string[] { "not_regex", ":attribute sniðið er ógilt." });
            _is.Errors.Add(new string[] { "numeric", "Reiturinn :attribute verður að vera tala." });
            _is.Errors.Add(new string[] { "password", "Lykilorð er rangt." });
            _is.Errors.Add(new string[] { "regex", "Reiturinn :attribute er ekki á réttu formi." });
            _is.Errors.Add(new string[] { "required", "Reiturinn :attribute er nauðsynlegur." });
            _is.Errors.Add(new string[] { "same", "Reiturinn :attribute og :other verða að stemma." });
            _is.Errors.Add(new string[] { "size_list", "Reiturinn :attribute verður að innihalda :size hluti." });
            _is.Errors.Add(new string[] { "size_numeric", "Reiturinn :attribute verður að vera :size." });
            _is.Errors.Add(new string[] { "size", "Reiturinn :attribute verður að vera :size stafir." });
            _is.Errors.Add(new string[] { "starts_with", ":attribute verður að byrja á einu af eftirfarandi: :values," });
            _is.Errors.Add(new string[] { "url", "Reiturinn :attribute verður að vera netslóð." });
            _is.Errors.Add(new string[] { "uuid", ":attribute verður að vera gilt UUID." });
            this.Langs.Add(_is);
            var it = new Lang();
            it.Name = "it";
            it.Errors.Add(new string[] { "accepted", ":attribute deve essere accettato." });
            it.Errors.Add(new string[] { "active_url", ":attribute non è un URL valido." });
            it.Errors.Add(new string[] { "after", ":attribute deve essere una data successiva al :date." });
            it.Errors.Add(new string[] { "after_or_equal", ":attribute deve essere una data successiva o uguale al :date." });
            it.Errors.Add(new string[] { "alpha", ":attribute può contenere solo lettere." });
            it.Errors.Add(new string[] { "alpha_dash", ":attribute può contenere solo lettere, numeri e trattini." });
            it.Errors.Add(new string[] { "alpha_num", ":attribute può contenere solo lettere e numeri." });
            it.Errors.Add(new string[] { "before", ":attribute deve essere una data precedente al :date." });
            it.Errors.Add(new string[] { "before_or_equal", ":attribute deve essere una data precedente o uguale al :date." });
            it.Errors.Add(new string[] { "between_list", ":attribute deve avere tra :min - :max elementi." });
            it.Errors.Add(new string[] { "between_numeric", ":attribute deve trovarsi tra :min - :max." });
            it.Errors.Add(new string[] { "between", ":attribute deve trovarsi tra :min - :max caratteri." });
            it.Errors.Add(new string[] { "boolean", "Il campo :attribute deve essere vero o falso." });
            it.Errors.Add(new string[] { "confirmed", "Il campo di conferma per :attribute non coincide." });
            it.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            it.Errors.Add(new string[] { "different", ":attribute e :other devono essere differenti." });
            it.Errors.Add(new string[] { "email", ":attribute non è valido." });
            it.Errors.Add(new string[] { "ends_with", ":attribute deve finire con uno dei seguenti valori: :values," });
            it.Errors.Add(new string[] { "gt_list", ":attribute deve contenere più di :value elementi." });
            it.Errors.Add(new string[] { "gt_numeric", ":attribute deve essere maggiore di :value." });
            it.Errors.Add(new string[] { "gt", ":attribute deve contenere più di :value caratteri." });
            it.Errors.Add(new string[] { "gte_list", ":attribute deve contenere un numero di elementi uguale o maggiore di :value." });
            it.Errors.Add(new string[] { "gte_numeric", ":attribute deve essere uguale o maggiore di :value." });
            it.Errors.Add(new string[] { "gte", ":attribute deve contenere un numero di caratteri uguale o maggiore di :value." });
            it.Errors.Add(new string[] { "in", ":attribute selezionato non è valido." });
            it.Errors.Add(new string[] { "integer", ":attribute deve essere un numero intero." });
            it.Errors.Add(new string[] { "ip", ":attribute deve essere un indirizzo IP valido." });
            it.Errors.Add(new string[] { "ipv4", ":attribute deve essere un indirizzo IPv4 valido." });
            it.Errors.Add(new string[] { "ipv6", ":attribute deve essere un indirizzo IPv6 valido." });
            it.Errors.Add(new string[] { "json", ":attribute deve essere una stringa JSON valida." });
            it.Errors.Add(new string[] { "lt_list", ":attribute deve contenere meno di :value elementi." });
            it.Errors.Add(new string[] { "lt_numeric", ":attribute deve essere minore di :value." });
            it.Errors.Add(new string[] { "lt", ":attribute deve contenere meno di :value caratteri." });
            it.Errors.Add(new string[] { "lte_list", ":attribute deve contenere un numero di elementi minore o uguale a :value." });
            it.Errors.Add(new string[] { "lte_numeric", ":attribute deve essere minore o uguale a :value." });
            it.Errors.Add(new string[] { "lte", ":attribute deve contenere un numero di caratteri minore o uguale a :value." });
            it.Errors.Add(new string[] { "max_list", ":attribute non può avere più di :max elementi." });
            it.Errors.Add(new string[] { "max_numeric", ":attribute non può essere superiore a :max." });
            it.Errors.Add(new string[] { "max", ":attribute non può contenere più di :max caratteri." });
            it.Errors.Add(new string[] { "mimes", ":attribute deve essere del tipo: :values." });
            it.Errors.Add(new string[] { "min_list", ":attribute deve avere almeno :min elementi." });
            it.Errors.Add(new string[] { "min_numeric", ":attribute deve essere almeno :min." });
            it.Errors.Add(new string[] { "min", ":attribute deve contenere almeno :min caratteri." });
            it.Errors.Add(new string[] { "not_in", "Il valore selezionato per :attribute non è valido." });
            it.Errors.Add(new string[] { "not_regex", "Il formato di :attribute non è valido." });
            it.Errors.Add(new string[] { "numeric", ":attribute deve essere un numero." });
            it.Errors.Add(new string[] { "password", "Il campo :attribute non è corretto." });
            it.Errors.Add(new string[] { "regex", "Il formato del campo :attribute non è valido." });
            it.Errors.Add(new string[] { "required", "Il campo :attribute è richiesto." });
            it.Errors.Add(new string[] { "same", ":attribute e :other devono coincidere." });
            it.Errors.Add(new string[] { "size_list", ":attribute deve contenere :size elementi." });
            it.Errors.Add(new string[] { "size_numeric", ":attribute deve essere :size." });
            it.Errors.Add(new string[] { "size", ":attribute deve contenere :size caratteri." });
            it.Errors.Add(new string[] { "starts_with", ":attribute deve iniziare con uno dei seguenti: :values," });
            it.Errors.Add(new string[] { "url", "Il formato del campo :attribute non è valido." });
            it.Errors.Add(new string[] { "uuid", ":attribute deve essere un UUID valido." });
            this.Langs.Add(it);
            var ja = new Lang();
            ja.Name = "ja";
            ja.Errors.Add(new string[] { "accepted", ":attributeを承認してください。," });
            ja.Errors.Add(new string[] { "active_url", ":attributeは、有効なURLではありません。," });
            ja.Errors.Add(new string[] { "after", ":attributeには、:dateより後の日付を指定してください。," });
            ja.Errors.Add(new string[] { "after_or_equal", ":attributeには、:date以降の日付を指定してください。," });
            ja.Errors.Add(new string[] { "alpha", ":attributeには、アルファベッドのみ使用できます。," });
            ja.Errors.Add(new string[] { "alpha_dash", ":attributeには、英数字(A-Z,a-z,0-9)とハイフンと下線(-,_)が使用できます。," });
            ja.Errors.Add(new string[] { "alpha_num", ":attributeには、英数字(A-Z,a-z,0-9)が使用できます。," });
            ja.Errors.Add(new string[] { "before", ":attributeには、:dateより前の日付を指定してください。," });
            ja.Errors.Add(new string[] { "before_or_equal", ":attributeには、:date以前の日付を指定してください。," });
            ja.Errors.Add(new string[] { "between_list", ":attributeの項目は、:min個から:max個にしてください。," });
            ja.Errors.Add(new string[] { "between_numeric", ":attributeには、:minから、:maxまでの数字を指定してください。," });
            ja.Errors.Add(new string[] { "between", ":attributeは、:min文字から:max文字にしてください。," });
            ja.Errors.Add(new string[] { "boolean", ":attributeには、trueかfalseを指定してください。," });
            ja.Errors.Add(new string[] { "confirmed", ":attributeと:attribute確認が一致しません。," });
            ja.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ja.Errors.Add(new string[] { "different", ":attributeと:otherには、異なるものを指定してください。," });
            ja.Errors.Add(new string[] { "email", ":attributeは、有効なメールアドレス形式で指定してください。," });
            ja.Errors.Add(new string[] { "ends_with", ":attributeは、次のうちのいずれかで終わらなければなりません。: :values," });
            ja.Errors.Add(new string[] { "gt_list", ":attributeの項目数は、:value個より大きくなければなりません。," });
            ja.Errors.Add(new string[] { "gt_numeric", ":attributeは、:valueより大きくなければなりません。," });
            ja.Errors.Add(new string[] { "gt", ":attributeは、:value文字より大きくなければなりません。," });
            ja.Errors.Add(new string[] { "gte_list", ":attributeの項目数は、:value個以上でなければなりません。," });
            ja.Errors.Add(new string[] { "gte_numeric", ":attributeは、:value以上でなければなりません。," });
            ja.Errors.Add(new string[] { "gte", ":attributeは、:value文字以上でなければなりません。," });
            ja.Errors.Add(new string[] { "in", "選択された:attributeは、有効ではありません。," });
            ja.Errors.Add(new string[] { "integer", ":attributeには、整数を指定してください。," });
            ja.Errors.Add(new string[] { "ip", ":attributeには、有効なIPアドレスを指定してください。," });
            ja.Errors.Add(new string[] { "ipv4", ":attributeはIPv4アドレスを指定してください。," });
            ja.Errors.Add(new string[] { "ipv6", ":attributeはIPv6アドレスを指定してください。," });
            ja.Errors.Add(new string[] { "json", ":attributeには、有効なJSON文字列を指定してください。," });
            ja.Errors.Add(new string[] { "lt_list", ":attributeの項目数は、:value個より小さくなければなりません。," });
            ja.Errors.Add(new string[] { "lt_numeric", ":attributeは、:valueより小さくなければなりません。," });
            ja.Errors.Add(new string[] { "lt", ":attributeは、:value文字より小さくなければなりません。," });
            ja.Errors.Add(new string[] { "lte_list", ":attributeの項目数は、:value個以下でなければなりません。," });
            ja.Errors.Add(new string[] { "lte_numeric", ":attributeは、:value以下でなければなりません。," });
            ja.Errors.Add(new string[] { "lte", ":attributeは、:value文字以下でなければなりません。," });
            ja.Errors.Add(new string[] { "max_list", ":attributeの項目は、:max個以下にしてください。," });
            ja.Errors.Add(new string[] { "max_numeric", ":attributeには、:max以下の数字を指定してください。," });
            ja.Errors.Add(new string[] { "max", ":attributeは、:max文字以下にしてください。," });
            ja.Errors.Add(new string[] { "mimes", ":attributeには、:valuesタイプのファイルを指定してください。," });
            ja.Errors.Add(new string[] { "min_list", ":attributeの項目は、:min個以上にしてください。," });
            ja.Errors.Add(new string[] { "min_numeric", ":attributeには、:min以上の数字を指定してください。," });
            ja.Errors.Add(new string[] { "min", ":attributeは、:min文字以上にしてください。," });
            ja.Errors.Add(new string[] { "not_in", "選択された:attributeは、有効ではありません。," });
            ja.Errors.Add(new string[] { "not_regex", ":attributeの形式が無効です。," });
            ja.Errors.Add(new string[] { "numeric", ":attributeには、数字を指定してください。," });
            ja.Errors.Add(new string[] { "password", "パスワードが正しくありません。," });
            ja.Errors.Add(new string[] { "regex", ":attributeには、有効な正規表現を指定してください。," });
            ja.Errors.Add(new string[] { "required", ":attributeは、必ず指定してください。," });
            ja.Errors.Add(new string[] { "same", ":attributeと:otherが一致しません。," });
            ja.Errors.Add(new string[] { "size_list", ":attributeの項目は、:size個にしてください。," });
            ja.Errors.Add(new string[] { "size_numeric", ":attributeには、:sizeを指定してください。," });
            ja.Errors.Add(new string[] { "size", ":attributeは、:size文字にしてください。," });
            ja.Errors.Add(new string[] { "starts_with", ":attributeは、次のいずれかで始まる必要があります。:values," });
            ja.Errors.Add(new string[] { "url", ":attributeは、有効なURL形式で指定してください。," });
            ja.Errors.Add(new string[] { "uuid", ":attributeは、有効なUUIDでなければなりません。," });
            this.Langs.Add(ja);
            var ka = new Lang();
            ka.Name = "ka";
            ka.Errors.Add(new string[] { "accepted", ":attribute უნდა იყოს მონიშნული." });
            ka.Errors.Add(new string[] { "active_url", ":attribute არ არის სწორი ბმული." });
            ka.Errors.Add(new string[] { "after", ":attribute უნდა იყოს თარიღი :date-ის შემდეგ." });
            ka.Errors.Add(new string[] { "after_or_equal", ":attribute უნდა იყოს თარიღი :date-ის შემდეგ ან მისი ტოლი." });
            ka.Errors.Add(new string[] { "alpha", ":attribute უნდა შეიცავდეს მხოლოდ ასოებს." });
            ka.Errors.Add(new string[] { "alpha_dash", ":attribute უნდა შეიცავდეს მხოლოდ ასოებს, რიცხვებს, ტირეებს და ქვეტირეებს." });
            ka.Errors.Add(new string[] { "alpha_num", ":attribute უნდა შეიცავდეს მხოლოდ ასოებს და რიცხვებს." });
            ka.Errors.Add(new string[] { "before", ":attribute უნდა იყოს თარიღი :date-მდე." });
            ka.Errors.Add(new string[] { "before_or_equal", ":attribute უნდა იყოს თარიღი :date-მდე ან მისი ტოლი." });
            ka.Errors.Add(new string[] { "between_list", ":attribute-ის რაოდენობა უნდა იყოს :min-დან :max-მდე." });
            ka.Errors.Add(new string[] { "between_numeric", ":attribute უნდა იყოს :min-სა და :max-ს შორის." });
            ka.Errors.Add(new string[] { "between", ":attribute უნდა იყოს :min-სა და :max სიმბოლოს შორის." });
            ka.Errors.Add(new string[] { "boolean", ":attribute ველი უნდა იყოს true ან false." });
            ka.Errors.Add(new string[] { "confirmed", ":attribute-ის დადასტურება არ ემთხვევა." });
            ka.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ka.Errors.Add(new string[] { "different", ":attribute და :other არ უნდა ემთხვეოდეს ერთმანეთს." });
            ka.Errors.Add(new string[] { "email", ":attribute უნდა იყოს სწორი ელ.ფოსტა." });
            ka.Errors.Add(new string[] { "ends_with", ":attribute უნდა ბოლოვდებოდეს შემდეგიდან ერთ-ერთით: :values." });
            ka.Errors.Add(new string[] { "gt_list", ":attribute უნდა შეიცავდეს :value ელემენტზე მეტს." });
            ka.Errors.Add(new string[] { "gt_numeric", ":attribute უნდა იყოს :value-ზე მეტი." });
            ka.Errors.Add(new string[] { "gt", ":attribute უნდა შეიცავდეს :value სიმბოლოზე მეტს." });
            ka.Errors.Add(new string[] { "gte_list", ":attribute უნდა შეიცავდეს მინიმუმ :value ელემენტს." });
            ka.Errors.Add(new string[] { "gte_numeric", ":attribute უნდა იყოს მინიმუმ :value." });
            ka.Errors.Add(new string[] { "gte", ":attribute უნდა შეიცავდეს მინიმუმ :value სიმბოლოს." });
            ka.Errors.Add(new string[] { "in", "არჩეული :attribute არასწორია." });
            ka.Errors.Add(new string[] { "integer", ":attribute უნდა იყოს მთელი რიცხვი." });
            ka.Errors.Add(new string[] { "ip", ":attribute უნდა იყოს ვალიდური IP მისამართი." });
            ka.Errors.Add(new string[] { "ipv4", ":attribute უნდა იყოს ვალიდური IPv4 მისამართი." });
            ka.Errors.Add(new string[] { "ipv6", ":attribute უნდა იყოს ვალიდური IPv6 მისამართი." });
            ka.Errors.Add(new string[] { "json", ":attribute უნდა იყოს სწორი JSON ტიპის." });
            ka.Errors.Add(new string[] { "lt_list", ":attribute უნდა შეიცავდეს :value ელემენტზე ნაკლებს." });
            ka.Errors.Add(new string[] { "lt_numeric", ":attribute უნდა იყოს :value-ზე ნაკლები." });
            ka.Errors.Add(new string[] { "lt", ":attribute უნდა შეიცავდეს :value სიმბოლოზე ნაკლებს." });
            ka.Errors.Add(new string[] { "lte_list", ":attribute უნდა შეიცავდეს მაქსიმუმ :value ელემენტს." });
            ka.Errors.Add(new string[] { "lte_numeric", ":attribute უნდა იყოს მაქსიმუმ :value." });
            ka.Errors.Add(new string[] { "lte", ":attribute უნდა შეიცავდეს მაქსიმუმ :value სიმბოლოს." });
            ka.Errors.Add(new string[] { "max_list", ":attribute-ს არ უნდა ჰქონდეს :max ელემენტზე მეტი." });
            ka.Errors.Add(new string[] { "max_numeric", ":attribute არ უნდა აღემატებოდეს :max-ს." });
            ka.Errors.Add(new string[] { "max", ":attribute არ უნდა აღემატებოდეს :max სიმბოლოს." });
            ka.Errors.Add(new string[] { "mimes", ":attribute უნდა იყოს შემდეგი ფაილური ტიპის: :values." });
            ka.Errors.Add(new string[] { "min_list", ":attribute-ს უნდა ჰქონდეს მინიმუმ :min ელემენტი." });
            ka.Errors.Add(new string[] { "min_numeric", ":attribute უნდა იყოს მინიმუმ :min." });
            ka.Errors.Add(new string[] { "min", ":attribute უნდა შეიცავდეს მინიმუმ :min სიმბოლოს." });
            ka.Errors.Add(new string[] { "not_in", "არჩეული :attribute არასწორია." });
            ka.Errors.Add(new string[] { "not_regex", ":attribute-ის ფორმატი არასწორია." });
            ka.Errors.Add(new string[] { "numeric", ":attribute უნდა იყოს რიცხვი." });
            ka.Errors.Add(new string[] { "password", "პაროლი არასწორია." });
            ka.Errors.Add(new string[] { "regex", ":attribute-ის ფორმატი არასწორია." });
            ka.Errors.Add(new string[] { "required", ":attribute-ის ველი აუცილებელია." });
            ka.Errors.Add(new string[] { "same", ":attribute და :other უნდა ემთხვეოდეს ერთმანეთს." });
            ka.Errors.Add(new string[] { "size_list", ":attribute უნდა შეიცავდეს :size ელემენტს." });
            ka.Errors.Add(new string[] { "size_numeric", ":attribute უნდა იყოს :size." });
            ka.Errors.Add(new string[] { "size", ":attribute უნდა შედგებოდეს :size სიმბოლოსგან." });
            ka.Errors.Add(new string[] { "starts_with", ":attribute უნდა იწყებოდეს შემდეგიდან ერთ-ერთით: :values." });
            ka.Errors.Add(new string[] { "url", ":attribute-ის ფორმატი არასწორია." });
            ka.Errors.Add(new string[] { "uuid", ":attribute უნდა იყოს ვალიდური UUID." });
            this.Langs.Add(ka);
            var kk = new Lang();
            kk.Name = "kk";
            kk.Errors.Add(new string[] { "accepted", ":attribute қабылдануы керек." });
            kk.Errors.Add(new string[] { "active_url", ":attribute жарамды URL мекенжайы емес." });
            kk.Errors.Add(new string[] { "after", ":attribute мәні :date күнінен кейінгі күн болуы керек." });
            kk.Errors.Add(new string[] { "after_or_equal", ":attribute мәні :date күнінен кейінгі күн немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "alpha", ":attribute тек әріптерден тұруы керек." });
            kk.Errors.Add(new string[] { "alpha_dash", ":attribute тек әріптерден, сандардан және сызықшалардан тұруы керек." });
            kk.Errors.Add(new string[] { "alpha_num", ":attribute тек әріптерден және сандардан тұруы керек." });
            kk.Errors.Add(new string[] { "before", ":attribute мәні :date күнінен дейінгі күн болуы керек." });
            kk.Errors.Add(new string[] { "before_or_equal", ":attribute мәні :date күнінен дейінгі күн немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "between_list", ":attribute жиымы :min және :max аралығындағы элементтерден тұруы керек." });
            kk.Errors.Add(new string[] { "between_numeric", ":attribute мәні :min және :max аралығында болуы керек." });
            kk.Errors.Add(new string[] { "between", ":attribute тармағы :min және :max аралығындағы таңбалардан тұруы керек." });
            kk.Errors.Add(new string[] { "boolean", ":attribute жолы шын немесе жалған мән болуы керек." });
            kk.Errors.Add(new string[] { "confirmed", ":attribute растауы сәйкес емес." });
            kk.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            kk.Errors.Add(new string[] { "different", ":attribute және :other әр түрлі болуы керек." });
            kk.Errors.Add(new string[] { "email", ":attribute жарамды электрондық пошта мекенжайы болуы керек." });
            kk.Errors.Add(new string[] { "ends_with", ":attribute келесі мәндердің біреуінен аяқталуы керек: :values," });
            kk.Errors.Add(new string[] { "gt_list", ":attribute мәні :value элементтерден үлкен болуы керек." });
            kk.Errors.Add(new string[] { "gt_numeric", ":attribute мәні :value үлкен болуы керек." });
            kk.Errors.Add(new string[] { "gt", ":attribute мәні :value таңбалардан үлкен болуы керек." });
            kk.Errors.Add(new string[] { "gte_list", ":attribute мәні :value элементтерден үлкен немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "gte_numeric", ":attribute мәні :value үлкен немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "gte", ":attribute мәні :value таңбалардан үлкен немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "in", "таңдалған :attribute жарамсыз." });
            kk.Errors.Add(new string[] { "integer", ":attribute бүтін сан болуы керек." });
            kk.Errors.Add(new string[] { "ip", ":attribute жарамды IP мекенжайы болуы керек." });
            kk.Errors.Add(new string[] { "ipv4", ":attribute жарамды IPv4 мекенжайы болуы керек." });
            kk.Errors.Add(new string[] { "ipv6", ":attribute жарамды IPv6 мекенжайы болуы керек." });
            kk.Errors.Add(new string[] { "json", ":attribute жарамды JSON тармағы болуы керек." });
            kk.Errors.Add(new string[] { "lt_list", ":attribute мәні :value элементтерден кіші болуы керек." });
            kk.Errors.Add(new string[] { "lt_numeric", ":attribute мәні :value кіші болуы керек." });
            kk.Errors.Add(new string[] { "lt", ":attribute мәні :value таңбалардан кіші болуы керек." });
            kk.Errors.Add(new string[] { "lte_list", ":attribute мәні :value элементтерден кіші немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "lte_numeric", ":attribute мәні :value кіші немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "lte", ":attribute мәні :value таңбалардан кіші немесе тең болуы керек." });
            kk.Errors.Add(new string[] { "max_list", ":attribute жиымының құрамы :max элементтен аспауы керек." });
            kk.Errors.Add(new string[] { "max_numeric", ":attribute мәні :max мәнінен көп болмауы керек." });
            kk.Errors.Add(new string[] { "max", ":attribute тармағы :max таңбадан ұзын болмауы керек." });
            kk.Errors.Add(new string[] { "mimes", ":attribute мынадай файл түрі болуы керек: :values." });
            kk.Errors.Add(new string[] { "min_list", ":attribute кемінде :min элементтен тұруы керек." });
            kk.Errors.Add(new string[] { "min_numeric", ":attribute кемінде :min болуы керек." });
            kk.Errors.Add(new string[] { "min", ":attribute кемінде :min таңбадан тұруы керек." });
            kk.Errors.Add(new string[] { "not_in", "таңдалған :attribute жарамсыз." });
            kk.Errors.Add(new string[] { "not_regex", "таңдалған :attribute форматы жарамсыз." });
            kk.Errors.Add(new string[] { "numeric", ":attribute сан болуы керек." });
            kk.Errors.Add(new string[] { "password", "Қате құпиясөз." });
            kk.Errors.Add(new string[] { "regex", ":attribute пішімі жарамсыз." });
            kk.Errors.Add(new string[] { "required", ":attribute жолы толтырылуы керек." });
            kk.Errors.Add(new string[] { "same", ":attribute және :other сәйкес болуы керек." });
            kk.Errors.Add(new string[] { "size_list", ":attribute жиымы :size элементтен тұруы керек." });
            kk.Errors.Add(new string[] { "size_numeric", ":attribute көлемі :size болуы керек." });
            kk.Errors.Add(new string[] { "size", ":attribute тармағы :size таңбадан тұруы керек." });
            kk.Errors.Add(new string[] { "starts_with", ":attribute келесі мәндердің біреуінен басталуы керек: :values," });
            kk.Errors.Add(new string[] { "url", ":attribute пішімі жарамсыз." });
            kk.Errors.Add(new string[] { "uuid", ":attribute мәні жарамды UUID болуы керек." });
            this.Langs.Add(kk);
            var km = new Lang();
            km.Name = "km";
            km.Errors.Add(new string[] { "accepted", ":attribute ត្រូវតែត្រូវបានទទួលយក។," });
            km.Errors.Add(new string[] { "active_url", ":attribute មិនមែនជា URL ត្រឹមត្រូវឡើយ។," });
            km.Errors.Add(new string[] { "after", ":attribute ត្រូវតែមានកាលបរិច្ឆេទបន្ទាប់ពី :date។," });
            km.Errors.Add(new string[] { "after_or_equal", ":attribute ត្រូវតែជាកាលបរិច្ឆេទ ក្រោយឬស្មើ :date។," });
            km.Errors.Add(new string[] { "alpha", ":attribute អាចមានអក្សរតែប៉ុណ្ណោះ។," });
            km.Errors.Add(new string[] { "alpha_dash", ":attribute អាចមានតែអក្សរ លេខ និងសហសញ្ញា(-)។," });
            km.Errors.Add(new string[] { "alpha_num", ":attribute អាចមានតែអក្សរ និងលេខ។," });
            km.Errors.Add(new string[] { "before", ":attribute ត្រូវតែមានកាលបរិច្ឆេទមុន :date។," });
            km.Errors.Add(new string[] { "before_or_equal", ":attribute ត្រូវតែជាកាលបរិច្ឆេទ មុនឬស្មើ :date។," });
            km.Errors.Add(new string[] { "between_list", ":attribute ត្រូវតែមានចំនួនរវាង :min និង :max។," });
            km.Errors.Add(new string[] { "between_numeric", ":attribute ត្រូវតែមានរវាង :min និង :max។," });
            km.Errors.Add(new string[] { "between", ":attribute ត្រូវតែមានរវាង :min និង :max តួអក្សរ។," });
            km.Errors.Add(new string[] { "boolean", ":attribute ត្រូវតែជា ពិត ឬ មិនពិត," });
            km.Errors.Add(new string[] { "confirmed", ":attribute ការបញ្ជាក់មិនផ្គូរផ្គង។," });
            km.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            km.Errors.Add(new string[] { "different", ":attribute និង :other ត្រូវតែបញ្ជាក់។," });
            km.Errors.Add(new string[] { "email", ":attribute ទម្រង់នេះមិនត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "ends_with", ":attribute ត្រូវបញ្ចប់ដោយពាក្យមួយក្នុងចំណោម :values។," });
            km.Errors.Add(new string[] { "gt_list", ":attribute ត្រូវមានច្រើនជាង :value។," });
            km.Errors.Add(new string[] { "gt_numeric", ":attribute ត្រូវតែធំជាង :value។," });
            km.Errors.Add(new string[] { "gt", ":attribute ត្រូវតែធំជាង :value តួអក្សរ។," });
            km.Errors.Add(new string[] { "gte_list", ":attribute ត្រូវមានចំនួន :value ឬច្រើនជាង។," });
            km.Errors.Add(new string[] { "gte_numeric", ":attribute ត្រូវតែធំជាងឬស្មើ :value។," });
            km.Errors.Add(new string[] { "gte", ":attribute ត្រូវតែធំជាងឬស្មើ :value តួអក្សរ។," });
            km.Errors.Add(new string[] { "in", "ការជ្រើសរើស :attribute មិនត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "integer", ":attribute ត្រូវតែជាចំនួនគត់។," });
            km.Errors.Add(new string[] { "ip", ":attribute ត្រូវតែជា IP address ត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "ipv4", ":attribute ត្រូវតែជា IPv4 address ត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "ipv6", ":attribute ត្រូវតែជា IPv6 address ត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "json", ":attribute ត្រូវតែជា JSON string ត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "lt_list", ":attribute ត្រូវតែមានចំនួនតិចជាង :value។," });
            km.Errors.Add(new string[] { "lt_numeric", ":attribute ត្រូវតែតិចជាង :value។," });
            km.Errors.Add(new string[] { "lt", ":attribute ត្រូវតែតិចជាង :value តួអក្សរ។," });
            km.Errors.Add(new string[] { "lte_list", ":attribute ត្រូវមានចំនួនតិចជាង :value។," });
            km.Errors.Add(new string[] { "lte_numeric", ":attribute ត្រូវតែតិចជាងឬស្មើ :value។," });
            km.Errors.Add(new string[] { "lte", ":attribute ត្រូវតែតិចជាងឬស្មើ :value តួអក្សរ។," });
            km.Errors.Add(new string[] { "max_list", ":attribute មិនត្រូវច្រើនជាងធាតុនេះ :max។," });
            km.Errors.Add(new string[] { "max_numeric", ":attribute មិនត្រូវធំជាង :max។," });
            km.Errors.Add(new string[] { "max", ":attribute មិនត្រូវធំជាង :max តួអក្សរ។," });
            km.Errors.Add(new string[] { "mimes", ":attribute ត្រូវតែជាប្រភេទឯកសារប្រភេទ: :values នេះ។," });
            km.Errors.Add(new string[] { "min_list", ":attribute ត្រូវតែតិចជាងធាតុនេះ :min។," });
            km.Errors.Add(new string[] { "min_numeric", ":attribute ត្រូវតែតូចជាង :min។," });
            km.Errors.Add(new string[] { "min", ":attribute ត្រូវតែតូចជាង :min តួអក្សរ។," });
            km.Errors.Add(new string[] { "not_in", "ការជ្រើសរើស :attribute គឺមិនត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "not_regex", ":attribute ទម្រង់ គឺមិនត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "numeric", ":attribute ត្រូវតែជាលេខ។," });
            km.Errors.Add(new string[] { "password", "ពាក្យសម្ងាត់មិនត្រឺមត្រូវ។," });
            km.Errors.Add(new string[] { "regex", ":attribute ទម្រង់មិនត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "required", ":attribute នេះគឺទាមទារឲ្យមាន។," });
            km.Errors.Add(new string[] { "same", ":attribute និង :other ត្រូវតែដូចគ្នា។," });
            km.Errors.Add(new string[] { "size_list", ":attribute ត្រូវតែមានទំហំ :size។," });
            km.Errors.Add(new string[] { "size_numeric", ":attribute ត្រូវតែ :size។," });
            km.Errors.Add(new string[] { "size", ":attribute ត្រូវតែ :size តួអក្សរ។," });
            km.Errors.Add(new string[] { "starts_with", ":attribute ត្រូវចាប់ផ្តើមដោយ :values ណាមួយ។," });
            km.Errors.Add(new string[] { "url", ":attribute ទម្រង់ត្រឹមត្រូវ។," });
            km.Errors.Add(new string[] { "uuid", ":attribute ត្រូវតែជាទម្រង់ UUID។," });
            this.Langs.Add(km);
            var kn = new Lang();
            kn.Name = "kn";
            kn.Errors.Add(new string[] { "accepted", "ಈ  :attribute  ಒಪ್ಪಿಕೊಳ್ಳಬೇಕು." });
            kn.Errors.Add(new string[] { "active_url", "ಈ  :attribute ಮಾನ್ಯ URL ಆಗಿಲ್ಲ. ," });
            kn.Errors.Add(new string[] { "after", "ಈ  :attribute ದಿನಾಂಕವು   :date ನಂತರದ ದಿನಾಂಕವಾಗಿರಬೇಕು ." });
            kn.Errors.Add(new string[] { "after_or_equal", "ಈ  :attribute ದಿನಾಂಕವು   :date ನಂತರದ ಅಥವಾ ಸಮನಾದ ದಿನಾಂಕವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "alpha", "ಈ  :attribute ಅಕ್ಷರಗಳನ್ನು ಮಾತ್ರ ಹೊಂದಿರಬಹುದು." });
            kn.Errors.Add(new string[] { "alpha_dash", "ಈ  :attribute ಅಕ್ಷರಗಳು, ಸಂಖ್ಯೆಗಳು, ಡ್ಯಾಶ್ಗಳು ಮತ್ತು ಅಂಡರ್ಸ್ಕೋರ್ಗಳನ್ನು ಮಾತ್ರ ಹೊಂದಿರಬಹುದು." });
            kn.Errors.Add(new string[] { "alpha_num", "ಈ  :attribute ಅಕ್ಷರಗಳು ಮತ್ತು ಸಂಖ್ಯೆಗಳನ್ನು ಮಾತ್ರ ಹೊಂದಿರಬಹುದು." });
            kn.Errors.Add(new string[] { "before", "ಈ  :attribute ದಿನಾಂಕವು  :date ಮುಂಚಿನ  ದಿನಾಂಕವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "before_or_equal", "ಈ  :attribute ದಿನಾಂಕವು  :date ಮುಂಚಿನ  ಅಥವಾ ಸಮನಾದ ದಿನಾಂಕವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "between_list", "ಈ  :attribute ನಲ್ಲಿ   :min ಮತ್ತು :max ಐಟಂಗಳ ನಡುವೆ ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "between_numeric", "ಈ  :attribute ನಲ್ಲಿ  :min ಮತ್ತು :max ನಡುವೆ ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "between", "ಈ  :attribute ನಲ್ಲಿ  :min ಮತ್ತು :max ಅಕ್ಷರಗಳ ನಡುವೆ ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "boolean", "ಈ  :attribute ಕ್ಷೇತ್ರವು ನಿಜ ಅಥವಾ ಸುಳ್ಳು ಆಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "confirmed", "ಈ  :attribute ದೃಢೀಕರಣವು ಹೊಂದಿಕೆಯಾಗುವುದಿಲ್ಲ." });
            kn.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            kn.Errors.Add(new string[] { "different", "ಈ  :attribute ಮತ್ತು :other ವಿಭಿನ್ನವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "email", "ಈ  :attribute ಮಾನ್ಯವಾದ ಇಮೇಲ್ ವಿಳಾಸವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "ends_with", "The :attribute must end with one of the following: :values." });
            kn.Errors.Add(new string[] { "gt_list", "ಈ  :attribute ನಲ್ಲಿ  :value ಐಟಂಗಳಿಗಿಂತ   ಹೆಚ್ಚು ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "gt_numeric", "ಈ  :attribute ನಲ್ಲಿ  :value ಗಿಂತ  ಹೆಚ್ಚು ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "gt", "ಈ  :attribute ನಲ್ಲಿ  :value ಅಕ್ಷರಗಳಿಗಿಂತ   ಹೆಚ್ಚು ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "gte_list", "ಈ  :attribute ನಲ್ಲಿ   :value ಐಟಂಗಳಿಗಿಂತ  ಹೆಚ್ಚು ಅಥವಾ ಸಮನಾಗಿರಬೇಕು  ." });
            kn.Errors.Add(new string[] { "gte_numeric", "ಈ  :attribute ನಲ್ಲಿ   :value  ಹೆಚ್ಚು ಅಥವಾ ಸಮನಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "gte", "ಈ  :attribute ನಲ್ಲಿ   :value ಅಕ್ಷರಗಳಿಗಿಂತ  ಹೆಚ್ಚು ಅಥವಾ ಸಮನಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "in", "ಈ  ಆಯ್ಕೆಮಾಡಲಾದ :attribute ಅಮಾನ್ಯವಾಗಿದೆ." });
            kn.Errors.Add(new string[] { "integer", "ಈ  :attribute ಒಂದು ಪೂರ್ಣಾಂಕವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "ip", "ಈ  :attribute ಮಾನ್ಯವಾದ IP ವಿಳಾಸವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "ipv4", "ಈ  :attribute ಮಾನ್ಯವಾದ IPv4 ವಿಳಾಸವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "ipv6", "ಈ  :attribute ಮಾನ್ಯವಾದ IPv6 ವಿಳಾಸವಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "json", "ಈ  :attribute ಮಾನ್ಯವಾದ JSON ಸ್ಟ್ರಿಂಗ್ ಆಗಿರಬೇಕು ." });
            kn.Errors.Add(new string[] { "lt_list", "ಈ  :attribute ನಲ್ಲಿ  :value ಐಟಂಗಳಿಗಿಂತ ಕಡಿಮೆ ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "lt_numeric", "ಈ  :attribute ನಲ್ಲಿ  :value ಗಿಂತ  ಕಡಿಮೆ ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "lt", "ಈ  :attribute ನಲ್ಲಿ  :value ಅಕ್ಷರಗಳಿಗಿಂತ ಕಡಿಮೆ ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "lte_list", "ಈ  :attribute ನಲ್ಲಿ  :value ಐಟಂಗಳಿಗಿಂತ  ಕಡಿಮೆ ಅಥವಾ ಸಮನಾಗಿರಬೇಕು ." });
            kn.Errors.Add(new string[] { "lte_numeric", "ಈ  :attribute ನಲ್ಲಿ  :value ಗಿಂತ  ಕಡಿಮೆ ಅಥವಾ ಸಮನಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "lte", "ಈ  :attribute ನಲ್ಲಿ  :value ಅಕ್ಷರಗಳಿಗಿಂತ  ಕಡಿಮೆ ಅಥವಾ ಸಮನಾಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "max_list", "ಈ  :attribute ನಲ್ಲಿ  :max ಐಟಂಗಳಿಗಿಂತ  ಹೆಚ್ಚು ಇರಬಾರದು ." });
            kn.Errors.Add(new string[] { "max_numeric", "ಈ  :attribute ನಲ್ಲಿ  :max ಗಿಂತ ಹೆಚ್ಚು ಇರಬಾರದು ." });
            kn.Errors.Add(new string[] { "max", "ಈ  :attribute ನಲ್ಲಿ  :max ಅಕ್ಷರಗಳಿಗಿಂತ ಹೆಚ್ಚು ಇರಬಾರದು ." });
            kn.Errors.Add(new string[] { "mimes", "ಈ  :attribute ನಲ್ಲಿ  :values ಬಗೆಯ ಫೈಲ್ ಆಗಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "min_list", "ಈ  :attribute ಕನಿಷ್ಠ :min ಐಟಂಗಳಿರಬೇಕು.  ," });
            kn.Errors.Add(new string[] { "min_numeric", "ಈ  :attribute ಕನಿಷ್ಠ  :min  ಇರಬೇಕು." });
            kn.Errors.Add(new string[] { "min", "ಈ  :attribute ಕನಿಷ್ಠ :min ಅಕ್ಷರಗಳಿರಬೇಕು." });
            kn.Errors.Add(new string[] { "not_in", "ಈ  ಆಯ್ಕೆಮಾಡಲಾದ :attribute ಅಮಾನ್ಯವಾಗಿದೆ." });
            kn.Errors.Add(new string[] { "not_regex", "ಈ  :attribute ಸ್ವರೂಪ ಅಮಾನ್ಯವಾಗಿದೆ." });
            kn.Errors.Add(new string[] { "numeric", "ಈ  :attribute must be a number." });
            kn.Errors.Add(new string[] { "password", "ಪಾಸ್ವರ್ಡ್ ತಪ್ಪಾಗಿದೆ." });
            kn.Errors.Add(new string[] { "regex", "ಈ  :attribute ಸ್ವರೂಪ ಅಮಾನ್ಯವಾಗಿದೆ." });
            kn.Errors.Add(new string[] { "required", "ಈ  :attribute ಕ್ಷೇತ್ರ ಅಗತ್ಯವಿದೆ." });
            kn.Errors.Add(new string[] { "same", "ಈ  :attribute ಮತ್ತು :other ಹೊಂದಾಣಿಕೆಯಾಗಲೇಬೇಕು." });
            kn.Errors.Add(new string[] { "size_list", "ಈ  :attribute ನಲ್ಲಿ   :size ಐಟಂಗಳಿರಲೇಬೇಕು." });
            kn.Errors.Add(new string[] { "size_numeric", "ಈ  :attribute  ನಲ್ಲಿ   :size ಇರಲೇಬೇಕು. ," });
            kn.Errors.Add(new string[] { "size", "ಈ  :attribute ನಲ್ಲಿ   :size ಅಕ್ಷರಗಳಿರಲೇಬೇಕು." });
            kn.Errors.Add(new string[] { "starts_with", "ಈ  :attribute ಕೆಳಗಿನವುಗಳಲ್ಲಿ ಒಂದರಿಂದ  ಪ್ರಾರಂಭಿಸಬೇಕು :  :values," });
            kn.Errors.Add(new string[] { "url", "ಈ  :attribute ಸ್ವರೂಪವು ಅಮಾನ್ಯವಾಗಿದೆ." });
            kn.Errors.Add(new string[] { "uuid", "ಈ  :attribute ಮಾನ್ಯವಾದ UUID ಆಗಿರಬೇಕು." });
            this.Langs.Add(kn);
            var ko = new Lang();
            ko.Name = "ko";
            ko.Errors.Add(new string[] { "accepted", ":attribute을(를) 동의해야 합니다." });
            ko.Errors.Add(new string[] { "active_url", ":attribute은(는) 유효한 URL이 아닙니다." });
            ko.Errors.Add(new string[] { "after", ":attribute은(는) :date 이후 날짜여야 합니다." });
            ko.Errors.Add(new string[] { "after_or_equal", ":attribute은(는) :date 이후 날짜이거나 같은 날짜여야 합니다." });
            ko.Errors.Add(new string[] { "alpha", ":attribute은(는) 문자만 포함할 수 있습니다." });
            ko.Errors.Add(new string[] { "alpha_dash", ":attribute은(는) 문자, 숫자, 대쉬(-), 밑줄(_)만 포함할 수 있습니다." });
            ko.Errors.Add(new string[] { "alpha_num", ":attribute은(는) 문자와 숫자만 포함할 수 있습니다." });
            ko.Errors.Add(new string[] { "before", ":attribute은(는) :date 이전 날짜여야 합니다." });
            ko.Errors.Add(new string[] { "before_or_equal", ":attribute은(는) :date 이전 날짜이거나 같은 날짜여야 합니다." });
            ko.Errors.Add(new string[] { "between_list", ":attribute의 항목 수는 :min에서 :max 개의 항목이 있어야 합니다." });
            ko.Errors.Add(new string[] { "between_numeric", ":attribute의 값은 :min에서 :max 사이여야 합니다." });
            ko.Errors.Add(new string[] { "between", ":attribute의 길이는 :min에서 :max 문자 사이여야 합니다." });
            ko.Errors.Add(new string[] { "boolean", ":attribute은(는) true 또는 false 이어야 합니다." });
            ko.Errors.Add(new string[] { "confirmed", ":attribute 확인 항목이 일치하지 않습니다." });
            ko.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ko.Errors.Add(new string[] { "different", ":attribute와(과) :other은(는) 서로 달라야 합니다." });
            ko.Errors.Add(new string[] { "email", ":attribute은(는) 유효한 이메일 주소여야 합니다." });
            ko.Errors.Add(new string[] { "ends_with", ":attribute은(는) 다음 중 하나로 끝나야 합니다: :values." });
            ko.Errors.Add(new string[] { "gt_list", ":attribute의 항목 수는 :value개 보다 많아야 합니다." });
            ko.Errors.Add(new string[] { "gt_numeric", ":attribute의 값은 :value보다 커야 합니다." });
            ko.Errors.Add(new string[] { "gt", ":attribute의 길이는 :value보다 길어야 합니다." });
            ko.Errors.Add(new string[] { "gte_list", ":attribute의 항목 수는 :value개 보다 같거나 많아야 합니다." });
            ko.Errors.Add(new string[] { "gte_numeric", ":attribute의 값은 :value보다 같거나 커야 합니다." });
            ko.Errors.Add(new string[] { "gte", ":attribute의 길이는 :value보다 같거나 길어야 합니다." });
            ko.Errors.Add(new string[] { "in", "선택된 :attribute은(는) 올바르지 않습니다." });
            ko.Errors.Add(new string[] { "integer", ":attribute은(는) 정수여야 합니다." });
            ko.Errors.Add(new string[] { "ip", ":attribute은(는) 유효한 IP 주소여야 합니다." });
            ko.Errors.Add(new string[] { "ipv4", ":attribute은(는) 유효한 IPv4 주소여야 합니다." });
            ko.Errors.Add(new string[] { "ipv6", ":attribute은(는) 유효한 IPv6 주소여야 합니다." });
            ko.Errors.Add(new string[] { "json", ":attribute은(는) JSON 문자열이어야 합니다." });
            ko.Errors.Add(new string[] { "lt_list", ":attribute의 항목 수는 :value개 보다 작아야 합니다." });
            ko.Errors.Add(new string[] { "lt_numeric", ":attribute의 값은 :value보다 작아야 합니다." });
            ko.Errors.Add(new string[] { "lt", ":attribute의 길이는 :value보다 짧아야 합니다." });
            ko.Errors.Add(new string[] { "lte_list", ":attribute의 항목 수는 :value개 보다 같거나 작아야 합니다." });
            ko.Errors.Add(new string[] { "lte_numeric", ":attribute의 값은 :value보다 같거나 작아야 합니다." });
            ko.Errors.Add(new string[] { "lte", ":attribute의 길이는 :value보다 같거나 짧아야 합니다." });
            ko.Errors.Add(new string[] { "max_list", ":attribute은(는) :max개보다 많을 수 없습니다." });
            ko.Errors.Add(new string[] { "max_numeric", ":attribute은(는) :max보다 클 수 없습니다." });
            ko.Errors.Add(new string[] { "max", ":attribute은(는) :max자보다 클 수 없습니다." });
            ko.Errors.Add(new string[] { "mimes", ":attribute은(는) 다음의 파일 형식이어야 합니다: :values." });
            ko.Errors.Add(new string[] { "min_list", ":attribute은(는) 최소한 :min개의 항목이 있어야 합니다." });
            ko.Errors.Add(new string[] { "min_numeric", ":attribute은(는) 최소한 :min이어야 합니다." });
            ko.Errors.Add(new string[] { "min", ":attribute은(는) 최소한 :min자이어야 합니다." });
            ko.Errors.Add(new string[] { "not_in", "선택된 :attribute이(가) 올바르지 않습니다." });
            ko.Errors.Add(new string[] { "not_regex", ":attribute의 형식이 올바르지 않습니다." });
            ko.Errors.Add(new string[] { "numeric", ":attribute은(는) 숫자여야 합니다." });
            ko.Errors.Add(new string[] { "password", "비밀번호가 잘못되었습니다." });
            ko.Errors.Add(new string[] { "regex", ":attribute 형식이 올바르지 않습니다." });
            ko.Errors.Add(new string[] { "required", ":attribute 필드는 필수입니다." });
            ko.Errors.Add(new string[] { "same", ":attribute와(과) :other은(는) 일치해야 합니다." });
            ko.Errors.Add(new string[] { "size_list", ":attribute은(는) :size개의 항목을 포함해야 합니다." });
            ko.Errors.Add(new string[] { "size_numeric", ":attribute은(는) :size (이)여야 합니다." });
            ko.Errors.Add(new string[] { "size", ":attribute은(는) :size자여야 합니다." });
            ko.Errors.Add(new string[] { "starts_with", ":attribute은(는) :values 중 하나로 시작해야 합니다." });
            ko.Errors.Add(new string[] { "url", ":attribute 형식은 올바르지 않습니다." });
            ko.Errors.Add(new string[] { "uuid", ":attribute은(는) 유효한UUID여야합니다." });
            this.Langs.Add(ko);
            var lt = new Lang();
            lt.Name = "lt";
            lt.Errors.Add(new string[] { "accepted", "Laukas :attribute turi būti priimtas." });
            lt.Errors.Add(new string[] { "active_url", "Laukas :attribute nėra galiojantis internetinis adresas." });
            lt.Errors.Add(new string[] { "after", "Lauko :attribute reikšmė turi būti po :date datos." });
            lt.Errors.Add(new string[] { "after_or_equal", "Lauko :attribute reikšmė privalo būti data lygi arba vėlesnė negu :date." });
            lt.Errors.Add(new string[] { "alpha", "Laukas :attribute gali turėti tik raides." });
            lt.Errors.Add(new string[] { "alpha_dash", "Laukas :attribute gali turėti tik raides, skaičius ir brūkšnelius." });
            lt.Errors.Add(new string[] { "alpha_num", "Laukas :attribute gali turėti tik raides ir skaičius." });
            lt.Errors.Add(new string[] { "before", "Laukas :attribute turi būti data prieš :date." });
            lt.Errors.Add(new string[] { "before_or_equal", "Lauko :attribute reikšmė privalo būti data lygi arba ankstesnė negu :date." });
            lt.Errors.Add(new string[] { "between_list", "Elementų skaičius lauke :attribute turi turėti nuo :min iki :max." });
            lt.Errors.Add(new string[] { "between_numeric", "Lauko :attribute reikšmė turi būti tarp :min ir :max." });
            lt.Errors.Add(new string[] { "between", "Simbolių skaičius lauke :attribute turi būti tarp :min ir :max." });
            lt.Errors.Add(new string[] { "boolean", "Lauko reikšmė :attribute turi būti taip arba ne." });
            lt.Errors.Add(new string[] { "confirmed", "Lauko :attribute patvirtinimas nesutampa." });
            lt.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            lt.Errors.Add(new string[] { "different", "Laukų :attribute ir :other reikšmės turi skirtis." });
            lt.Errors.Add(new string[] { "email", "Lauko :attribute reikšmė turi būti galiojantis el. pašto adresas." });
            lt.Errors.Add(new string[] { "ends_with", "Laukas :attribute turi baigtis vienu iš: :values," });
            lt.Errors.Add(new string[] { "gt_list", "Laukas :attribute turi turėti daugiau nei :value elementus." });
            lt.Errors.Add(new string[] { "gt_numeric", "Lauko :attribute reikšmė turi būti didesnė negu :value." });
            lt.Errors.Add(new string[] { "gt", "Lauko :attribute reikšmė turi būti didesnė negu :value simboliai." });
            lt.Errors.Add(new string[] { "gte_list", "Laukas :attribute turi turėti :value elementus arba daugiau." });
            lt.Errors.Add(new string[] { "gte_numeric", "Lauko :attribute reikšmė turi būti didesnė arba lygi :value." });
            lt.Errors.Add(new string[] { "gte", "Lauko :attribute reikšmė turi būti didesnė arba lygi :value simboliams." });
            lt.Errors.Add(new string[] { "in", "Pasirinkta negaliojanti :attribute reikšmė." });
            lt.Errors.Add(new string[] { "integer", "Lauko :attribute reikšmė turi būti sveikasis skaičius." });
            lt.Errors.Add(new string[] { "ip", "Lauko :attribute reikšmė turi būti galiojantis IP adresas." });
            lt.Errors.Add(new string[] { "ipv4", "Lauko :attribute reikšmė turi būti galiojantis IPv4 adresas." });
            lt.Errors.Add(new string[] { "ipv6", "Lauko :attribute reikšmė turi būti galiojantis IPv6 adresas." });
            lt.Errors.Add(new string[] { "json", "Lauko :attribute reikšmė turi būti JSON tekstas." });
            lt.Errors.Add(new string[] { "lt_list", "Laukas :attribute turi turėti mažiau negu :value elementus." });
            lt.Errors.Add(new string[] { "lt_numeric", "Lauko :attribute reikšmė turi būti mažesnė negu :value." });
            lt.Errors.Add(new string[] { "lt", "Lauko :attribute reikšmė turi būti mažesnė negu :value simboliai." });
            lt.Errors.Add(new string[] { "lte_list", "Laukas :attribute turi turėti mažiau arba lygiai :value elementus." });
            lt.Errors.Add(new string[] { "lte_numeric", "Lauko :attribute reikšmė turi būti mažesnė arba lygi :value." });
            lt.Errors.Add(new string[] { "lte", "Lauko :attribute reikšmė turi būti mažesnė arba lygi :value simboliams." });
            lt.Errors.Add(new string[] { "max_list", "Elementų kiekis lauke :attribute negali turėti daugiau nei :max elementų." });
            lt.Errors.Add(new string[] { "max_numeric", "Lauko :attribute reikšmė negali būti didesnė nei :max." });
            lt.Errors.Add(new string[] { "max", "Simbolių kiekis lauke :attribute reikšmė negali būti didesnė nei :max simbolių." });
            lt.Errors.Add(new string[] { "mimes", "Lauko reikšmė :attribute turi būti failas vieno iš sekančių tipų: :values." });
            lt.Errors.Add(new string[] { "min_list", "Elementų kiekis lauke :attribute turi būti ne mažiau nei :min." });
            lt.Errors.Add(new string[] { "min_numeric", "Lauko :attribute reikšmė turi būti ne mažesnė nei :min." });
            lt.Errors.Add(new string[] { "min", "Simbolių kiekis lauke :attribute turi būti ne mažiau nei :min." });
            lt.Errors.Add(new string[] { "not_in", "Pasirinkta negaliojanti reikšmė :attribute." });
            lt.Errors.Add(new string[] { "not_regex", "Lauko :attribute formatas yra neteisingas." });
            lt.Errors.Add(new string[] { "numeric", "Lauko :attribute reikšmė turi būti skaičius." });
            lt.Errors.Add(new string[] { "password", "Slaptažodis neteisingas." });
            lt.Errors.Add(new string[] { "regex", "Negaliojantis lauko :attribute formatas." });
            lt.Errors.Add(new string[] { "required", "Privaloma užpildyti lauką :attribute." });
            lt.Errors.Add(new string[] { "same", "Laukai :attribute ir :other turi sutapti." });
            lt.Errors.Add(new string[] { "size_list", "Elementų kiekis lauke :attribute turi būti :size." });
            lt.Errors.Add(new string[] { "size_numeric", "Lauko :attribute reikšmė turi būti :size." });
            lt.Errors.Add(new string[] { "size", "Simbolių skaičius lauke :attribute turi būti :size." });
            lt.Errors.Add(new string[] { "starts_with", "Laukas :attribute turi prasidėti vienu iš: :values," });
            lt.Errors.Add(new string[] { "url", "Negaliojantis lauko :attribute formatas." });
            lt.Errors.Add(new string[] { "uuid", "Lauko :attribute reikšmė turi būti galiojantis UUID." });
            this.Langs.Add(lt);
            var lv = new Lang();
            lv.Name = "lv";
            lv.Errors.Add(new string[] { "accepted", ":attribute ir jābūt pieņemtam." });
            lv.Errors.Add(new string[] { "active_url", ":attribute ir ar nederīgu saiti." });
            lv.Errors.Add(new string[] { "after", ":attribute ir jābūt ar datumu pēc :date." });
            lv.Errors.Add(new string[] { "after_or_equal", ":attribute ir jābūt ar datumu pēc vai vienādu ar :date." });
            lv.Errors.Add(new string[] { "alpha", ":attribute var saturēt tikai burtus." });
            lv.Errors.Add(new string[] { "alpha_dash", ":attribute var saturēt tikai burtus, numurus un atstarpes." });
            lv.Errors.Add(new string[] { "alpha_num", ":attribute var tikai saturēt burtus un numurus." });
            lv.Errors.Add(new string[] { "before", ":attribute ir jābūt ar datumu pirms :date." });
            lv.Errors.Add(new string[] { "before_or_equal", ":attribute ir jābūt ar datumu pirms vai vienādu ar :date." });
            lv.Errors.Add(new string[] { "between_list", ":attribute jābūt no :min līdz :max vienībām." });
            lv.Errors.Add(new string[] { "between_numeric", ":attribute jābūt starp :min un :max." });
            lv.Errors.Add(new string[] { "between", ":attribute jābūt no :min līdz :max zīmēm." });
            lv.Errors.Add(new string[] { "boolean", ":attribute lauciņam jābūt patiesam vai nepatiesam." });
            lv.Errors.Add(new string[] { "confirmed", ":attribute apstiprinājums neatbilst." });
            lv.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            lv.Errors.Add(new string[] { "different", ":attribute un :other ir jābūt atšķirīgiem." });
            lv.Errors.Add(new string[] { "email", ":attribute ir jābūt derīgai e-pasta adresei." });
            lv.Errors.Add(new string[] { "ends_with", ":attribute jābeidzas ar vienu no šiem: :values." });
            lv.Errors.Add(new string[] { "gt_list", ":attribute jābūt vairāk nekā :value vienībām." });
            lv.Errors.Add(new string[] { "gt_numeric", ":attribute jābūt lielākam par :value." });
            lv.Errors.Add(new string[] { "gt", ":attribute jāpārsniedz :value rakstzīmes." });
            lv.Errors.Add(new string[] { "gte_list", ":attribute jābūt :value vai vairāk vienībām." });
            lv.Errors.Add(new string[] { "gte_numeric", ":attribute jābūt lielākam vai vienādam ar :value." });
            lv.Errors.Add(new string[] { "gte", ":attribute garumam jābūt lielākam vai vienādam ar :value rakstzīmēm." });
            lv.Errors.Add(new string[] { "in", "Izvēlētais :attribute ir nederīgs." });
            lv.Errors.Add(new string[] { "integer", ":attribute ir jābūt skaitlim." });
            lv.Errors.Add(new string[] { "ip", ":attribute jābūt derīgai IP adresei." });
            lv.Errors.Add(new string[] { "ipv4", ":attribute jābūt derīgai IPv4 adresei." });
            lv.Errors.Add(new string[] { "ipv6", ":attribute jābūt derīgai IPv6 adresei." });
            lv.Errors.Add(new string[] { "json", ":attribute jābūt derīgai JSON virknei." });
            lv.Errors.Add(new string[] { "lt_list", ":attribute jābūt mazāk nekā :value vienībām." });
            lv.Errors.Add(new string[] { "lt_numeric", ":attribute jābūt mazākam nekā :value." });
            lv.Errors.Add(new string[] { "lt", ":attribute nedrīkst pārsniegt :value rakstzīmes." });
            lv.Errors.Add(new string[] { "lte_list", ":attribute nedrīkst būt vairāk par :value vienībām." });
            lv.Errors.Add(new string[] { "lte_numeric", ":attribute jābūt mazākam vai vienādam ar :value." });
            lv.Errors.Add(new string[] { "lte", ":attribute nedrīkst pārsniegt :value rakstzīmes." });
            lv.Errors.Add(new string[] { "max_list", ":attribute nedrīkst pārsniegt :max vienības." });
            lv.Errors.Add(new string[] { "max_numeric", ":attribute nedrīkst pārsniegt :max." });
            lv.Errors.Add(new string[] { "max", ":attribute nedrīkst pārsniegt :max rakstzīmes." });
            lv.Errors.Add(new string[] { "mimes", ":attribute jābūt faila tipam: :values," });
            lv.Errors.Add(new string[] { "min_list", ":attribute jāsatur vismaz :min vienības." });
            lv.Errors.Add(new string[] { "min_numeric", ":attribute jābūt vismaz :min." });
            lv.Errors.Add(new string[] { "min", ":attribute jābūt vismaz :min rakstzīmēm." });
            lv.Errors.Add(new string[] { "not_in", "izvēlētais :attribute ir nederīgs." });
            lv.Errors.Add(new string[] { "not_regex", ":attribute formāts ir nederīgs." });
            lv.Errors.Add(new string[] { "numeric", ":attribute jābūt skaitlim." });
            lv.Errors.Add(new string[] { "password", "Parole ir nepareiza." });
            lv.Errors.Add(new string[] { "regex", ":attribute formāts ir nederīgs." });
            lv.Errors.Add(new string[] { "required", ":attribute lauks ir obligāts." });
            lv.Errors.Add(new string[] { "same", ":attribute un :other ir jāsakrīt." });
            lv.Errors.Add(new string[] { "size_list", ":attribute jāsatur :size vienības." });
            lv.Errors.Add(new string[] { "size_numeric", ":attribute jābūt :size." });
            lv.Errors.Add(new string[] { "size", ":attribute jābūt :size rakstzīmēm." });
            lv.Errors.Add(new string[] { "starts_with", ":attribute jāsākas ar kādu no šiem: :values," });
            lv.Errors.Add(new string[] { "url", ":attribute formāts ir nederīgs." });
            lv.Errors.Add(new string[] { "uuid", ":attribute jābūt derīgam UUID." });
            this.Langs.Add(lv);
            var mk = new Lang();
            mk.Name = "mk";
            mk.Errors.Add(new string[] { "accepted", "Полето :attribute мора да биде прифатено." });
            mk.Errors.Add(new string[] { "active_url", "Полето :attribute не е валиден URL." });
            mk.Errors.Add(new string[] { "after", "Полето :attribute мора да биде датум после :date." });
            mk.Errors.Add(new string[] { "after_or_equal", "Полето :attribute мора да биде датум кој е после или еднаков на :date." });
            mk.Errors.Add(new string[] { "alpha", "Полето :attribute може да содржи само букви." });
            mk.Errors.Add(new string[] { "alpha_dash", "Полето :attribute може да содржи само букви, броеви, долна црта и тире." });
            mk.Errors.Add(new string[] { "alpha_num", "Полето :attribute може да содржи само букви и броеви." });
            mk.Errors.Add(new string[] { "before", "Полето :attribute мора да биде датум пред :date." });
            mk.Errors.Add(new string[] { "before_or_equal", "Полето :attribute мора да биде датум пред или еднаков на :date." });
            mk.Errors.Add(new string[] { "between_list", "Полето :attribute мора да има помеѓу :min - :max елементи." });
            mk.Errors.Add(new string[] { "between_numeric", "Полето :attribute мора да биде број помеѓу :min и :max." });
            mk.Errors.Add(new string[] { "between", "Полето :attribute мора да биде текст со должина помеѓу :min и :max карактери." });
            mk.Errors.Add(new string[] { "boolean", "Полето :attribute мора да има вредност вистинито (true) или невистинито (false)." });
            mk.Errors.Add(new string[] { "confirmed", "Полето :attribute не е потврдено." });
            mk.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            mk.Errors.Add(new string[] { "different", "Полињата :attribute и :other треба да се различни." });
            mk.Errors.Add(new string[] { "email", "Полето :attribute не е во валиден формат." });
            mk.Errors.Add(new string[] { "ends_with", "Полето :attribute мора да завршува со една од следните вредности: :values." });
            mk.Errors.Add(new string[] { "gt_list", "Полето :attribute мора да има повеке од :value елементи." });
            mk.Errors.Add(new string[] { "gt_numeric", "Полето :attribute мора да биде број поголем од :value." });
            mk.Errors.Add(new string[] { "gt", "Полето :attribute мора да биде текст со повеќе од :value карактери." });
            mk.Errors.Add(new string[] { "gte_list", "Полето :attribute мора да има :value елементи или повеќе." });
            mk.Errors.Add(new string[] { "gte_numeric", "Полето :attribute мора да биде број поголем или еднаков на :value." });
            mk.Errors.Add(new string[] { "gte", "Полето :attribute мора да биде текст со повеќе или еднаков на :value број на карактери." });
            mk.Errors.Add(new string[] { "in", "Избраното поле :attribute е невалидно." });
            mk.Errors.Add(new string[] { "integer", "Полето :attribute мора да биде цел број." });
            mk.Errors.Add(new string[] { "ip", "Полето :attribute мора да биде валидна IP адреса." });
            mk.Errors.Add(new string[] { "ipv4", "Полето :attribute мора да биде валидна IPv4 адреса." });
            mk.Errors.Add(new string[] { "ipv6", "Полето :attribute мора да биде валидна IPv6 адреса." });
            mk.Errors.Add(new string[] { "json", "Полето :attribute мора да биде валиден JSON објект." });
            mk.Errors.Add(new string[] { "lt_list", "Полето :attribute мора да има помалку од :value елементи." });
            mk.Errors.Add(new string[] { "lt_numeric", "Полето :attribute мора да биде број помал од :value." });
            mk.Errors.Add(new string[] { "lt", "Полето :attribute мора да биде текст помал од :value број на карактери." });
            mk.Errors.Add(new string[] { "lte_list", "Полето :attribute мора да има :value елементи или помалку." });
            mk.Errors.Add(new string[] { "lte_numeric", "Полето :attribute мора да биде број помал или еднаков на :value." });
            mk.Errors.Add(new string[] { "lte", "Полето :attribute мора да биде текст со помалку или еднаков на :value број на карактери." });
            mk.Errors.Add(new string[] { "max_list", "Полето :attribute не може да има повеќе од :max елементи." });
            mk.Errors.Add(new string[] { "max_numeric", "Полето :attribute мора да биде број не поголем од :max." });
            mk.Errors.Add(new string[] { "max", "Полето :attribute мора да има не повеќе од :max карактери." });
            mk.Errors.Add(new string[] { "mimes", "Полето :attribute мора да биде датотека од типот: :values." });
            mk.Errors.Add(new string[] { "min_list", "Полето :attribute мора да има минимум :min елементи." });
            mk.Errors.Add(new string[] { "min_numeric", "Полето :attribute мора да биде број не помал од :min." });
            mk.Errors.Add(new string[] { "min", "Полето :attribute мора да има не помалку од :min карактери." });
            mk.Errors.Add(new string[] { "not_in", "Избраното поле :attribute е невалидно." });
            mk.Errors.Add(new string[] { "not_regex", "Полето :attribute има невалиден формат." });
            mk.Errors.Add(new string[] { "numeric", "Полето :attribute мора да биде број." });
            mk.Errors.Add(new string[] { "password", "Лозинката не е точна." });
            mk.Errors.Add(new string[] { "regex", "Полето :attribute има невалиден формат." });
            mk.Errors.Add(new string[] { "required", "Полето :attribute е задолжително." });
            mk.Errors.Add(new string[] { "same", "Полињата :attribute и :other треба да совпаѓаат." });
            mk.Errors.Add(new string[] { "size_list", "Полето :attribute мора да биде низа со :size број на елементи." });
            mk.Errors.Add(new string[] { "size_numeric", "Полето :attribute мора да биде број со вредност :size." });
            mk.Errors.Add(new string[] { "size", "Полето :attribute мора да биде текст со должина од :size број на карактери." });
            mk.Errors.Add(new string[] { "starts_with", "Полето :attribute мора да започнува со една од следните вредности: :values." });
            mk.Errors.Add(new string[] { "url", "Полето :attribute не е во валиден формат." });
            mk.Errors.Add(new string[] { "uuid", "Полето :attribute мора да биде валиден УУИД." });
            this.Langs.Add(mk);
            var mn = new Lang();
            mn.Name = "mn";
            mn.Errors.Add(new string[] { "accepted", ":attribute баталсан байх шаардлагатай." });
            mn.Errors.Add(new string[] { "active_url", ":attribute талбарт зөв URL хаяг оруулна уу." });
            mn.Errors.Add(new string[] { "after", ":attribute талбарт :date-с хойш огноо оруулна уу." });
            mn.Errors.Add(new string[] { "after_or_equal", ":attribute талбарт :date эсвэл түүнээс хойш огноо оруулна уу." });
            mn.Errors.Add(new string[] { "alpha", ":attribute талбарт латин үсэг оруулна уу." });
            mn.Errors.Add(new string[] { "alpha_dash", ":attribute талбарт латин үсэг, тоо болон зураас оруулах боломжтой." });
            mn.Errors.Add(new string[] { "alpha_num", ":attribute талбарт латин үсэг болон тоо оруулах боломжтой." });
            mn.Errors.Add(new string[] { "before", ":attribute талбарт :date-с өмнөх огноо оруулна уу." });
            mn.Errors.Add(new string[] { "before_or_equal", ":attribute талбарт :date эсвэл түүнээс өмнөх огноо оруулна уу." });
            mn.Errors.Add(new string[] { "between_list", ":Attribute массивт :min-:max элемэнт байх шаардлагатай." });
            mn.Errors.Add(new string[] { "between_numeric", ":Attribute талбарт :min-:max хооронд тоо оруулна уу." });
            mn.Errors.Add(new string[] { "between", ":Attribute талбарт :min-:max урттай текст оруулна уу." });
            mn.Errors.Add(new string[] { "boolean", ":attribute талбарын утга үнэн эсвэл худал байх шаардлагатай." });
            mn.Errors.Add(new string[] { "confirmed", ":attribute талбарын баталагажуулалт тохирохгүй байна." });
            mn.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            mn.Errors.Add(new string[] { "different", ":attribute талбарт :other -с өөр утга оруулах шаардлагатай." });
            mn.Errors.Add(new string[] { "email", ":attribute талбарт зөв и-мэйл хаяг оруулах шаардлагатай." });
            mn.Errors.Add(new string[] { "ends_with", ":attribute дараах аль нэгийг нь дуусгах естой: :values." });
            mn.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            mn.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            mn.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            mn.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            mn.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            mn.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            mn.Errors.Add(new string[] { "in", "Сонгогдсон :attribute буруу байна." });
            mn.Errors.Add(new string[] { "integer", ":attribute талбарт бүхэл тоо оруулах шаардлагатай." });
            mn.Errors.Add(new string[] { "ip", ":attribute талбарт зөв IP хаяг оруулах шаардлагатай." });
            mn.Errors.Add(new string[] { "ipv4", ":attribute нь хүчинтэй ЦТ 4-р хаяг байх естой." });
            mn.Errors.Add(new string[] { "ipv6", ":attribute нь хүчин төгөлдөр Атв6 хаяг байх естой." });
            mn.Errors.Add(new string[] { "json", ":attribute талбарт зөв JSON тэмдэгт мөр оруулах шаардлагатай." });
            mn.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            mn.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            mn.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            mn.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            mn.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            mn.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            mn.Errors.Add(new string[] { "max_list", ":Attribute талбарт хамгийн ихдээ :max элемэнт оруулах боломжтой." });
            mn.Errors.Add(new string[] { "max_numeric", ":Attribute талбарт :max буюу түүнээс бага утга оруулна уу." });
            mn.Errors.Add(new string[] { "max", ":Attribute талбарт :max-с бага урттай текст оруулна уу." });
            mn.Errors.Add(new string[] { "mimes", ":attribute талбарт дараах төрлийн файл оруулах боломжтой: :values." });
            mn.Errors.Add(new string[] { "min_list", ":Attribute талбарт хамгийн багадаа :min элемэнт оруулах боломжтой." });
            mn.Errors.Add(new string[] { "min_numeric", ":Attribute талбарт :min буюу түүнээс их тоо оруулна уу." });
            mn.Errors.Add(new string[] { "min", ":Attribute талбарт :min буюу түүнээс их үсэг бүхий текст оруулна уу." });
            mn.Errors.Add(new string[] { "not_in", "Буруу :attribute сонгогдсон байна." });
            mn.Errors.Add(new string[] { "not_regex", ":attribute хэлбэр нь хүчин төгөлдөр бус байна." });
            mn.Errors.Add(new string[] { "numeric", ":attribute талбарт тоон утга оруулна уу." });
            mn.Errors.Add(new string[] { "password", "Нууц үг буруу." });
            mn.Errors.Add(new string[] { "regex", ":attribute талбарт оруулсан утга буруу байна." });
            mn.Errors.Add(new string[] { "required", ":attribute талбар шаардлагатай." });
            mn.Errors.Add(new string[] { "same", ":attribute болон :other тохирох естой." });
            mn.Errors.Add(new string[] { "size_list", ":Attribute :size элемэнттэй байх шаардлагатай." });
            mn.Errors.Add(new string[] { "size_numeric", ":Attribute :size хэмжээтэй байх шаардлагатай." });
            mn.Errors.Add(new string[] { "size", ":Attribute :size тэмдэгтийн урттай байх шаардлагатай." });
            mn.Errors.Add(new string[] { "starts_with", ":attribute дараах аль нэг нь эхлэх естой: :values." });
            mn.Errors.Add(new string[] { "url", ":attribute зөв url хаяг оруулна уу." });
            mn.Errors.Add(new string[] { "uuid", ":attribute хүчин төгөлдөр хуучин төгөлдөр улс байх естой." });
            this.Langs.Add(mn);
            var mr = new Lang();
            mr.Name = "mr";
            mr.Errors.Add(new string[] { "accepted", ":attribute ला स्वीकार केला गेला पाहिजे." });
            mr.Errors.Add(new string[] { "active_url", ":attribute हा एक बरोबर URL नाही आहे." });
            mr.Errors.Add(new string[] { "after", ":attribute, :date नंतरची एक तारीख पाहिजे." });
            mr.Errors.Add(new string[] { "after_or_equal", ":attribute, :date हि किंवा त्या नंतरची एक तारीख पाहिजे." });
            mr.Errors.Add(new string[] { "alpha", ":attribute मध्ये फक्त अक्षरे वैध आहेत." });
            mr.Errors.Add(new string[] { "alpha_dash", ":attribute मध्ये फक्त अक्षरे, संख्या आणि डॅश वैध आहेत." });
            mr.Errors.Add(new string[] { "alpha_num", ":attribute मध्ये फक्त अक्षरे आणि संख्या वैध आहेत." });
            mr.Errors.Add(new string[] { "before", ":attribute, :date आधीची एक तारीख पाहिजे." });
            mr.Errors.Add(new string[] { "before_or_equal", ":attribute, :date हि किंवा त्या आधीची एक तारीख पाहिजे." });
            mr.Errors.Add(new string[] { "between_list", ":attribute, :min किंवा :max संख्या यामध्ये असावी." });
            mr.Errors.Add(new string[] { "between_numeric", ":attribute, :min किंवा :max यामध्ये असावी." });
            mr.Errors.Add(new string[] { "between", ":attribute, :min किंवा :max शब्द यामध्ये असावी." });
            mr.Errors.Add(new string[] { "boolean", ":attribute फील्ड योग्य किंवा चुकीचे असावे." });
            mr.Errors.Add(new string[] { "confirmed", ":attribute पुष्टीकरण जुळत नाही." });
            mr.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            mr.Errors.Add(new string[] { "different", ":attribute आणि :other वेगळे असावे." });
            mr.Errors.Add(new string[] { "email", ":attribute एक वैध ईमेल पत्ता असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "ends_with", ":attribute खालील एक समाप्त करणे आवश्यक आहे: :values." });
            mr.Errors.Add(new string[] { "gt_list", ":attribute, :value संख्या पेक्षा जास्त असावी." });
            mr.Errors.Add(new string[] { "gt_numeric", ":attribute, :value पेक्षा जास्त असावी." });
            mr.Errors.Add(new string[] { "gt", ":attribute, :value characters पेक्षा जास्त असावी." });
            mr.Errors.Add(new string[] { "gte_list", ":attribute, :value संख्या पेक्षा मोठे किंवा समान असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "gte_numeric", ":attribute, :value पेक्षा मोठे किंवा समान असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "gte", ":attribute, :value शब्दांपेक्षा मोठे किंवा समान असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "in", ":attribute अमान्य आहे." });
            mr.Errors.Add(new string[] { "integer", ":attribute एक पूर्णांक असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "ip", ":attribute एक वैध IP address असावा." });
            mr.Errors.Add(new string[] { "ipv4", ":attribute एक वैध IPv4 address असावा." });
            mr.Errors.Add(new string[] { "ipv6", ":attribute एक वैध IPv6 address असावा." });
            mr.Errors.Add(new string[] { "json", ":attribute एक वैध JSON स्ट्रिंग असावा." });
            mr.Errors.Add(new string[] { "lt_list", ":attribute, :value संख्या पेक्षा कमी असावी." });
            mr.Errors.Add(new string[] { "lt_numeric", ":attribute, :value पेक्षा कमी असावी." });
            mr.Errors.Add(new string[] { "lt", ":attribute, :value वर्णांपेक्षा पेक्षा कमी असावी." });
            mr.Errors.Add(new string[] { "lte_list", ":attribute, :value संख्या पेक्षा कमी किंवा समान असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "lte_numeric", ":attribute, :value पेक्षा कमी किंवा समान असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "lte", ":attribute, :value शब्दांपेक्षा कमी किंवा समान असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "max_list", ":attribute, :value संख्या पेक्षा कमी असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "max_numeric", ":attribute, :value पेक्षा कमी असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "max", ":attribute, :value शब्दांपेक्षा कमी असणे आवश्यक आहे." });
            mr.Errors.Add(new string[] { "mimes", ":attribute एक प्रकार ची फ़ाइल: :values असावी." });
            mr.Errors.Add(new string[] { "min_list", ":attribute कमीत कमी :min आइटम असावी." });
            mr.Errors.Add(new string[] { "min_numeric", ":attribute कमीत कमी :min असावी." });
            mr.Errors.Add(new string[] { "min", ":attribute कमीत कमी :min शब्द असावी." });
            mr.Errors.Add(new string[] { "not_in", "घेतलेला :attribute वैध नाही." });
            mr.Errors.Add(new string[] { "not_regex", ":attribute प्रारूप वैध नाही." });
            mr.Errors.Add(new string[] { "numeric", ":attribute एक संख्या असावी." });
            mr.Errors.Add(new string[] { "password", "गुप्तशब्द अयोग्य आहे." });
            mr.Errors.Add(new string[] { "regex", ":attribute फॉर्मेट वैध नाही." });
            mr.Errors.Add(new string[] { "required", ":attribute फील्ड आवश्यक आहे." });
            mr.Errors.Add(new string[] { "same", ":attribute आणि :other सामान असावेत." });
            mr.Errors.Add(new string[] { "size_list", ":attribute में :size आइटम असावी." });
            mr.Errors.Add(new string[] { "size_numeric", ":attribute, :size असावी." });
            mr.Errors.Add(new string[] { "size", ":attribute, :size शब्द असावी." });
            mr.Errors.Add(new string[] { "starts_with", ":attribute खालीलपैकी कोणत्याही अक्षराने सुरूवात करावी: :values," });
            mr.Errors.Add(new string[] { "url", ":attribute फॉर्मेट अमान्य आहे." });
            mr.Errors.Add(new string[] { "uuid", ":attribute एक वैध UUID असावी." });
            this.Langs.Add(mr);
            var ms = new Lang();
            ms.Name = "ms";
            ms.Errors.Add(new string[] { "accepted", ":attribute mesti diterima pakai." });
            ms.Errors.Add(new string[] { "active_url", ":attribute bukan URL yang sah." });
            ms.Errors.Add(new string[] { "after", ":attribute mesti tarikh selepas :date." });
            ms.Errors.Add(new string[] { "after_or_equal", ":attribute mesti tarikh selepas atau sama dengan :date." });
            ms.Errors.Add(new string[] { "alpha", ":attribute hanya boleh mengandungi huruf." });
            ms.Errors.Add(new string[] { "alpha_dash", ":attribute boleh mengandungi huruf, nombor, dan sengkang." });
            ms.Errors.Add(new string[] { "alpha_num", ":attribute boleh mengandungi huruf dan nombor." });
            ms.Errors.Add(new string[] { "before", ":attribute mesti tarikh sebelum :date." });
            ms.Errors.Add(new string[] { "before_or_equal", ":attribute mesti tarikh sebelum atau sama dengan :date." });
            ms.Errors.Add(new string[] { "between_list", ":attribute mesti mengandungi antara :min dan :max perkara." });
            ms.Errors.Add(new string[] { "between_numeric", ":attribute mesti mengandungi antara :min dan :max." });
            ms.Errors.Add(new string[] { "between", ":attribute mesti mengandungi antara :min dan :max aksara." });
            ms.Errors.Add(new string[] { "boolean", ":attribute mesti benar atau salah." });
            ms.Errors.Add(new string[] { "confirmed", ":attribute pengesahan yang tidak sepadan." });
            ms.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ms.Errors.Add(new string[] { "different", ":attribute dan :other mesti berlainan." });
            ms.Errors.Add(new string[] { "email", ":attribute tidak sah." });
            ms.Errors.Add(new string[] { "ends_with", ":attribute mesti berakhir dengan salah satu dari: :values." });
            ms.Errors.Add(new string[] { "gt_list", ":attribute mesti mengandungi lebih daripada :value perkara." });
            ms.Errors.Add(new string[] { "gt_numeric", ":attribute mesti melebihi :value." });
            ms.Errors.Add(new string[] { "gt", ":attribute mesti melebihi :value aksara." });
            ms.Errors.Add(new string[] { "gte_list", ":attribute mesti mengandungi :value perkara atau lebih." });
            ms.Errors.Add(new string[] { "gte_numeric", ":attribute mesti melebihi atau bersamaan :value." });
            ms.Errors.Add(new string[] { "gte", ":attribute mesti melebihi atau bersamaan :value aksara." });
            ms.Errors.Add(new string[] { "in", ":attribute tidak sah." });
            ms.Errors.Add(new string[] { "integer", ":attribute mesti integer." });
            ms.Errors.Add(new string[] { "ip", ":attribute mesti alamat IP yang sah." });
            ms.Errors.Add(new string[] { "ipv4", ":attribute mesti alamat IPv4 yang sah." });
            ms.Errors.Add(new string[] { "ipv6", ":attribute mesti alamat IPv6 yang sah," });
            ms.Errors.Add(new string[] { "json", ":attribute mesti JSON yang sah." });
            ms.Errors.Add(new string[] { "lt_list", ":attribute mesti mengandungi kurang daripada :value perkara." });
            ms.Errors.Add(new string[] { "lt_numeric", ":attribute mesti kurang daripada :value." });
            ms.Errors.Add(new string[] { "lt", ":attribute mesti kurang daripada :value aksara." });
            ms.Errors.Add(new string[] { "lte_list", ":attribute mesti mengandungi kurang daripada atau bersamaan dengan :value perkara." });
            ms.Errors.Add(new string[] { "lte_numeric", ":attribute mesti kurang daripada atau bersamaan dengan :value." });
            ms.Errors.Add(new string[] { "lte", ":attribute mesti kurang daripada atau bersamaan dengan :value aksara." });
            ms.Errors.Add(new string[] { "max_list", "Jumlah :attribute mesti tidak melebihi :max perkara." });
            ms.Errors.Add(new string[] { "max_numeric", "Jumlah :attribute mesti tidak melebihi :max." });
            ms.Errors.Add(new string[] { "max", "Jumlah :attribute mesti tidak melebihi :max aksara." });
            ms.Errors.Add(new string[] { "mimes", ":attribute mesti fail type: :values." });
            ms.Errors.Add(new string[] { "min_list", "Jumlah :attribute mesti sekurang-kurangnya :min perkara." });
            ms.Errors.Add(new string[] { "min_numeric", "Jumlah :attribute mesti sekurang-kurangnya :min." });
            ms.Errors.Add(new string[] { "min", "Jumlah :attribute mesti sekurang-kurangnya :min aksara." });
            ms.Errors.Add(new string[] { "not_in", ":attribute tidak sah." });
            ms.Errors.Add(new string[] { "not_regex", "Format :attribute adalah tidak sah." });
            ms.Errors.Add(new string[] { "numeric", ":attribute mesti nombor." });
            ms.Errors.Add(new string[] { "password", "Kata laluan tidak sah." });
            ms.Errors.Add(new string[] { "regex", "Format :attribute tidak sah." });
            ms.Errors.Add(new string[] { "required", "Ruangan :attribute diperlukan." });
            ms.Errors.Add(new string[] { "same", "Ruangan :attribute dan :other mesti sepadan." });
            ms.Errors.Add(new string[] { "size_list", "Saiz :attribute mesti mengandungi :size perkara." });
            ms.Errors.Add(new string[] { "size_numeric", "Saiz :attribute mesti :size." });
            ms.Errors.Add(new string[] { "size", "Saiz :attribute mesti :size aksara." });
            ms.Errors.Add(new string[] { "starts_with", ":attribute mesti bermula dengan salah satu dari: :values," });
            ms.Errors.Add(new string[] { "url", ":attribute format tidak sah." });
            ms.Errors.Add(new string[] { "uuid", ":attribute mesti UUID yang sah." });
            this.Langs.Add(ms);
            var nb = new Lang();
            nb.Name = "nb";
            nb.Errors.Add(new string[] { "accepted", ":attribute må aksepteres." });
            nb.Errors.Add(new string[] { "active_url", ":attribute er ikke en gyldig URL." });
            nb.Errors.Add(new string[] { "after", ":attribute må være en dato etter :date." });
            nb.Errors.Add(new string[] { "after_or_equal", ":attribute må være en dato etter eller lik :date." });
            nb.Errors.Add(new string[] { "alpha", ":attribute må kun bestå av bokstaver." });
            nb.Errors.Add(new string[] { "alpha_dash", ":attribute må kun bestå av bokstaver, tall og bindestreker." });
            nb.Errors.Add(new string[] { "alpha_num", ":attribute må kun bestå av bokstaver og tall." });
            nb.Errors.Add(new string[] { "before", ":attribute må være en dato før :date." });
            nb.Errors.Add(new string[] { "before_or_equal", ":attribute må være en dato før eller lik :date." });
            nb.Errors.Add(new string[] { "between_list", ":attribute må ha mellom :min - :max elementer." });
            nb.Errors.Add(new string[] { "between_numeric", ":attribute må være mellom :min - :max." });
            nb.Errors.Add(new string[] { "between", ":attribute må være mellom :min - :max tegn." });
            nb.Errors.Add(new string[] { "boolean", ":attribute må være sann eller usann," });
            nb.Errors.Add(new string[] { "confirmed", ":attribute er ikke likt bekreftelsesfeltet." });
            nb.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            nb.Errors.Add(new string[] { "different", ":attribute og :other må være forskellige." });
            nb.Errors.Add(new string[] { "email", ":attribute må være en gyldig e-postadresse." });
            nb.Errors.Add(new string[] { "ends_with", ":attribute må ende med en av følgende: :values." });
            nb.Errors.Add(new string[] { "gt_list", ":attribute må ha flere enn :value elementer." });
            nb.Errors.Add(new string[] { "gt_numeric", ":attribute må være større enn :value." });
            nb.Errors.Add(new string[] { "gt", ":attribute må være større enn :value tegn." });
            nb.Errors.Add(new string[] { "gte_list", ":attribute må ha :value elementer eller flere." });
            nb.Errors.Add(new string[] { "gte_numeric", ":attribute må være større enn eller lik :value." });
            nb.Errors.Add(new string[] { "gte", ":attribute må være større enn eller lik :value tegn." });
            nb.Errors.Add(new string[] { "in", "Det valgte :attribute er ugyldig." });
            nb.Errors.Add(new string[] { "integer", ":attribute må være et heltall." });
            nb.Errors.Add(new string[] { "ip", ":attribute må være en gyldig IP-adresse." });
            nb.Errors.Add(new string[] { "ipv4", ":attribute må være en gyldig IPv4-adresse." });
            nb.Errors.Add(new string[] { "ipv6", ":attribute må være en gyldig IPv6-addresse." });
            nb.Errors.Add(new string[] { "json", ":attribute må være på JSON-format." });
            nb.Errors.Add(new string[] { "lt_list", ":attribute må ha færre enn :value elementer." });
            nb.Errors.Add(new string[] { "lt_numeric", ":attribute må være mindre enn :value." });
            nb.Errors.Add(new string[] { "lt", ":attribute må være kortere enn :value tegn." });
            nb.Errors.Add(new string[] { "lte_list", ":attribute må ikke ha flere enn :value elementer." });
            nb.Errors.Add(new string[] { "lte_numeric", ":attribute må være mindre enn eller lik :value." });
            nb.Errors.Add(new string[] { "lte", ":attribute må være kortere enn eller lik :value tegn." });
            nb.Errors.Add(new string[] { "max_list", ":attribute må ikke ha flere enn :max elementer." });
            nb.Errors.Add(new string[] { "max_numeric", ":attribute må ikke være større enn :max." });
            nb.Errors.Add(new string[] { "max", ":attribute må ikke være større enn :max tegn." });
            nb.Errors.Add(new string[] { "mimes", ":attribute må være en fil av typen: :values." });
            nb.Errors.Add(new string[] { "min_list", ":attribute må ha minst :min elementer." });
            nb.Errors.Add(new string[] { "min_numeric", ":attribute må være minst :min." });
            nb.Errors.Add(new string[] { "min", ":attribute må være minst :min tegn." });
            nb.Errors.Add(new string[] { "not_in", "Den valgte :attribute er ugyldig." });
            nb.Errors.Add(new string[] { "not_regex", "Formatet på :attribute er ugyldig." });
            nb.Errors.Add(new string[] { "numeric", ":attribute må være et tall." });
            nb.Errors.Add(new string[] { "password", "Passordet er feil." });
            nb.Errors.Add(new string[] { "regex", "Formatet på :attribute er ugyldig." });
            nb.Errors.Add(new string[] { "required", ":attribute må fylles ut." });
            nb.Errors.Add(new string[] { "same", ":attribute og :other må være like." });
            nb.Errors.Add(new string[] { "size_list", ":attribute må inneholde :size elementer." });
            nb.Errors.Add(new string[] { "size_numeric", ":attribute må være :size." });
            nb.Errors.Add(new string[] { "size", ":attribute må være :size tegn lang." });
            nb.Errors.Add(new string[] { "starts_with", ":attribute må starte med en av følgende: :values." });
            nb.Errors.Add(new string[] { "url", "Formatet på :attribute er ugyldig." });
            nb.Errors.Add(new string[] { "uuid", ":attribute må være en gyldig UUID." });
            this.Langs.Add(nb);
            var ne = new Lang();
            ne.Name = "ne";
            ne.Errors.Add(new string[] { "accepted", ":attribute स्वीकार गरिएको हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "active_url", ":attribute URL अमान्य छ।," });
            ne.Errors.Add(new string[] { "after", ":attribute को मिति :date भन्दा पछि हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "after_or_equal", ":attribute मिति पछाडि वा बराबर मिति हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "alpha", ":attribute मा अक्षरहरु मात्र हुनसक्छ।," });
            ne.Errors.Add(new string[] { "alpha_dash", ":attribute मा अक्षर, संख्या र ड्यासहरू मात्र हुनसक्छ।," });
            ne.Errors.Add(new string[] { "alpha_num", ":attribute मा अक्षर र संख्याहरू मात्र हुनसक्छ।," });
            ne.Errors.Add(new string[] { "before", ":attribute को मिति :date भन्दा अघि हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "before_or_equal", ":attribute मिति भन्दा अघि वा बराबर :date हुनुपर्दछ। ," });
            ne.Errors.Add(new string[] { "between_list", ":attribute आइटमको संख्या :min र :max को बिचमा हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "between_numeric", ":attribute :min र :maxको बिचमा हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "between", ":attribute :min र :max वर्णको बिचमा हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "boolean", ":attribute ठिक अथवा बेठिक हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "confirmed", ":attribute दाेहाेर्याइएकाे मिलेन।," });
            ne.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ne.Errors.Add(new string[] { "different", ":attribute र :other फरक हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "email", ":attribute को इमेल ठेगाना मिलेन।," });
            ne.Errors.Add(new string[] { "ends_with", ":attribute निम्न मध्ये एकको साथ विशेषता अन्त हुनुपर्दछ :values," });
            ne.Errors.Add(new string[] { "gt_list", ":attribute :value आईटमहरू भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "gt_numeric", ":attribute :value भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "gt", ":attribute :value क्यारेक्टर भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "gte_list", ":attribute :value आईटमहरू भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "gte_numeric", ":attribute :value भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "gte", ":attribute :value क्यारेक्टर भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "in", "छानिएको :attribute अमान्य छ।," });
            ne.Errors.Add(new string[] { "integer", ":attribute पूर्ण संख्या हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "ip", ":attribute मा दिइएको मान्य IP ठेगाना हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "ipv4", ":attribute एक मान्य IPv4 ठेगाना हुनुपर्दछ." });
            ne.Errors.Add(new string[] { "ipv6", ":attribute एक मान्य IPv6 ठेगाना हुनुपर्दछ." });
            ne.Errors.Add(new string[] { "json", ":attribute मा दिइएको मान्य JSON स्ट्रिङ्ग हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "lt_list", ":attribute :value आईटमहरू भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "lt_numeric", ":attribute :value भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "lt", ":attribute :value क्यारेक्टर भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "lte_list", ":attribute :value आईटमहरू भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "lte_numeric", ":attribute :value भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "lte", ":attribute :value क्यारेक्टर भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "max_list", ":attribute मा :max आईटमहरू भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "max_numeric", ":attribute :max भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "max", ":attribute :max क्यारेक्टर भन्दा बढि हुनुपर्दछ।," });
            ne.Errors.Add(new string[] { "mimes", ":attribute :values प्रकारको फाइल हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "min_list", ":attribute मा कम्तिमा :min आइटम हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "min_numeric", ":attribute कम्तिमा :min हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "min", ":attribute कम्तिमा :min वर्णको हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "not_in", "छानिएको :attribute अमान्य छ।," });
            ne.Errors.Add(new string[] { "not_regex", ":attribute ढाँचा अवैध छ." });
            ne.Errors.Add(new string[] { "numeric", ":attribute संख्या हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "password", "पासवर्ड गलत छ।," });
            ne.Errors.Add(new string[] { "regex", ":attribute को ढाँचा मिलेन।," });
            ne.Errors.Add(new string[] { "required", ":attribute दिइएको हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "same", ":attribute र :other मिल्नुपर्छ।," });
            ne.Errors.Add(new string[] { "size_list", ":attribute :sizeमा आइटम हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "size_numeric", ":attribute :size हुनुपर्छ।," });
            ne.Errors.Add(new string[] { "size", ":attribute :size वर्णको हुनुपर्छ।." });
            ne.Errors.Add(new string[] { "starts_with", ":attribute निम्न मध्ये एकसँग सुरू हुनुपर्दछ :values," });
            ne.Errors.Add(new string[] { "url", ":attribute को ढांचा मिलेन।," });
            ne.Errors.Add(new string[] { "uuid", ":attribute एक मान्य UUID हुनुपर्दछ।," });
            this.Langs.Add(ne);
            var nl = new Lang();
            nl.Name = "nl";
            nl.Errors.Add(new string[] { "accepted", ":attribute moet geaccepteerd zijn." });
            nl.Errors.Add(new string[] { "active_url", ":attribute is geen geldige URL." });
            nl.Errors.Add(new string[] { "after", ":attribute moet een datum na :date zijn." });
            nl.Errors.Add(new string[] { "after_or_equal", ":attribute moet een datum na of gelijk aan :date zijn." });
            nl.Errors.Add(new string[] { "alpha", ":attribute mag alleen letters bevatten." });
            nl.Errors.Add(new string[] { "alpha_dash", ":attribute mag alleen letters, nummers, underscores (_) en streepjes (-) bevatten." });
            nl.Errors.Add(new string[] { "alpha_num", ":attribute mag alleen letters en nummers bevatten." });
            nl.Errors.Add(new string[] { "before", ":attribute moet een datum voor :date zijn." });
            nl.Errors.Add(new string[] { "before_or_equal", ":attribute moet een datum voor of gelijk aan :date zijn." });
            nl.Errors.Add(new string[] { "between_list", ":Attribute moet tussen :min en :max items bevatten." });
            nl.Errors.Add(new string[] { "between_numeric", ":Attribute moet tussen :min en :max zijn." });
            nl.Errors.Add(new string[] { "between", ":Attribute moet tussen :min en :max karakters zijn." });
            nl.Errors.Add(new string[] { "boolean", ":attribute moet ja of nee zijn." });
            nl.Errors.Add(new string[] { "confirmed", ":attribute bevestiging komt niet overeen." });
            nl.Errors.Add(new string[] { "declined", ":attribute moet afgewezen worden." });
            nl.Errors.Add(new string[] { "different", ":attribute en :other moeten verschillend zijn." });
            nl.Errors.Add(new string[] { "email", ":attribute is geen geldig e-mailadres." });
            nl.Errors.Add(new string[] { "ends_with", ":attribute moet met één van de volgende waarden eindigen: :values." });
            nl.Errors.Add(new string[] { "gt_list", "De :attribute moet meer dan :value waardes bevatten." });
            nl.Errors.Add(new string[] { "gt_numeric", "De :attribute moet groter zijn dan :value." });
            nl.Errors.Add(new string[] { "gt", "De :attribute moet meer dan :value tekens bevatten." });
            nl.Errors.Add(new string[] { "gte_list", "De :attribute moet :value waardes of meer bevatten." });
            nl.Errors.Add(new string[] { "gte_numeric", "De :attribute moet groter of gelijk zijn aan :value." });
            nl.Errors.Add(new string[] { "gte", "De :attribute moet minimaal :value tekens bevatten." });
            nl.Errors.Add(new string[] { "in", ":attribute is ongeldig." });
            nl.Errors.Add(new string[] { "integer", ":attribute moet een getal zijn." });
            nl.Errors.Add(new string[] { "ip", ":attribute moet een geldig IP-adres zijn." });
            nl.Errors.Add(new string[] { "ipv4", ":attribute moet een geldig IPv4-adres zijn." });
            nl.Errors.Add(new string[] { "ipv6", ":attribute moet een geldig IPv6-adres zijn." });
            nl.Errors.Add(new string[] { "json", ":attribute moet een geldige JSON-string zijn." });
            nl.Errors.Add(new string[] { "lt_list", "De :attribute moet minder dan :value waardes bevatten." });
            nl.Errors.Add(new string[] { "lt_numeric", "De :attribute moet kleiner zijn dan :value." });
            nl.Errors.Add(new string[] { "lt", "De :attribute moet minder dan :value tekens bevatten." });
            nl.Errors.Add(new string[] { "lte_list", "De :attribute moet :value waardes of minder bevatten." });
            nl.Errors.Add(new string[] { "lte_numeric", "De :attribute moet kleiner of gelijk zijn aan :value." });
            nl.Errors.Add(new string[] { "lte", "De :attribute moet maximaal :value tekens bevatten." });
            nl.Errors.Add(new string[] { "max_list", ":Attribute mag niet meer dan :max items bevatten." });
            nl.Errors.Add(new string[] { "max_numeric", ":Attribute mag niet hoger dan :max zijn." });
            nl.Errors.Add(new string[] { "max", ":Attribute mag niet uit meer dan :max tekens bestaan." });
            nl.Errors.Add(new string[] { "mimes", ":attribute moet een bestand zijn van het bestandstype :values." });
            nl.Errors.Add(new string[] { "min_list", ":Attribute moet minimaal :min items bevatten." });
            nl.Errors.Add(new string[] { "min_numeric", ":Attribute moet minimaal :min zijn." });
            nl.Errors.Add(new string[] { "min", ":Attribute moet minimaal :min tekens zijn." });
            nl.Errors.Add(new string[] { "not_in", "Het formaat van :attribute is ongeldig." });
            nl.Errors.Add(new string[] { "not_regex", "De :attribute formaat is ongeldig." });
            nl.Errors.Add(new string[] { "numeric", ":attribute moet een nummer zijn." });
            nl.Errors.Add(new string[] { "password", "Wachtwoord is onjuist." });
            nl.Errors.Add(new string[] { "regex", ":attribute formaat is ongeldig." });
            nl.Errors.Add(new string[] { "required", ":attribute is verplicht." });
            nl.Errors.Add(new string[] { "same", ":attribute en :other moeten overeenkomen." });
            nl.Errors.Add(new string[] { "size_list", ":Attribute moet :size items bevatten." });
            nl.Errors.Add(new string[] { "size_numeric", ":Attribute moet :size zijn." });
            nl.Errors.Add(new string[] { "size", ":Attribute moet :size tekens zijn." });
            nl.Errors.Add(new string[] { "starts_with", ":attribute moet starten met een van de volgende: :values." });
            nl.Errors.Add(new string[] { "url", ":attribute moet een geldig URL zijn." });
            nl.Errors.Add(new string[] { "uuid", ":attribute moet een geldig UUID zijn." });
            this.Langs.Add(nl);
            var nn = new Lang();
            nn.Name = "nn";
            nn.Errors.Add(new string[] { "accepted", ":attribute må aksepterast." });
            nn.Errors.Add(new string[] { "active_url", ":attribute er ikkje ein gyldig URL." });
            nn.Errors.Add(new string[] { "after", ":attribute må vere ein dato etter :date." });
            nn.Errors.Add(new string[] { "after_or_equal", ":attribute må vere ein dato etter eller lik :date." });
            nn.Errors.Add(new string[] { "alpha", ":attribute må berre vere av bokstavar." });
            nn.Errors.Add(new string[] { "alpha_dash", ":attribute må berre vere av bokstavar, tal og bindestrekar." });
            nn.Errors.Add(new string[] { "alpha_num", ":attribute må berre vere av bokstavar og tal." });
            nn.Errors.Add(new string[] { "before", ":attribute må vere ein dato før :date." });
            nn.Errors.Add(new string[] { "before_or_equal", ":attribute må vere ein dato før eller lik :date." });
            nn.Errors.Add(new string[] { "between_list", ":attribute må ha mellom :min - :max element." });
            nn.Errors.Add(new string[] { "between_numeric", ":attribute skal vere mellom :min - :max." });
            nn.Errors.Add(new string[] { "between", ":attribute skal vere mellom :min - :max teikn." });
            nn.Errors.Add(new string[] { "boolean", ":attribute må vere sann eller usann." });
            nn.Errors.Add(new string[] { "confirmed", ":attribute er ikkje likt feltet for stadfesting." });
            nn.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            nn.Errors.Add(new string[] { "different", ":attribute og :other skal vere ulike." });
            nn.Errors.Add(new string[] { "email", ":attribute format er ugyldig." });
            nn.Errors.Add(new string[] { "ends_with", ":attribute må slutte på ein av følgande: :values," });
            nn.Errors.Add(new string[] { "gt_list", ":attribute må vere minst :value element." });
            nn.Errors.Add(new string[] { "gt_numeric", ":attribute må vere større enn :value." });
            nn.Errors.Add(new string[] { "gt", ":attribute må vere lengre enn :value teikn." });
            nn.Errors.Add(new string[] { "gte_list", ":attribute må ha :value element eller meir." });
            nn.Errors.Add(new string[] { "gte_numeric", ":attribute må vere større enn eller lik :value." });
            nn.Errors.Add(new string[] { "gte", ":attribute må vere lengre enn eller lik :value teikn." });
            nn.Errors.Add(new string[] { "in", "Det valde :attribute er ugyldig." });
            nn.Errors.Add(new string[] { "integer", ":attribute skal vere eit heiltal." });
            nn.Errors.Add(new string[] { "ip", ":attribute skal vere ei gyldig IP-adresse." });
            nn.Errors.Add(new string[] { "ipv4", ":attribute skal vere ei gyldig IPv4-adresse." });
            nn.Errors.Add(new string[] { "ipv6", ":attribute skal vere ei gyldig IPv6-adresse." });
            nn.Errors.Add(new string[] { "json", ":attribute må vere på JSON-format." });
            nn.Errors.Add(new string[] { "lt_list", ":attribute må ha færre enn :value element." });
            nn.Errors.Add(new string[] { "lt_numeric", ":attribute må vere mindre enn :value." });
            nn.Errors.Add(new string[] { "lt", ":attribute må vere kortare enn :value teikn." });
            nn.Errors.Add(new string[] { "lte_list", ":attribute må ikkje ha fleire enn :value element." });
            nn.Errors.Add(new string[] { "lte_numeric", ":attribute må vere mindre enn eller lik :value." });
            nn.Errors.Add(new string[] { "lte", ":attribute må vere kortare enn eller lik :value teikn." });
            nn.Errors.Add(new string[] { "max_list", ":attribute skal ikkje ha fleire enn :max element." });
            nn.Errors.Add(new string[] { "max_numeric", ":attribute skal vere mindre enn :max." });
            nn.Errors.Add(new string[] { "max", ":attribute skal vere kortare enn :max teikn." });
            nn.Errors.Add(new string[] { "mimes", ":attribute skal vere ei fil av typen: :values." });
            nn.Errors.Add(new string[] { "min_list", ":attribute må vere minst :min element." });
            nn.Errors.Add(new string[] { "min_numeric", ":attribute skal vere større enn :min." });
            nn.Errors.Add(new string[] { "min", ":attribute skal vere lengre enn :min teikn." });
            nn.Errors.Add(new string[] { "not_in", "Den valgte :attribute er ugyldig." });
            nn.Errors.Add(new string[] { "not_regex", "Formatet på :attribute er ugyldig." });
            nn.Errors.Add(new string[] { "numeric", ":attribute skal vere eit tal." });
            nn.Errors.Add(new string[] { "password", "The password is incorrect." });
            nn.Errors.Add(new string[] { "regex", "Formatet på :attribute er ugyldig." });
            nn.Errors.Add(new string[] { "required", ":attribute må fyllast ut." });
            nn.Errors.Add(new string[] { "same", ":attribute og :other må vere like." });
            nn.Errors.Add(new string[] { "size_list", ":attribute må innehalde :size element." });
            nn.Errors.Add(new string[] { "size_numeric", ":attribute må vere :size." });
            nn.Errors.Add(new string[] { "size", ":attribute må vere :size teikn lang." });
            nn.Errors.Add(new string[] { "starts_with", ":attribute må starte med ein av følgande: :values," });
            nn.Errors.Add(new string[] { "url", "Formatet på :attribute er ugyldig." });
            nn.Errors.Add(new string[] { "uuid", ":attribute må vere ein gyldig UUID." });
            this.Langs.Add(nn);
            var oc = new Lang();
            oc.Name = "oc";
            oc.Errors.Add(new string[] { "accepted", "Lo camp :attribute deu èsser acceptat." });
            oc.Errors.Add(new string[] { "active_url", "Lo camp :attribute es pas una URL valida." });
            oc.Errors.Add(new string[] { "after", "Lo camp :attribute deu èsser una data posteriora a :date." });
            oc.Errors.Add(new string[] { "after_or_equal", "Lo camp :attribute deu èsser una data posteriora o egala a :date." });
            oc.Errors.Add(new string[] { "alpha", "Lo camp :attribute a de conténer solament de letras." });
            oc.Errors.Add(new string[] { "alpha_dash", "Lo camp :attribute a de conténer solament de letras, nombres e de tirets." });
            oc.Errors.Add(new string[] { "alpha_num", "Lo camp :attribute a de conténer solament de letras e nombres." });
            oc.Errors.Add(new string[] { "before", "Lo camp :attribute deu èsser una data anteriora a :date." });
            oc.Errors.Add(new string[] { "before_or_equal", "Lo camp :attribute deu èsser una data anteriora o egala a :date." });
            oc.Errors.Add(new string[] { "between_list", "Lo tablèu :attribute deu aver entre :min e :max elements." });
            oc.Errors.Add(new string[] { "between_numeric", "La valor de :attribute deu èsser entre :min e :max." });
            oc.Errors.Add(new string[] { "between", "Lo tèxt :attribute deu conténer entre :min e :max caractèrs." });
            oc.Errors.Add(new string[] { "boolean", "Lo camp :attribute deu èsser true o false." });
            oc.Errors.Add(new string[] { "confirmed", "Lo camp de confirmacion :attribute correspond pas." });
            oc.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            oc.Errors.Add(new string[] { "different", "Los camps :attribute e :other devon èsser diferents." });
            oc.Errors.Add(new string[] { "email", ":attribute deu èsser una adreça de corrièl valida." });
            oc.Errors.Add(new string[] { "ends_with", "Lo camp :attribute deu acabar per una de las valors seguentas : :values," });
            oc.Errors.Add(new string[] { "gt_list", "Lo tablèu :attribute deu conténer mai de :value elements." });
            oc.Errors.Add(new string[] { "gt_numeric", "La valor de :attribute deu èsser superiora a :value." });
            oc.Errors.Add(new string[] { "gt", "Lo tèxt :attribute deu conténer mai de :value caractèrs." });
            oc.Errors.Add(new string[] { "gte_list", "Lo tablèu :attribute deu conténer almens :value elements." });
            oc.Errors.Add(new string[] { "gte_numeric", "La valor de :attribute deu èsser superiora o egala a :value." });
            oc.Errors.Add(new string[] { "gte", "Lo tèxt :attribute deu conténer almens :value caractèrs." });
            oc.Errors.Add(new string[] { "in", "Lo camp :attribute selecionnat es invalid." });
            oc.Errors.Add(new string[] { "integer", "Lo camp :attribute deu èsser un nombre entièr." });
            oc.Errors.Add(new string[] { "ip", "Lo camp :attribute deu èsser una adreça IP valida." });
            oc.Errors.Add(new string[] { "ipv4", "Lo camp :attribute deu èsser una adreça IPv4 valida." });
            oc.Errors.Add(new string[] { "ipv6", "Lo camp :attribute deu èsser una adreça IPv6 valida." });
            oc.Errors.Add(new string[] { "json", "Lo camp :attribute deu èsser una cadena JSON valida." });
            oc.Errors.Add(new string[] { "lt_list", "Lo tablèu :attribute deu conténer almens :value elements." });
            oc.Errors.Add(new string[] { "lt_numeric", "La valor de :attribute deu èsser inferiora a :value." });
            oc.Errors.Add(new string[] { "lt", "Lo tèxt :attribute deu conténer almens :value caractèrs." });
            oc.Errors.Add(new string[] { "lte_list", "Lo tablèu :attribute deu conténer al pus mai :value elements." });
            oc.Errors.Add(new string[] { "lte_numeric", "La valor de :attribute deu èsser inferiora o egala a :value." });
            oc.Errors.Add(new string[] { "lte", "Lo tèxt :attribute deu conténer al pus mai :value caractèrs." });
            oc.Errors.Add(new string[] { "max_list", "Lo tablèu :attribute deu pas conténer mai de :max elements." });
            oc.Errors.Add(new string[] { "max_numeric", "La valor de :attribute deu pas èsser superiora a :max." });
            oc.Errors.Add(new string[] { "max", "Lo tèxt :attribute deu èsser superior a :max caractèrs." });
            oc.Errors.Add(new string[] { "mimes", "Lo camp :attribute deu èsser un fichièr del tipe : :values." });
            oc.Errors.Add(new string[] { "min_list", "Lo tablèu :attribute deu conténer almens :min elements." });
            oc.Errors.Add(new string[] { "min_numeric", "La valor de :attribute deu fa almens :min o mai." });
            oc.Errors.Add(new string[] { "min", "Lo tèxt :attribute deu fa almens :min caractèrs." });
            oc.Errors.Add(new string[] { "not_in", "Lo camp :attribute seleccionat es invalid." });
            oc.Errors.Add(new string[] { "not_regex", "Lo format :attribute es invalid." });
            oc.Errors.Add(new string[] { "numeric", "Lo camp :attribute deu èsser un nombre." });
            oc.Errors.Add(new string[] { "password", "Lo senhal es incorrèct," });
            oc.Errors.Add(new string[] { "regex", "Lo format :attribute es invalid." });
            oc.Errors.Add(new string[] { "required", "Lo camp :attribute es obligatòri." });
            oc.Errors.Add(new string[] { "same", "Los camps :attribute e :other devon correspondre." });
            oc.Errors.Add(new string[] { "size_list", "Lo tablèu :attribute deu conténer :size elements." });
            oc.Errors.Add(new string[] { "size_numeric", "La valor de :attribute deu fa :size." });
            oc.Errors.Add(new string[] { "size", "Lo tèxt :attribute deu fa :size caractèrs." });
            oc.Errors.Add(new string[] { "starts_with", "Lo camp :attribute deu començar amb una de las valors seguentas : :values," });
            oc.Errors.Add(new string[] { "url", "Lo format de :attribute es invalid." });
            oc.Errors.Add(new string[] { "uuid", "Lo camp :attribute deu èsser un UUID valid," });
            this.Langs.Add(oc);
            var pl = new Lang();
            pl.Name = "pl";
            pl.Errors.Add(new string[] { "accepted", "Pole :attribute musi zostać zaakceptowane." });
            pl.Errors.Add(new string[] { "active_url", "Pole :attribute jest nieprawidłowym adresem URL." });
            pl.Errors.Add(new string[] { "after", "Pole :attribute musi być datą późniejszą od :date." });
            pl.Errors.Add(new string[] { "after_or_equal", "Pole :attribute musi być datą nie wcześniejszą niż :date." });
            pl.Errors.Add(new string[] { "alpha", "Pole :attribute może zawierać jedynie litery." });
            pl.Errors.Add(new string[] { "alpha_dash", "Pole :attribute może zawierać jedynie litery, cyfry i myślniki." });
            pl.Errors.Add(new string[] { "alpha_num", "Pole :attribute może zawierać jedynie litery i cyfry." });
            pl.Errors.Add(new string[] { "before", "Pole :attribute musi być datą wcześniejszą od :date." });
            pl.Errors.Add(new string[] { "before_or_equal", "Pole :attribute musi być datą nie późniejszą niż :date." });
            pl.Errors.Add(new string[] { "between_list", "Pole :attribute musi składać się z :min - :max elementów." });
            pl.Errors.Add(new string[] { "between_numeric", "Pole :attribute musi zawierać się w granicach :min - :max." });
            pl.Errors.Add(new string[] { "between", "Pole :attribute musi zawierać się w granicach :min - :max znaków." });
            pl.Errors.Add(new string[] { "boolean", "Pole :attribute musi mieć wartość logiczną prawda albo fałsz." });
            pl.Errors.Add(new string[] { "confirmed", "Potwierdzenie pola :attribute nie zgadza się." });
            pl.Errors.Add(new string[] { "declined", "Pole :attribute musi zostać odrzucony." });
            pl.Errors.Add(new string[] { "different", "Pole :attribute oraz :other muszą się różnić." });
            pl.Errors.Add(new string[] { "email", "Pole :attribute nie jest poprawnym adresem e-mail." });
            pl.Errors.Add(new string[] { "ends_with", "Pole :attribute musi kończyć się jedną z następujących wartości: :values." });
            pl.Errors.Add(new string[] { "gt_list", "Pole :attribute musi mieć więcej niż :value elementów." });
            pl.Errors.Add(new string[] { "gt_numeric", "Pole :attribute musi być większe niż :value." });
            pl.Errors.Add(new string[] { "gt", "Pole :attribute musi być dłuższe niż :value znaków." });
            pl.Errors.Add(new string[] { "gte_list", "Pole :attribute musi mieć :value lub więcej elementów." });
            pl.Errors.Add(new string[] { "gte_numeric", "Pole :attribute musi być większe lub równe :value." });
            pl.Errors.Add(new string[] { "gte", "Pole :attribute musi być dłuższe lub równe :value znaków." });
            pl.Errors.Add(new string[] { "in", "Zaznaczony element :attribute jest nieprawidłowy." });
            pl.Errors.Add(new string[] { "integer", "Pole :attribute musi być liczbą całkowitą." });
            pl.Errors.Add(new string[] { "ip", "Pole :attribute musi być prawidłowym adresem IP." });
            pl.Errors.Add(new string[] { "ipv4", "Pole :attribute musi być prawidłowym adresem IPv4." });
            pl.Errors.Add(new string[] { "ipv6", "Pole :attribute musi być prawidłowym adresem IPv6." });
            pl.Errors.Add(new string[] { "json", "Pole :attribute musi być poprawnym ciągiem znaków JSON." });
            pl.Errors.Add(new string[] { "lt_list", "Pole :attribute musi mieć mniej niż :value elementów." });
            pl.Errors.Add(new string[] { "lt_numeric", "Pole :attribute musi być mniejsze niż :value." });
            pl.Errors.Add(new string[] { "lt", "Pole :attribute musi być krótsze niż :value znaków." });
            pl.Errors.Add(new string[] { "lte_list", "Pole :attribute musi mieć :value lub mniej elementów." });
            pl.Errors.Add(new string[] { "lte_numeric", "Pole :attribute musi być mniejsze lub równe :value." });
            pl.Errors.Add(new string[] { "lte", "Pole :attribute musi być krótsze lub równe :value znaków." });
            pl.Errors.Add(new string[] { "max_list", "Pole :attribute nie może mieć więcej niż :max elementów." });
            pl.Errors.Add(new string[] { "max_numeric", "Pole :attribute nie może być większe niż :max." });
            pl.Errors.Add(new string[] { "max", "Pole :attribute nie może być dłuższe niż :max znaków." });
            pl.Errors.Add(new string[] { "mimes", "Pole :attribute musi być plikiem typu :values." });
            pl.Errors.Add(new string[] { "min_list", "Pole :attribute musi mieć przynajmniej :min elementów." });
            pl.Errors.Add(new string[] { "min_numeric", "Pole :attribute musi być nie mniejsze od :min." });
            pl.Errors.Add(new string[] { "min", "Pole :attribute musi mieć przynajmniej :min znaków." });
            pl.Errors.Add(new string[] { "not_in", "Zaznaczony :attribute jest nieprawidłowy." });
            pl.Errors.Add(new string[] { "not_regex", "Format pola :attribute jest nieprawidłowy." });
            pl.Errors.Add(new string[] { "numeric", "Pole :attribute musi być liczbą." });
            pl.Errors.Add(new string[] { "password", "Hasło jest nieprawidłowe." });
            pl.Errors.Add(new string[] { "regex", "Format pola :attribute jest nieprawidłowy." });
            pl.Errors.Add(new string[] { "required", "Pole :attribute jest wymagane." });
            pl.Errors.Add(new string[] { "same", "Pole :attribute i :other muszą być takie same." });
            pl.Errors.Add(new string[] { "size_list", "Pole :attribute musi zawierać :size elementów." });
            pl.Errors.Add(new string[] { "size_numeric", "Pole :attribute musi mieć :size." });
            pl.Errors.Add(new string[] { "size", "Pole :attribute musi mieć :size znaków." });
            pl.Errors.Add(new string[] { "starts_with", "Pole :attribute musi zaczynać się jedną z następujących wartości: :values." });
            pl.Errors.Add(new string[] { "url", "Format pola :attribute jest nieprawidłowy." });
            pl.Errors.Add(new string[] { "uuid", "Pole :attribute musi być poprawnym identyfikatorem UUID." });
            this.Langs.Add(pl);
            var ps = new Lang();
            ps.Name = "ps";
            ps.Errors.Add(new string[] { "accepted", "باید ومنل شی :attribute." });
            ps.Errors.Add(new string[] { "active_url", ":attribute یو باوري لینک نه دی." });
            ps.Errors.Add(new string[] { "after", "باید:attribute تر نن ورځې نیټې پورې :date." });
            ps.Errors.Add(new string[] { "after_or_equal", ":attribute باید وروستی نیټه وي یا د نیټې سره سمون ولري :date." });
            ps.Errors.Add(new string[] { "alpha", "دا باید شامل نه وي :attribute یوازې په حرفو کې." });
            ps.Errors.Add(new string[] { "alpha_dash", "دا باید شامل نه وي :attribute یوازې په حرفو کې، شمیرې او متره." });
            ps.Errors.Add(new string[] { "alpha_num", "شمیرې او متره :attribute یوازې خطونه او شمیرې." });
            ps.Errors.Add(new string[] { "before", "باید:attribute د تاریخ پخوا تاریخ وټاکئ :date." });
            ps.Errors.Add(new string[] { "before_or_equal", ":attribute دا باید وي د تیر نیټې یا نیټې سره سمون خوري :date." });
            ps.Errors.Add(new string[] { "between_list", "شمیرې او متره :attribute د عناصرو په منځ کې :min او :max." });
            ps.Errors.Add(new string[] { "between_numeric", "دا باید ارزښت وي :attribute ما بين:min او :max." });
            ps.Errors.Add(new string[] { "between", "د متن حروف باید باید وي :attribute ما بين:min او :max." });
            ps.Errors.Add(new string[] { "boolean", "دا باید ارزښت وي :attribute او یا هم true یا false ." });
            ps.Errors.Add(new string[] { "confirmed", "د تایید ساحه د ساحې سره سمون نه لري:attribute." });
            ps.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ps.Errors.Add(new string[] { "different", "ساحې باید وي :attribute و :other مختلف." });
            ps.Errors.Add(new string[] { "email", "دا باید وي :attribute یو باوري بریښلیک پته جوړښت." });
            ps.Errors.Add(new string[] { "ends_with", "The :attribute must end with one of the following: :values." });
            ps.Errors.Add(new string[] { "gt_list", "شمیرې او متره :attribute له زیاتو څخه :value عناصر/عنصر." });
            ps.Errors.Add(new string[] { "gt_numeric", "دا باید ارزښت وي :attribute په پرتله ډیر :value." });
            ps.Errors.Add(new string[] { "gt", "د متن اوږدوالی باید وي :attribute څخه زیات :value توري/توري." });
            ps.Errors.Add(new string[] { "gte_list", "شمیرې او متره :attribute لږ تر لږه :value عنصر / عناصر." });
            ps.Errors.Add(new string[] { "gte_numeric", "دا باید ارزښت وي :attribute مساوی یا زیات :value." });
            ps.Errors.Add(new string[] { "gte", "د متن اوږدوالی باید وي :attribute لږترلږه :value توري/توري." });
            ps.Errors.Add(new string[] { "in", ":attribute غير موجود." });
            ps.Errors.Add(new string[] { "integer", "دا باید وي:attribute هو عدد صحيح." });
            ps.Errors.Add(new string[] { "ip", "دا باید وي:attribute عنوان IP ریښتیا." });
            ps.Errors.Add(new string[] { "ipv4", "دا باید وي:attribute عنوان IPv4 ریښتیا." });
            ps.Errors.Add(new string[] { "ipv6", "دا باید وي:attribute عنوان IPv6 ریښتیا." });
            ps.Errors.Add(new string[] { "json", "دا باید وي:attribute د اوریدلو ډول JSON." });
            ps.Errors.Add(new string[] { "lt_list", "شمیرې او متره :attribute له کم څخه :value عناصر/عنصر." });
            ps.Errors.Add(new string[] { "lt_numeric", "دا باید ارزښت وي :attribute لږ :value." });
            ps.Errors.Add(new string[] { "lt", "د متن اوږدوالی باید وي :attribute له کم څخه :value توري/توري." });
            ps.Errors.Add(new string[] { "lte_list", "دا باید شامل نه وي :attribute له زیاتو څخه :value عناصر/عنصر." });
            ps.Errors.Add(new string[] { "lte_numeric", "دا باید ارزښت وي :attribute نسبت برابر یا کوچنی :value." });
            ps.Errors.Add(new string[] { "lte", "د متن اوږدوالی باید له زیاتوالی نه وي:attribute :value توري/توري." });
            ps.Errors.Add(new string[] { "max_list", "دا باید شامل نه وي :attribute له زیاتو څخه :max عناصر/عنصر." });
            ps.Errors.Add(new string[] { "max_numeric", "دا باید ارزښت وي :attribute نسبت برابر یا کوچنی :max." });
            ps.Errors.Add(new string[] { "max", "د متن اوږدوالی باید له زیاتوالی نه وي:attribute :max توري/توري." });
            ps.Errors.Add(new string[] { "mimes", "دا باید د ډول دوسیه وي : :values." });
            ps.Errors.Add(new string[] { "min_list", "شمیرې او متره :attribute لږ تر لږه :min عنصر / عناصر." });
            ps.Errors.Add(new string[] { "min_numeric", "دا باید ارزښت وي :attribute مساوی یا زیات :min." });
            ps.Errors.Add(new string[] { "min", "د متن اوږدوالی باید وي :attribute لږترلږه :min توري/توري." });
            ps.Errors.Add(new string[] { "not_in", ":attribute موجود." });
            ps.Errors.Add(new string[] { "not_regex", "فورمول :attribute غلط." });
            ps.Errors.Add(new string[] { "numeric", "باید:attribute یو شمېره." });
            ps.Errors.Add(new string[] { "password", "The password is incorrect." });
            ps.Errors.Add(new string[] { "regex", "فورمول :attribute .غير صحيح." });
            ps.Errors.Add(new string[] { "required", ":attribute اړینه ده." });
            ps.Errors.Add(new string[] { "same", "اړینه ده :attribute سره :other." });
            ps.Errors.Add(new string[] { "size_list", "شمیرې او متره :attribute په :size عنصر/عناصر په سمه توګه." });
            ps.Errors.Add(new string[] { "size_numeric", "دا باید ارزښت وي :attribute سره برابر :size." });
            ps.Errors.Add(new string[] { "size", "شمیرې او متره متن :attribute په :size توري/توري په سمه توګه." });
            ps.Errors.Add(new string[] { "starts_with", "دا باید پیل شي :attribute د لاندې ارزښتونو څخه یو: :values," });
            ps.Errors.Add(new string[] { "url", "د لینک بڼه :attribute غلط." });
            ps.Errors.Add(new string[] { "uuid", ":attribute دا باید غیر رسمي وي UUID غږ." });
            this.Langs.Add(ps);
            var pt = new Lang();
            pt.Name = "pt";
            pt.Errors.Add(new string[] { "accepted", "O campo :attribute deverá ser aceite." });
            pt.Errors.Add(new string[] { "active_url", "O campo :attribute não contém um URL válido." });
            pt.Errors.Add(new string[] { "after", "O campo :attribute deverá conter uma data posterior a :date." });
            pt.Errors.Add(new string[] { "after_or_equal", "O campo :attribute deverá conter uma data posterior ou igual a :date." });
            pt.Errors.Add(new string[] { "alpha", "O campo :attribute deverá conter apenas letras." });
            pt.Errors.Add(new string[] { "alpha_dash", "O campo :attribute deverá conter apenas letras, números e traços." });
            pt.Errors.Add(new string[] { "alpha_num", "O campo :attribute deverá conter apenas letras e números ." });
            pt.Errors.Add(new string[] { "before", "O campo :attribute deverá conter uma data anterior a :date." });
            pt.Errors.Add(new string[] { "before_or_equal", "O Campo :attribute deverá conter uma data anterior ou igual a :date." });
            pt.Errors.Add(new string[] { "between_list", "O campo :attribute deverá conter entre :min - :max elementos." });
            pt.Errors.Add(new string[] { "between_numeric", "O campo :attribute deverá ter um valor entre :min - :max." });
            pt.Errors.Add(new string[] { "between", "O campo :attribute deverá conter entre :min - :max caracteres." });
            pt.Errors.Add(new string[] { "boolean", "O campo :attribute deverá conter o valor verdadeiro ou falso." });
            pt.Errors.Add(new string[] { "confirmed", "A confirmação para o campo :attribute não coincide." });
            pt.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            pt.Errors.Add(new string[] { "different", "Os campos :attribute e :other deverão conter valores diferentes." });
            pt.Errors.Add(new string[] { "email", "O campo :attribute não contém um endereço de e-mail válido." });
            pt.Errors.Add(new string[] { "ends_with", "O campo :attribute deverá terminar com : :values." });
            pt.Errors.Add(new string[] { "gt_list", "O campo :attribute tem de ter mais de :value itens." });
            pt.Errors.Add(new string[] { "gt_numeric", "O campo :attribute tem de ser maior do que :value." });
            pt.Errors.Add(new string[] { "gt", "O campo :attribute tem de ter mais de :value caracteres." });
            pt.Errors.Add(new string[] { "gte_list", "O campo :attribute tem de ter :value itens ou mais." });
            pt.Errors.Add(new string[] { "gte_numeric", "O campo :attribute tem de ser maior ou igual a :value." });
            pt.Errors.Add(new string[] { "gte", "O campo :attribute tem de ter :value caracteres ou mais." });
            pt.Errors.Add(new string[] { "in", "O campo :attribute não contém um valor válido." });
            pt.Errors.Add(new string[] { "integer", "O campo :attribute deverá conter um número inteiro." });
            pt.Errors.Add(new string[] { "ip", "O campo :attribute deverá conter um IP válido." });
            pt.Errors.Add(new string[] { "ipv4", "O campo :attribute deverá conter um IPv4 válido." });
            pt.Errors.Add(new string[] { "ipv6", "O campo :attribute deverá conter um IPv6 válido." });
            pt.Errors.Add(new string[] { "json", "O campo :attribute deverá conter um texto JSON válido." });
            pt.Errors.Add(new string[] { "lt_list", "O campo :attribute tem de ter menos de :value itens." });
            pt.Errors.Add(new string[] { "lt_numeric", "O campo :attribute tem de ser inferior a :value." });
            pt.Errors.Add(new string[] { "lt", "O campo :attribute tem de ter menos de :value caracteres." });
            pt.Errors.Add(new string[] { "lte_list", "O campo :attribute não pode ter mais de :value itens." });
            pt.Errors.Add(new string[] { "lte_numeric", "O campo :attribute tem de ser inferior ou igual a :value." });
            pt.Errors.Add(new string[] { "lte", "O campo :attribute tem de ter :value caracteres ou menos." });
            pt.Errors.Add(new string[] { "max_list", "O campo :attribute não deverá conter mais de :max elementos." });
            pt.Errors.Add(new string[] { "max_numeric", "O campo :attribute não deverá conter um valor superior a :max." });
            pt.Errors.Add(new string[] { "max", "O campo :attribute não deverá conter mais de :max caracteres." });
            pt.Errors.Add(new string[] { "mimes", "O campo :attribute deverá conter um ficheiro do tipo: :values." });
            pt.Errors.Add(new string[] { "min_list", "O campo :attribute deverá conter no mínimo :min elementos." });
            pt.Errors.Add(new string[] { "min_numeric", "O campo :attribute deverá ter um valor superior ou igual a :min." });
            pt.Errors.Add(new string[] { "min", "O campo :attribute deverá conter no mínimo :min caracteres." });
            pt.Errors.Add(new string[] { "not_in", "O campo :attribute contém um valor inválido." });
            pt.Errors.Add(new string[] { "not_regex", "O formato de :attribute não é válido," });
            pt.Errors.Add(new string[] { "numeric", "O campo :attribute deverá conter um valor numérico." });
            pt.Errors.Add(new string[] { "password", "A password está errada." });
            pt.Errors.Add(new string[] { "regex", "O formato do valor para o campo :attribute é inválido." });
            pt.Errors.Add(new string[] { "required", "É obrigatória a indicação de um valor para o campo :attribute." });
            pt.Errors.Add(new string[] { "same", "Os campos :attribute e :other deverão conter valores iguais." });
            pt.Errors.Add(new string[] { "size_list", "O campo :attribute deverá conter :size elementos." });
            pt.Errors.Add(new string[] { "size_numeric", "O campo :attribute deverá conter o valor :size." });
            pt.Errors.Add(new string[] { "size", "O campo :attribute deverá conter :size caracteres." });
            pt.Errors.Add(new string[] { "starts_with", "O campo :attribute tem de começar com um dos valores seguintes: :values," });
            pt.Errors.Add(new string[] { "url", "O formato do URL indicado para o campo :attribute é inválido." });
            pt.Errors.Add(new string[] { "uuid", ":attribute tem de ser um UUID válido." });
            this.Langs.Add(pt);
            var pt_BR = new Lang();
            pt_BR.Name = "pt_BR";
            pt_BR.Errors.Add(new string[] { "accepted", "O campo :attribute deve ser aceito." });
            pt_BR.Errors.Add(new string[] { "active_url", "O campo :attribute deve conter uma URL válida." });
            pt_BR.Errors.Add(new string[] { "after", "O campo :attribute deve conter uma data posterior a :date." });
            pt_BR.Errors.Add(new string[] { "after_or_equal", "O campo :attribute deve conter uma data superior ou igual a :date." });
            pt_BR.Errors.Add(new string[] { "alpha", "O campo :attribute deve conter apenas letras." });
            pt_BR.Errors.Add(new string[] { "alpha_dash", "O campo :attribute deve conter apenas letras, números e traços." });
            pt_BR.Errors.Add(new string[] { "alpha_num", "O campo :attribute deve conter apenas letras e números ." });
            pt_BR.Errors.Add(new string[] { "before", "O campo :attribute deve conter uma data anterior a :date." });
            pt_BR.Errors.Add(new string[] { "before_or_equal", "O campo :attribute deve conter uma data inferior ou igual a :date." });
            pt_BR.Errors.Add(new string[] { "between_list", "O campo :attribute deve conter de :min a :max itens." });
            pt_BR.Errors.Add(new string[] { "between_numeric", "O campo :attribute deve conter um número entre :min e :max." });
            pt_BR.Errors.Add(new string[] { "between", "O campo :attribute deve conter entre :min a :max caracteres." });
            pt_BR.Errors.Add(new string[] { "boolean", "O campo :attribute deve conter o valor verdadeiro ou falso." });
            pt_BR.Errors.Add(new string[] { "confirmed", "A confirmação para o campo :attribute não coincide." });
            pt_BR.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            pt_BR.Errors.Add(new string[] { "different", "Os campos :attribute e :other devem conter valores diferentes." });
            pt_BR.Errors.Add(new string[] { "email", "O campo :attribute não contém um endereço de email válido." });
            pt_BR.Errors.Add(new string[] { "ends_with", "O campo :attribute deve terminar com um dos seguintes valores: :values," });
            pt_BR.Errors.Add(new string[] { "gt_list", "O campo :attribute deve ter mais que :value itens." });
            pt_BR.Errors.Add(new string[] { "gt_numeric", "O campo :attribute deve ser maior que :value." });
            pt_BR.Errors.Add(new string[] { "gt", "O campo :attribute deve ser maior que :value caracteres." });
            pt_BR.Errors.Add(new string[] { "gte_list", "O campo :attribute deve ter :value itens ou mais." });
            pt_BR.Errors.Add(new string[] { "gte_numeric", "O campo :attribute deve ser maior ou igual a :value." });
            pt_BR.Errors.Add(new string[] { "gte", "O campo :attribute deve ser maior ou igual a :value caracteres." });
            pt_BR.Errors.Add(new string[] { "in", "O campo :attribute não contém um valor válido." });
            pt_BR.Errors.Add(new string[] { "integer", "O campo :attribute deve conter um número inteiro." });
            pt_BR.Errors.Add(new string[] { "ip", "O campo :attribute deve conter um IP válido." });
            pt_BR.Errors.Add(new string[] { "ipv4", "O campo :attribute deve conter um IPv4 válido." });
            pt_BR.Errors.Add(new string[] { "ipv6", "O campo :attribute deve conter um IPv6 válido." });
            pt_BR.Errors.Add(new string[] { "json", "O campo :attribute deve conter uma string JSON válida." });
            pt_BR.Errors.Add(new string[] { "lt_list", "O campo :attribute deve ter menos que :value itens." });
            pt_BR.Errors.Add(new string[] { "lt_numeric", "O campo :attribute deve ser menor que :value." });
            pt_BR.Errors.Add(new string[] { "lt", "O campo :attribute deve ser menor que :value caracteres." });
            pt_BR.Errors.Add(new string[] { "lte_list", "O campo :attribute não deve ter mais que :value itens." });
            pt_BR.Errors.Add(new string[] { "lte_numeric", "O campo :attribute deve ser menor ou igual a :value." });
            pt_BR.Errors.Add(new string[] { "lte", "O campo :attribute deve ser menor ou igual a :value caracteres." });
            pt_BR.Errors.Add(new string[] { "max_list", "O campo :attribute deve conter no máximo :max itens." });
            pt_BR.Errors.Add(new string[] { "max_numeric", "O campo :attribute não pode conter um valor superior a :max." });
            pt_BR.Errors.Add(new string[] { "max", "O campo :attribute não pode conter mais de :max caracteres." });
            pt_BR.Errors.Add(new string[] { "mimes", "O campo :attribute deve conter um arquivo do tipo: :values." });
            pt_BR.Errors.Add(new string[] { "min_list", "O campo :attribute deve conter no mínimo :min itens." });
            pt_BR.Errors.Add(new string[] { "min_numeric", "O campo :attribute deve conter um número superior ou igual a :min." });
            pt_BR.Errors.Add(new string[] { "min", "O campo :attribute deve conter no mínimo :min caracteres." });
            pt_BR.Errors.Add(new string[] { "not_in", "O campo :attribute contém um valor inválido." });
            pt_BR.Errors.Add(new string[] { "not_regex", "O formato do valor :attribute é inválido." });
            pt_BR.Errors.Add(new string[] { "numeric", "O campo :attribute deve conter um valor numérico." });
            pt_BR.Errors.Add(new string[] { "password", "A senha está incorreta." });
            pt_BR.Errors.Add(new string[] { "regex", "O formato do valor informado no campo :attribute é inválido." });
            pt_BR.Errors.Add(new string[] { "required", "O campo :attribute é obrigatório." });
            pt_BR.Errors.Add(new string[] { "same", "Os campos :attribute e :other devem conter valores iguais." });
            pt_BR.Errors.Add(new string[] { "size_list", "O campo :attribute deve conter :size itens." });
            pt_BR.Errors.Add(new string[] { "size_numeric", "O campo :attribute deve conter o número :size." });
            pt_BR.Errors.Add(new string[] { "size", "O campo :attribute deve conter :size caracteres." });
            pt_BR.Errors.Add(new string[] { "starts_with", "O campo :attribute deve começar com um dos seguintes valores: :values," });
            pt_BR.Errors.Add(new string[] { "url", "O formato da URL informada para o campo :attribute é inválido." });
            pt_BR.Errors.Add(new string[] { "uuid", "O campo :attribute deve ser um UUID válido." });
            this.Langs.Add(pt_BR);
            var ro = new Lang();
            ro.Name = "ro";
            ro.Errors.Add(new string[] { "accepted", "Câmpul :attribute trebuie să fie acceptat." });
            ro.Errors.Add(new string[] { "active_url", "Câmpul :attribute nu este un URL valid." });
            ro.Errors.Add(new string[] { "after", "Câmpul :attribute trebuie să fie o dată după :date." });
            ro.Errors.Add(new string[] { "after_or_equal", "Câmpul :attribute trebuie să fie o dată ulterioară sau egală cu :date." });
            ro.Errors.Add(new string[] { "alpha", "Câmpul :attribute poate conține doar litere." });
            ro.Errors.Add(new string[] { "alpha_dash", "Câmpul :attribute poate conține doar litere, numere și cratime." });
            ro.Errors.Add(new string[] { "alpha_num", "Câmpul :attribute poate conține doar litere și numere." });
            ro.Errors.Add(new string[] { "before", "Câmpul :attribute trebuie să fie o dată înainte de :date." });
            ro.Errors.Add(new string[] { "before_or_equal", "Câmpul :attribute trebuie să fie o dată înainte sau egală cu :date." });
            ro.Errors.Add(new string[] { "between_list", "Câmpul :attribute trebuie să aibă între :min și :max elemente." });
            ro.Errors.Add(new string[] { "between_numeric", "Câmpul :attribute trebuie să fie între :min și :max." });
            ro.Errors.Add(new string[] { "between", "Câmpul :attribute trebuie să fie între :min și :max caractere." });
            ro.Errors.Add(new string[] { "boolean", "Câmpul :attribute trebuie să fie adevărat sau fals." });
            ro.Errors.Add(new string[] { "confirmed", "Confirmarea :attribute nu se potrivește." });
            ro.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ro.Errors.Add(new string[] { "different", "Câmpurile :attribute și :other trebuie să fie diferite." });
            ro.Errors.Add(new string[] { "email", "Câmpul :attribute trebuie să fie o adresă de e-mail validă." });
            ro.Errors.Add(new string[] { "ends_with", "Câmpul :attribute trebuie să se încheie cu una din următoarele valori: :values," });
            ro.Errors.Add(new string[] { "gt_list", "Câmpul :attribute trebuie să aibă mai multe de :value elemente." });
            ro.Errors.Add(new string[] { "gt_numeric", "Câmpul :attribute trebuie să fie mai mare de :value." });
            ro.Errors.Add(new string[] { "gt", "Câmpul :attribute trebuie să fie mai mare de :value caractere." });
            ro.Errors.Add(new string[] { "gte_list", "Câmpul :attribute trebuie să aibă :value elemente sau mai multe." });
            ro.Errors.Add(new string[] { "gte_numeric", "Câmpul :attribute trebuie să fie mai mare sau egal cu :value." });
            ro.Errors.Add(new string[] { "gte", "Câmpul :attribute trebuie să fie mai mare sau egal cu :value caractere." });
            ro.Errors.Add(new string[] { "in", "Câmpul :attribute selectat nu este valid." });
            ro.Errors.Add(new string[] { "integer", "Câmpul :attribute trebuie să fie un număr întreg." });
            ro.Errors.Add(new string[] { "ip", "Câmpul :attribute trebuie să fie o adresă IP validă." });
            ro.Errors.Add(new string[] { "ipv4", "Câmpul :attribute trebuie să fie o adresă IPv4 validă." });
            ro.Errors.Add(new string[] { "ipv6", "Câmpul :attribute trebuie să fie o adresă IPv6 validă." });
            ro.Errors.Add(new string[] { "json", "Câmpul :attribute trebuie să fie un string JSON valid." });
            ro.Errors.Add(new string[] { "lt_list", "Câmpul :attribute trebuie să aibă mai puțin de :value elemente." });
            ro.Errors.Add(new string[] { "lt_numeric", "Câmpul :attribute trebuie să fie mai mic de :value." });
            ro.Errors.Add(new string[] { "lt", "Câmpul :attribute trebuie să fie mai mic de :value caractere." });
            ro.Errors.Add(new string[] { "lte_list", "Câmpul :attribute trebuie să aibă :value elemente sau mai puține." });
            ro.Errors.Add(new string[] { "lte_numeric", "Câmpul :attribute trebuie să fie mai mic sau egal cu :value." });
            ro.Errors.Add(new string[] { "lte", "Câmpul :attribute trebuie să fie mai mic sau egal cu :value caractere." });
            ro.Errors.Add(new string[] { "max_list", "Câmpul :attribute nu poate avea mai mult de :max elemente." });
            ro.Errors.Add(new string[] { "max_numeric", "Câmpul :attribute nu poate fi mai mare de :max." });
            ro.Errors.Add(new string[] { "max", "Câmpul :attribute nu poate avea mai mult de :max caractere." });
            ro.Errors.Add(new string[] { "mimes", "Câmpul :attribute trebuie să fie un fișier de tipul: :values." });
            ro.Errors.Add(new string[] { "min_list", "Câmpul :attribute trebuie să aibă cel puțin :min elemente." });
            ro.Errors.Add(new string[] { "min_numeric", "Câmpul :attribute nu poate fi mai mic de :min." });
            ro.Errors.Add(new string[] { "min", "Câmpul :attribute trebuie să aibă cel puțin :min caractere." });
            ro.Errors.Add(new string[] { "not_in", "Câmpul :attribute selectat nu este valid." });
            ro.Errors.Add(new string[] { "not_regex", "Câmpul :attribute nu are un format valid." });
            ro.Errors.Add(new string[] { "numeric", "Câmpul :attribute trebuie să fie un număr." });
            ro.Errors.Add(new string[] { "password", "Parola este greșită." });
            ro.Errors.Add(new string[] { "regex", "Câmpul :attribute nu are un format valid." });
            ro.Errors.Add(new string[] { "required", "Câmpul :attribute este obligatoriu." });
            ro.Errors.Add(new string[] { "same", "Câmpul :attribute și :other trebuie să fie identice." });
            ro.Errors.Add(new string[] { "size_list", "Câmpul :attribute trebuie să aibă :size elemente." });
            ro.Errors.Add(new string[] { "size_numeric", "Câmpul :attribute trebuie să fie :size." });
            ro.Errors.Add(new string[] { "size", "Câmpul :attribute trebuie să aibă :size caractere." });
            ro.Errors.Add(new string[] { "starts_with", "Acesta :attribute trebuie să înceapă cu una din următoarele: :values," });
            ro.Errors.Add(new string[] { "url", "Câmpul :attribute nu este un URL valid." });
            ro.Errors.Add(new string[] { "uuid", "Acesta :attribute trebuie să fie un cod UUID valid." });
            this.Langs.Add(ro);
            var ru = new Lang();
            ru.Name = "ru";
            ru.Errors.Add(new string[] { "accepted", "Вы должны принять :attribute." });
            ru.Errors.Add(new string[] { "active_url", "Поле :attribute содержит недействительный URL." });
            ru.Errors.Add(new string[] { "after", "В поле :attribute должна быть дата больше :date." });
            ru.Errors.Add(new string[] { "after_or_equal", "В поле :attribute должна быть дата больше или равняться :date." });
            ru.Errors.Add(new string[] { "alpha", "Поле :attribute может содержать только буквы." });
            ru.Errors.Add(new string[] { "alpha_dash", "Поле :attribute может содержать только буквы, цифры, дефис и нижнее подчеркивание." });
            ru.Errors.Add(new string[] { "alpha_num", "Поле :attribute может содержать только буквы и цифры." });
            ru.Errors.Add(new string[] { "before", "В поле :attribute должна быть дата раньше :date." });
            ru.Errors.Add(new string[] { "before_or_equal", "В поле :attribute должна быть дата раньше или равняться :date." });
            ru.Errors.Add(new string[] { "between_list", "Количество элементов в поле :attribute должно быть между :min и :max." });
            ru.Errors.Add(new string[] { "between_numeric", "Значение поля :attribute должно быть между :min и :max." });
            ru.Errors.Add(new string[] { "between", "Количество символов в поле :attribute должно быть между :min и :max." });
            ru.Errors.Add(new string[] { "boolean", "Поле :attribute должно иметь значение логического типа." });
            ru.Errors.Add(new string[] { "confirmed", "Поле :attribute не совпадает с подтверждением." });
            ru.Errors.Add(new string[] { "declined", "Поле :attribute должно быть отклонено." });
            ru.Errors.Add(new string[] { "different", "Поля :attribute и :other должны различаться." });
            ru.Errors.Add(new string[] { "email", "Поле :attribute должно быть действительным электронным адресом." });
            ru.Errors.Add(new string[] { "ends_with", "Поле :attribute должно заканчиваться одним из следующих значений: :values," });
            ru.Errors.Add(new string[] { "gt_list", "Количество элементов в поле :attribute должно быть больше :value." });
            ru.Errors.Add(new string[] { "gt_numeric", "Значение поля :attribute должно быть больше :value." });
            ru.Errors.Add(new string[] { "gt", "Количество символов в поле :attribute должно быть больше :value." });
            ru.Errors.Add(new string[] { "gte_list", "Количество элементов в поле :attribute должно быть :value или больше." });
            ru.Errors.Add(new string[] { "gte_numeric", "Значение поля :attribute должно быть :value или больше." });
            ru.Errors.Add(new string[] { "gte", "Количество символов в поле :attribute должно быть :value или больше." });
            ru.Errors.Add(new string[] { "in", "Выбранное значение для :attribute ошибочно." });
            ru.Errors.Add(new string[] { "integer", "Поле :attribute должно быть целым числом." });
            ru.Errors.Add(new string[] { "ip", "Поле :attribute должно быть действительным IP-адресом." });
            ru.Errors.Add(new string[] { "ipv4", "Поле :attribute должно быть действительным IPv4-адресом." });
            ru.Errors.Add(new string[] { "ipv6", "Поле :attribute должно быть действительным IPv6-адресом." });
            ru.Errors.Add(new string[] { "json", "Поле :attribute должно быть JSON строкой." });
            ru.Errors.Add(new string[] { "lt_list", "Количество элементов в поле :attribute должно быть меньше :value." });
            ru.Errors.Add(new string[] { "lt_numeric", "Значение поля :attribute должно быть меньше :value." });
            ru.Errors.Add(new string[] { "lt", "Количество символов в поле :attribute должно быть меньше :value." });
            ru.Errors.Add(new string[] { "lte_list", "Количество элементов в поле :attribute должно быть :value или меньше." });
            ru.Errors.Add(new string[] { "lte_numeric", "Значение поля :attribute должно быть :value или меньше." });
            ru.Errors.Add(new string[] { "lte", "Количество символов в поле :attribute должно быть :value или меньше." });
            ru.Errors.Add(new string[] { "max_list", "Количество элементов в поле :attribute не может превышать :max." });
            ru.Errors.Add(new string[] { "max_numeric", "Значение поля :attribute не может быть больше :max." });
            ru.Errors.Add(new string[] { "max", "Количество символов в поле :attribute не может превышать :max." });
            ru.Errors.Add(new string[] { "mimes", "Поле :attribute должно быть файлом одного из следующих типов: :values." });
            ru.Errors.Add(new string[] { "min_list", "Количество элементов в поле :attribute должно быть не меньше :min." });
            ru.Errors.Add(new string[] { "min_numeric", "Значение поля :attribute должно быть не меньше :min." });
            ru.Errors.Add(new string[] { "min", "Количество символов в поле :attribute должно быть не меньше :min." });
            ru.Errors.Add(new string[] { "not_in", "Выбранное значение для :attribute ошибочно." });
            ru.Errors.Add(new string[] { "not_regex", "Выбранный формат для :attribute ошибочный." });
            ru.Errors.Add(new string[] { "numeric", "Поле :attribute должно быть числом." });
            ru.Errors.Add(new string[] { "password", "Неверный пароль." });
            ru.Errors.Add(new string[] { "regex", "Поле :attribute имеет ошибочный формат." });
            ru.Errors.Add(new string[] { "required", "Поле :attribute обязательно для заполнения." });
            ru.Errors.Add(new string[] { "same", "Значения полей :attribute и :other должны совпадать." });
            ru.Errors.Add(new string[] { "size_list", "Количество элементов в поле :attribute должно быть равным :size." });
            ru.Errors.Add(new string[] { "size_numeric", "Значение поля :attribute должно быть равным :size." });
            ru.Errors.Add(new string[] { "size", "Количество символов в поле :attribute должно быть равным :size." });
            ru.Errors.Add(new string[] { "starts_with", "Поле :attribute должно начинаться из одного из следующих значений: :values," });
            ru.Errors.Add(new string[] { "url", "Поле :attribute имеет ошибочный формат URL." });
            ru.Errors.Add(new string[] { "uuid", "Поле :attribute должно быть корректным UUID." });
            this.Langs.Add(ru);
            var sc = new Lang();
            sc.Name = "sc";
            sc.Errors.Add(new string[] { "accepted", ":attribute depet èssere atzetadu." });
            sc.Errors.Add(new string[] { "active_url", ":attribute no est un URL bàlidu." });
            sc.Errors.Add(new string[] { "after", ":attribute depet èssere una data chi benit a pustis de :date." });
            sc.Errors.Add(new string[] { "after_or_equal", "The :attribute must be a date after or equal to :date." });
            sc.Errors.Add(new string[] { "alpha", ":attribute podet cuntènnere isceti lìteras." });
            sc.Errors.Add(new string[] { "alpha_dash", ":attribute podet cuntènnere isceti lìteras, nùmeros e tratigheddos." });
            sc.Errors.Add(new string[] { "alpha_num", ":attribute podet cuntènnere isceti lìteras e nùmeros." });
            sc.Errors.Add(new string[] { "before", ":attribute depet èssere una data chi benit prima de :date." });
            sc.Errors.Add(new string[] { "before_or_equal", "The :attribute must be a date before or equal to :date." });
            sc.Errors.Add(new string[] { "between_list", ":attribute depet èssere intre :min - :max elementos." });
            sc.Errors.Add(new string[] { "between_numeric", ":attribute depet èssere intre :min - :max." });
            sc.Errors.Add(new string[] { "between", ":attribute depet èssere intre :min - :max caràteres." });
            sc.Errors.Add(new string[] { "boolean", "The :attribute field must be true or false," });
            sc.Errors.Add(new string[] { "confirmed", "Su campu de cunfirma pro :attribute non torrat." });
            sc.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sc.Errors.Add(new string[] { "different", ":attribute e :other depent èssere diferentes." });
            sc.Errors.Add(new string[] { "email", ":attribute no est bàlidu." });
            sc.Errors.Add(new string[] { "ends_with", "The :attribute must end with one of the following: :values." });
            sc.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            sc.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            sc.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            sc.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            sc.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            sc.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            sc.Errors.Add(new string[] { "in", ":attribute seberadu no est bàlidu." });
            sc.Errors.Add(new string[] { "integer", ":attribute depet èssere intreu." });
            sc.Errors.Add(new string[] { "ip", ":attribute depet èssere un indiritzu IP bàlidu." });
            sc.Errors.Add(new string[] { "ipv4", "The :attribute must be a valid IPv4 address." });
            sc.Errors.Add(new string[] { "ipv6", "The :attribute must be a valid IPv6 address." });
            sc.Errors.Add(new string[] { "json", "The :attribute must be a valid JSON string." });
            sc.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            sc.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            sc.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            sc.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            sc.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            sc.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            sc.Errors.Add(new string[] { "max_list", ":attribute non podet tènnere prus de :max elementos." });
            sc.Errors.Add(new string[] { "max_numeric", ":attribute depet èssere prus piticu de :max." });
            sc.Errors.Add(new string[] { "max", ":attribute non podet cuntènnere prus de :max caràteres." });
            sc.Errors.Add(new string[] { "mimes", ":attribute depet èssere de tipu: :values." });
            sc.Errors.Add(new string[] { "min_list", ":attribute depet tènnere a su mancu :min elementos." });
            sc.Errors.Add(new string[] { "min_numeric", ":attribute depet bàlere a su mancu :min." });
            sc.Errors.Add(new string[] { "min", ":attribute depet cuntènnere a su mancu :min caràteres." });
            sc.Errors.Add(new string[] { "not_in", "Su balore seberadu pro :attribute no est bàlidu." });
            sc.Errors.Add(new string[] { "not_regex", "The :attribute format is invalid." });
            sc.Errors.Add(new string[] { "numeric", ":attribute depet èssere unu nùmeru." });
            sc.Errors.Add(new string[] { "password", "The password is incorrect." });
            sc.Errors.Add(new string[] { "regex", "Su formadu de su campu :attribute no est bàlidu." });
            sc.Errors.Add(new string[] { "required", ":attribute est pedidu." });
            sc.Errors.Add(new string[] { "same", ":attribute e :other depent èssere uguales." });
            sc.Errors.Add(new string[] { "size_list", ":attribute depet cuntènnere :size elementos." });
            sc.Errors.Add(new string[] { "size_numeric", ":attribute depet bàlere :size." });
            sc.Errors.Add(new string[] { "size", ":attribute depet cuntènnere :size caràteres." });
            sc.Errors.Add(new string[] { "starts_with", "The :attribute must start with one of the following: :values." });
            sc.Errors.Add(new string[] { "url", ":attribute depet èssere un URL." });
            sc.Errors.Add(new string[] { "uuid", "The :attribute must be a valid UUID." });
            this.Langs.Add(sc);
            var si = new Lang();
            si.Name = "si";
            si.Errors.Add(new string[] { "accepted", "මෙම :attribute වලංගු විය යුතුය." });
            si.Errors.Add(new string[] { "active_url", ":attribute වලංගු නැති URL එකකි." });
            si.Errors.Add(new string[] { "after", "මෙම :attribute, :date දිනයට පසු දිනයක් විය යුතුය." });
            si.Errors.Add(new string[] { "after_or_equal", "මෙම :attribute, :date දිනයම හෝ ඊට පසු දිනයක් විය යුතුය." });
            si.Errors.Add(new string[] { "alpha", "මෙම :attribute ට අඩංගු විය හැක්කේ අකුරු පමණි." });
            si.Errors.Add(new string[] { "alpha_dash", "මෙම :attribute ට අඩංගු විය හැක්කේ අකුරු, ඉලක්කම්, කෙටිඉර හා යටිඉර පමණි." });
            si.Errors.Add(new string[] { "alpha_num", "මෙම :attribute ට අඩංගු විය හැක්කේ අකුරු හා ඉලක්කම් පමණි." });
            si.Errors.Add(new string[] { "before", "මෙම :attribute, :date දිනයට පෙර දිනයක් විය යුතුය." });
            si.Errors.Add(new string[] { "before_or_equal", "මෙම :attribute, :date දිනයම හෝ ඊට පෙර දිනයක් විය යුතුය." });
            si.Errors.Add(new string[] { "between_list", "මෙම අන්තර්ගතය :min ත් :max ත් අතර විය යුතුය." });
            si.Errors.Add(new string[] { "between_numeric", "මෙම සංක්‍යාව :min ත් :max ත් අතර විය යුතුය." });
            si.Errors.Add(new string[] { "between", "මෙම වචනය අකුරු :min ත් :max ත් අතර විය යුතුය." });
            si.Errors.Add(new string[] { "boolean", "මෙම :attribute ය සත්‍ය හෝ අසත්‍ය අගයක් විය යුතුය." });
            si.Errors.Add(new string[] { "confirmed", "මෙම :attribute තහවුරු කිරීම නොගැලපේ." });
            si.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            si.Errors.Add(new string[] { "different", "මෙම :attribute එක හා :other එකිනෙකට වෙනස් විය යුතුය." });
            si.Errors.Add(new string[] { "email", "මෙම :attribute එක වලංගු විද්‍යුත් ලිපිනයක් විය යුතුය." });
            si.Errors.Add(new string[] { "ends_with", "මෙම :attribute එක :values මගින් අවසාන විය යුතුය." });
            si.Errors.Add(new string[] { "gt_list", "මෙම :attribute එක :value ට වඩා වැඩි අයිතම ගණනක් විය යුතුය." });
            si.Errors.Add(new string[] { "gt_numeric", "මෙම :attribute එක :value ට වඩා වැඩි අගයක් විය යුතුය." });
            si.Errors.Add(new string[] { "gt", "මෙම :attribute එක :value ට වඩා වැඩි අකුරු ගණනක් විය යුතුය." });
            si.Errors.Add(new string[] { "gte_list", "මෙම :attribute එක අයිතම :value ට වඩා වැඩි හෝ සමාන විය යුතුයි." });
            si.Errors.Add(new string[] { "gte_numeric", "මෙම :attribute එක :value ට වඩා වැඩි හෝ සමාන විය යුතුයි." });
            si.Errors.Add(new string[] { "gte", "මෙම :attribute එක අකුරු :value ට වඩා වැඩි හෝ සමාන විය යුතුයි." });
            si.Errors.Add(new string[] { "in", "මෙම තෝරා ඇති :attribute වලංගු නැත." });
            si.Errors.Add(new string[] { "integer", "මෙම :attribute පූර්ණ සංඛ්යාවක් විය යුතුය." });
            si.Errors.Add(new string[] { "ip", "මෙම :attribute වලංගු IP ලිපිනයක් විය යුතුය." });
            si.Errors.Add(new string[] { "ipv4", "මෙම :attribute වලංගු IPv4 ලිපිනය විය යුතුය." });
            si.Errors.Add(new string[] { "ipv6", "මෙම :attribute වලංගු IPv6 ලිපිනය විය යුතුය." });
            si.Errors.Add(new string[] { "json", "මෙම :attribute වලංගු JSON පේළියක් විය යුතුය." });
            si.Errors.Add(new string[] { "lt_list", "මෙම :attribute එක :value ට වඩා අඩු අයිතම ගණනක් විය යුතුය." });
            si.Errors.Add(new string[] { "lt_numeric", "මෙම :attribute එක :value ට වඩා අඩු අගයක් විය යුතුය." });
            si.Errors.Add(new string[] { "lt", "මෙම :attribute එක :value ට වඩා අඩු අකුරු ගණනක් විය යුතුය." });
            si.Errors.Add(new string[] { "lte_list", "මෙම :attribute එක අයිතම :value ට වඩා අඩු හෝ සමාන විය යුතුයි." });
            si.Errors.Add(new string[] { "lte_numeric", "මෙම :attribute එක :value ට වඩා අඩු හෝ සමාන විය යුතුයි." });
            si.Errors.Add(new string[] { "lte", "මෙම :attribute එක අකුරු :value ට වඩා අඩු හෝ සමාන විය යුතුයි." });
            si.Errors.Add(new string[] { "max_list", "මෙම :attribute එක :max ට වඩා වැඩි නොවිය යුතුයි." });
            si.Errors.Add(new string[] { "max_numeric", "මෙම :attribute එක අකුරු :max ට වඩා වැඩි නොවිය යුතුයි." });
            si.Errors.Add(new string[] { "max", "මෙම :attribute එක අයිතම :max ට වඩා වැඩි නොවිය යුතුයි." });
            si.Errors.Add(new string[] { "mimes", "මෙම :attribute එක: :values වර්ගයේ ගොනුවක් විය යුතුය." });
            si.Errors.Add(new string[] { "min_list", "මෙම :attribute එක :min ට වඩා අඩු නොවිය යුතුයි." });
            si.Errors.Add(new string[] { "min_numeric", "මෙම :attribute එක අකුරු :min ට වඩා අඩු නොවිය යුතුයි." });
            si.Errors.Add(new string[] { "min", "මෙම :attribute එක අයිතම :min ට වඩා අඩු නොවිය යුතුයි." });
            si.Errors.Add(new string[] { "not_in", "මෙම තෝරා ඇත :attribute වලංගු නැත." });
            si.Errors.Add(new string[] { "not_regex", "මෙම :attribute ආකෘතිය වලංගු නැත." });
            si.Errors.Add(new string[] { "numeric", "මෙම :attribute අංකයක් විය යුතුය." });
            si.Errors.Add(new string[] { "password", "මුරපදය වැරදිය." });
            si.Errors.Add(new string[] { "regex", "මෙම :attribute ආකෘතිය වලංගු නැත." });
            si.Errors.Add(new string[] { "required", "මෙම :attribute ක්ෂේත්‍රයේ අවශ්‍යයි." });
            si.Errors.Add(new string[] { "same", "මෙම :attribute සහ :other ගැලපිය යුතුයි." });
            si.Errors.Add(new string[] { "size_list", "මෙම :attribute යේ අයිතම :size ක් තිබිය යුතුය." });
            si.Errors.Add(new string[] { "size_numeric", "මෙම :attribute ය :size. ක් විය යුතුය." });
            si.Errors.Add(new string[] { "size", "මෙම :attribute ය අකුරු :size විය යුතුය." });
            si.Errors.Add(new string[] { "starts_with", "මෙම :attribute පහත සඳහන් එකක් සමඟ ආරම්භ කළ යුතුය: :values," });
            si.Errors.Add(new string[] { "url", "මෙම :attribute ආකෘතිය වලංගු නැත." });
            si.Errors.Add(new string[] { "uuid", "මෙම :attribute වලංගු UUID විය යුතුය." });
            this.Langs.Add(si);
            var sk = new Lang();
            sk.Name = "sk";
            sk.Errors.Add(new string[] { "accepted", ":attribute musí byť akceptovaný." });
            sk.Errors.Add(new string[] { "active_url", ":attribute má neplatnú URL adresu." });
            sk.Errors.Add(new string[] { "after", ":attribute musí byť dátum po :date." });
            sk.Errors.Add(new string[] { "after_or_equal", ":attribute musí byť dátum po alebo presne :date." });
            sk.Errors.Add(new string[] { "alpha", ":attribute môže obsahovať len písmená." });
            sk.Errors.Add(new string[] { "alpha_dash", ":attribute môže obsahovať len písmená, čísla a pomlčky." });
            sk.Errors.Add(new string[] { "alpha_num", ":attribute môže obsahovať len písmená, čísla." });
            sk.Errors.Add(new string[] { "before", ":attribute musí byť dátum pred :date." });
            sk.Errors.Add(new string[] { "before_or_equal", ":attribute musí byť dátum pred alebo presne :date." });
            sk.Errors.Add(new string[] { "between_list", ":Attribute musí mať rozsah :min - :max prvkov." });
            sk.Errors.Add(new string[] { "between_numeric", ":Attribute musí mať rozsah :min - :max." });
            sk.Errors.Add(new string[] { "between", ":Attribute musí mať rozsah :min - :max znakov." });
            sk.Errors.Add(new string[] { "boolean", ":attribute musí byť pravda alebo nepravda." });
            sk.Errors.Add(new string[] { "confirmed", ":attribute konfirmácia sa nezhoduje." });
            sk.Errors.Add(new string[] { "declined", ":attribute musí byť zamietnuté." });
            sk.Errors.Add(new string[] { "different", ":attribute a :other musia byť odlišné." });
            sk.Errors.Add(new string[] { "email", ":attribute má neplatný formát." });
            sk.Errors.Add(new string[] { "ends_with", ":attribute musí obsahovať jednú z týchto hodnôt: :values." });
            sk.Errors.Add(new string[] { "gt_list", ":Attribute musí mať viac prvkov ako :value." });
            sk.Errors.Add(new string[] { "gt_numeric", "Hodnota :attribute musí byť väčšia ako :value." });
            sk.Errors.Add(new string[] { "gt", ":Attribute musí mať viac znakov ako :value." });
            sk.Errors.Add(new string[] { "gte_list", ":Attribute musí mať rovnaký alebo väčší počet prvkov ako :value." });
            sk.Errors.Add(new string[] { "gte_numeric", "Hodnota :attribute musí byť väčšia alebo rovná ako :value." });
            sk.Errors.Add(new string[] { "gte", ":Attribute musí mať rovnaký alebo väčší počet znakov ako :value." });
            sk.Errors.Add(new string[] { "in", "označený :attribute je neplatný." });
            sk.Errors.Add(new string[] { "integer", ":attribute musí byť celé číslo." });
            sk.Errors.Add(new string[] { "ip", ":attribute musí byť platná IP adresa." });
            sk.Errors.Add(new string[] { "ipv4", ":attribute musí byť platná IPv4 adresa." });
            sk.Errors.Add(new string[] { "ipv6", ":attribute musí byť platná IPv6 adresa." });
            sk.Errors.Add(new string[] { "json", ":attribute musí byť platný JSON reťazec." });
            sk.Errors.Add(new string[] { "lt_list", ":Attribute musí mať menej prvkov ako :value." });
            sk.Errors.Add(new string[] { "lt_numeric", "Hodnota :attribute musí byť menšia ako :value." });
            sk.Errors.Add(new string[] { "lt", ":Attribute musí mať menej znakov ako :value." });
            sk.Errors.Add(new string[] { "lte_list", ":Attribute musí mať rovnaký alebo menší počet prvkov ako :value." });
            sk.Errors.Add(new string[] { "lte_numeric", "Hodnota :attribute musí byť menšia alebo rovná ako :value." });
            sk.Errors.Add(new string[] { "lte", ":Attribute musí mať rovnaký alebo menší počet znakov ako :value." });
            sk.Errors.Add(new string[] { "max_list", ":Attribute nemôže mať viac ako :max prvkov." });
            sk.Errors.Add(new string[] { "max_numeric", ":Attribute nemôže byť väčší ako :max." });
            sk.Errors.Add(new string[] { "max", ":Attribute nemôže byť väčší ako :max znakov." });
            sk.Errors.Add(new string[] { "mimes", ":attribute musí byť súbor s koncovkou: :values." });
            sk.Errors.Add(new string[] { "min_list", ":Attribute musí mať aspoň :min prvkov." });
            sk.Errors.Add(new string[] { "min_numeric", ":Attribute musí mať aspoň :min." });
            sk.Errors.Add(new string[] { "min", ":Attribute musí mať aspoň :min znakov." });
            sk.Errors.Add(new string[] { "not_in", "označený :attribute je neplatný." });
            sk.Errors.Add(new string[] { "not_regex", ":attribute má neplatný formát." });
            sk.Errors.Add(new string[] { "numeric", ":attribute musí byť číslo." });
            sk.Errors.Add(new string[] { "password", "Heslo nie je správne," });
            sk.Errors.Add(new string[] { "regex", ":attribute má neplatný formát." });
            sk.Errors.Add(new string[] { "required", ":attribute je požadované." });
            sk.Errors.Add(new string[] { "same", ":attribute a :other sa musia zhodovať." });
            sk.Errors.Add(new string[] { "size_list", ":Attribute musí obsahovať :size prvkov." });
            sk.Errors.Add(new string[] { "size_numeric", ":Attribute musí byť :size." });
            sk.Errors.Add(new string[] { "size", ":Attribute musí mať :size znakov." });
            sk.Errors.Add(new string[] { "starts_with", ":attribute musí začínať niektorou z hodnôt: :values," });
            sk.Errors.Add(new string[] { "url", ":attribute musí mať formát URL." });
            sk.Errors.Add(new string[] { "uuid", ":attribute musí byť platné UUID." });
            this.Langs.Add(sk);
            var sl = new Lang();
            sl.Name = "sl";
            sl.Errors.Add(new string[] { "accepted", ":attribute mora biti sprejet." });
            sl.Errors.Add(new string[] { "active_url", ":attribute ni pravilen." });
            sl.Errors.Add(new string[] { "after", ":attribute mora biti za datumom :date." });
            sl.Errors.Add(new string[] { "after_or_equal", ":attribute mora biti za ali enak :date." });
            sl.Errors.Add(new string[] { "alpha", ":attribute lahko vsebuje samo črke." });
            sl.Errors.Add(new string[] { "alpha_dash", ":attribute lahko vsebuje samo črke, številke in črtice." });
            sl.Errors.Add(new string[] { "alpha_num", ":attribute lahko vsebuje samo črke in številke." });
            sl.Errors.Add(new string[] { "before", ":attribute mora biti pred datumom :date." });
            sl.Errors.Add(new string[] { "before_or_equal", ":attribute mora biti pred ali enak :date." });
            sl.Errors.Add(new string[] { "between_list", ":attribute mora imeti med :min in :max elementov." });
            sl.Errors.Add(new string[] { "between_numeric", ":attribute mora biti med :min in :max." });
            sl.Errors.Add(new string[] { "between", ":attribute mora biti med :min in :max znaki." });
            sl.Errors.Add(new string[] { "boolean", ":attribute polje mora biti 1 ali 0," });
            sl.Errors.Add(new string[] { "confirmed", ":attribute potrditev se ne ujema." });
            sl.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sl.Errors.Add(new string[] { "different", ":attribute in :other mora biti drugačen." });
            sl.Errors.Add(new string[] { "email", ":attribute mora biti veljaven e-poštni naslov." });
            sl.Errors.Add(new string[] { "ends_with", ":attribute se mora končati z eno od naslednjih vrednosti: :values." });
            sl.Errors.Add(new string[] { "gt_list", ":attribute mora imeti več kot :value elementov." });
            sl.Errors.Add(new string[] { "gt_numeric", ":attribute mora biti večji od :value." });
            sl.Errors.Add(new string[] { "gt", ":attribute mora imeti več kot :value znakov." });
            sl.Errors.Add(new string[] { "gte_list", ":attribute mora imeti število elementov enako ali večje od :value." });
            sl.Errors.Add(new string[] { "gte_numeric", ":attribute mora biti večji ali enak :value." });
            sl.Errors.Add(new string[] { "gte", ":attribute mora imeti število znakov večje ali enako :value." });
            sl.Errors.Add(new string[] { "in", "izbran :attribute je neveljaven." });
            sl.Errors.Add(new string[] { "integer", ":attribute mora biti število." });
            sl.Errors.Add(new string[] { "ip", ":attribute mora biti veljaven IP naslov." });
            sl.Errors.Add(new string[] { "ipv4", ":attribute mora biti veljaven IPv4 naslov." });
            sl.Errors.Add(new string[] { "ipv6", ":attribute mora biti veljaven IPv6 naslov." });
            sl.Errors.Add(new string[] { "json", ":attribute mora biti veljaven JSON tekst." });
            sl.Errors.Add(new string[] { "lt_list", ":attribute mora imeti manj kot :value elementov." });
            sl.Errors.Add(new string[] { "lt_numeric", ":attribute mora biti manjši od :value." });
            sl.Errors.Add(new string[] { "lt", ":attribute mora imeti manj kot :value znakov." });
            sl.Errors.Add(new string[] { "lte_list", ":attribute mora imeti število elementov manjše ali enako :value." });
            sl.Errors.Add(new string[] { "lte_numeric", ":attribute mora biti manjši ali enak :value." });
            sl.Errors.Add(new string[] { "lte", ":attribute mora imeti število znakov manjše ali enako :value." });
            sl.Errors.Add(new string[] { "max_list", ":attribute ne smejo imeti več kot :max elementov." });
            sl.Errors.Add(new string[] { "max_numeric", ":attribute ne sme biti večje od :max." });
            sl.Errors.Add(new string[] { "max", ":attribute ne sme biti večje :max znakov." });
            sl.Errors.Add(new string[] { "mimes", ":attribute mora biti datoteka tipa: :values." });
            sl.Errors.Add(new string[] { "min_list", ":attribute mora imeti vsaj :min elementov." });
            sl.Errors.Add(new string[] { "min_numeric", ":attribute mora biti vsaj dolžine :min." });
            sl.Errors.Add(new string[] { "min", ":attribute mora imeti vsaj :min znakov." });
            sl.Errors.Add(new string[] { "not_in", "Izbran :attribute je neveljaven." });
            sl.Errors.Add(new string[] { "not_regex", "Format :attribute je neveljaven." });
            sl.Errors.Add(new string[] { "numeric", ":attribute mora biti število." });
            sl.Errors.Add(new string[] { "password", "Greslo ni pravilno." });
            sl.Errors.Add(new string[] { "regex", "Format polja :attribute je neveljaven." });
            sl.Errors.Add(new string[] { "required", "Polje :attribute je obvezno." });
            sl.Errors.Add(new string[] { "same", "Polje :attribute in :other se morata ujemati." });
            sl.Errors.Add(new string[] { "size_list", ":attribute mora vsebovati :size elementov." });
            sl.Errors.Add(new string[] { "size_numeric", ":attribute mora biti :size." });
            sl.Errors.Add(new string[] { "size", ":attribute mora biti :size znakov." });
            sl.Errors.Add(new string[] { "starts_with", ":attribute se mora začeti z eno od naslednjih vrednosti: :values," });
            sl.Errors.Add(new string[] { "url", ":attribute format je neveljaven." });
            sl.Errors.Add(new string[] { "uuid", ":attribute mora biti veljaven UUID." });
            this.Langs.Add(sl);
            var sq = new Lang();
            sq.Name = "sq";
            sq.Errors.Add(new string[] { "accepted", ":attribute duhet të pranohet." });
            sq.Errors.Add(new string[] { "active_url", ":attribute nuk është adresë e saktë." });
            sq.Errors.Add(new string[] { "after", ":attribute duhet të jetë datë pas :date." });
            sq.Errors.Add(new string[] { "after_or_equal", ":attribute duhet të jetë datë e barabartë ose pas :date." });
            sq.Errors.Add(new string[] { "alpha", ":attribute mund të përmbajë vetëm shkronja." });
            sq.Errors.Add(new string[] { "alpha_dash", ":attribute mund të përmbajë vetëm shkronja, numra, dhe viza." });
            sq.Errors.Add(new string[] { "alpha_num", ":attribute mund të përmbajë vetëm shkronja dhe numra." });
            sq.Errors.Add(new string[] { "before", ":attribute duhet të jetë datë para :date." });
            sq.Errors.Add(new string[] { "before_or_equal", ":attribute duhet të jetë datë e barabartë ose para :date." });
            sq.Errors.Add(new string[] { "between_list", ":attribute duhet të ketë ndërmjet :min - :max elementëve." });
            sq.Errors.Add(new string[] { "between_numeric", ":attribute duhet të jetë ndërmjet :min - :max." });
            sq.Errors.Add(new string[] { "between", ":attribute duhet të ketë ndërmjet :min - :max karaktereve." });
            sq.Errors.Add(new string[] { "boolean", "Fusha :attribute duhet të jetë e vërtetë ose e gabuar," });
            sq.Errors.Add(new string[] { "confirmed", ":attribute konfirmimi nuk përputhet." });
            sq.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sq.Errors.Add(new string[] { "different", ":attribute dhe :other duhet të jenë të ndryshme." });
            sq.Errors.Add(new string[] { "email", ":attribute formati është i pasaktë." });
            sq.Errors.Add(new string[] { "ends_with", ":attribute duhet të përfundojë me një nga vlerat: :values." });
            sq.Errors.Add(new string[] { "gt_list", ":attribute duhet të ketë më shumë se :value elemente." });
            sq.Errors.Add(new string[] { "gt_numeric", ":attribute duhet të jetë më i/e madh/e se :value." });
            sq.Errors.Add(new string[] { "gt", ":attribute duhet të ketë më shumë se :value karaktere." });
            sq.Errors.Add(new string[] { "gte_list", ":attribute duhet të ketë :value ose më shumë elemente." });
            sq.Errors.Add(new string[] { "gte_numeric", ":attribute duhet të jetë më i/e madh/e ose i/e barabartë me :value." });
            sq.Errors.Add(new string[] { "gte", ":attribute duhet të ketë :value ose më shumë karaktere." });
            sq.Errors.Add(new string[] { "in", ":attribute përzgjedhur është i/e pasaktë." });
            sq.Errors.Add(new string[] { "integer", ":attribute duhet të jetë numër i plotë." });
            sq.Errors.Add(new string[] { "ip", ":attribute duhet të jetë një IP adresë." });
            sq.Errors.Add(new string[] { "ipv4", ":attribute duhet të jetë një IPv4 adresë." });
            sq.Errors.Add(new string[] { "ipv6", ":attribute duhet të jetë një IPv6 adresë." });
            sq.Errors.Add(new string[] { "json", ":attribute duhet të ketë përmbajtje të vlefshme JSON." });
            sq.Errors.Add(new string[] { "lt_list", ":attribute duhet të ketë më pak se :value elemente." });
            sq.Errors.Add(new string[] { "lt_numeric", ":attribute duhet të jetë më i/e vogël se :value." });
            sq.Errors.Add(new string[] { "lt", ":attribute duhet të ketë më pak se :value karaktere." });
            sq.Errors.Add(new string[] { "lte_list", ":attribute duhet të ketë :value ose më pak karaktere." });
            sq.Errors.Add(new string[] { "lte_numeric", ":attribute duhet të jetë më i/e vogël ose i/e barabartë me :value." });
            sq.Errors.Add(new string[] { "lte", ":attribute duhet të ketë :value ose më pak karaktere." });
            sq.Errors.Add(new string[] { "max_list", ":attribute nuk mund të ketë më tepër se :max elemente." });
            sq.Errors.Add(new string[] { "max_numeric", ":attribute nuk mund të jetë më tepër se :max." });
            sq.Errors.Add(new string[] { "max", ":attribute nuk mund të ketë më tepër se :max karaktere." });
            sq.Errors.Add(new string[] { "mimes", ":attribute duhet të jetë një dokument i tipit: :values." });
            sq.Errors.Add(new string[] { "min_list", ":attribute nuk mund të ketë më pak se :min elemente." });
            sq.Errors.Add(new string[] { "min_numeric", ":attribute nuk mund të jetë më pak se :min." });
            sq.Errors.Add(new string[] { "min", ":attribute nuk mund të ketë më pak se :min karaktere." });
            sq.Errors.Add(new string[] { "not_in", ":attribute përzgjedhur është i/e pasaktë." });
            sq.Errors.Add(new string[] { "not_regex", "Formati i :attribute është i pasaktë." });
            sq.Errors.Add(new string[] { "numeric", ":attribute duhet të jetë një numër." });
            sq.Errors.Add(new string[] { "password", "Fjalëkalimi është i pasaktë." });
            sq.Errors.Add(new string[] { "regex", "Formati i :attribute është i pasaktë." });
            sq.Errors.Add(new string[] { "required", "Fusha :attribute është e kërkuar." });
            sq.Errors.Add(new string[] { "same", ":attribute dhe :other duhet të përputhen." });
            sq.Errors.Add(new string[] { "size_list", ":attribute duhet të ketë :size elemente." });
            sq.Errors.Add(new string[] { "size_numeric", ":attribute duhet të jetë :size." });
            sq.Errors.Add(new string[] { "size", ":attribute duhet të ketë :size karaktere." });
            sq.Errors.Add(new string[] { "starts_with", ":attribute duhet të fillojë me njërën nga vlerat: :values." });
            sq.Errors.Add(new string[] { "url", "Formati i :attribute është i pasaktë." });
            sq.Errors.Add(new string[] { "uuid", ":attribute duhet të jetë UUID i/e saktë." });
            this.Langs.Add(sq);
            var sr_Cyrl = new Lang();
            sr_Cyrl.Name = "sr_Cyrl";
            sr_Cyrl.Errors.Add(new string[] { "accepted", "Поље :attribute мора бити прихваћено." });
            sr_Cyrl.Errors.Add(new string[] { "active_url", "Поље :attribute није валидан УРЛ." });
            sr_Cyrl.Errors.Add(new string[] { "after", "Поље :attribute мора бити датум после :date." });
            sr_Cyrl.Errors.Add(new string[] { "after_or_equal", "Поље :attribute мора да буде :date или каснији датум." });
            sr_Cyrl.Errors.Add(new string[] { "alpha", "Поље :attribute може садржати само слова." });
            sr_Cyrl.Errors.Add(new string[] { "alpha_dash", "Поље :attribute може садржати само слова, бројеве и повлаке." });
            sr_Cyrl.Errors.Add(new string[] { "alpha_num", "Поље :attribute може садржати само слова и бројеве." });
            sr_Cyrl.Errors.Add(new string[] { "before", "Поље :attribute мора бити датум пре :date." });
            sr_Cyrl.Errors.Add(new string[] { "before_or_equal", ":attribute мора да буде :date или ранији датум." });
            sr_Cyrl.Errors.Add(new string[] { "between_list", "Поље :attribute мора бити између :min - :max ставки." });
            sr_Cyrl.Errors.Add(new string[] { "between_numeric", "Поље :attribute мора бити између :min - :max." });
            sr_Cyrl.Errors.Add(new string[] { "between", "Поље :attribute мора бити између :min - :max карактера." });
            sr_Cyrl.Errors.Add(new string[] { "boolean", "Поље :attribute мора бити тачно или нетачно," });
            sr_Cyrl.Errors.Add(new string[] { "confirmed", "Потврда поља :attribute се не поклапа." });
            sr_Cyrl.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sr_Cyrl.Errors.Add(new string[] { "different", "Поља :attribute и :other морају бити различита." });
            sr_Cyrl.Errors.Add(new string[] { "email", "Формат поља :attribute није валидан." });
            sr_Cyrl.Errors.Add(new string[] { "ends_with", "Поље :attribute мора да се заврши са нечим од следећег: :values." });
            sr_Cyrl.Errors.Add(new string[] { "gt_list", "Поље :attribute мора да садржи више од :value ставке." });
            sr_Cyrl.Errors.Add(new string[] { "gt_numeric", "Поље :attribute мора да буде већи од :value." });
            sr_Cyrl.Errors.Add(new string[] { "gt", "Поље :attribute мора да садржи више од :value знакова." });
            sr_Cyrl.Errors.Add(new string[] { "gte_list", "Поље :attribute мора да садржи :value ставки или више." });
            sr_Cyrl.Errors.Add(new string[] { "gte_numeric", "Поље :attribute мора да буде :value или већи." });
            sr_Cyrl.Errors.Add(new string[] { "gte", "Поље :attribute мора да садржи :value или више знакова." });
            sr_Cyrl.Errors.Add(new string[] { "in", "Поље Одабрано поље :attribute није валидно." });
            sr_Cyrl.Errors.Add(new string[] { "integer", "Поље :attribute мора бити број." });
            sr_Cyrl.Errors.Add(new string[] { "ip", "Поље :attribute мора бити валидна ИП адреса." });
            sr_Cyrl.Errors.Add(new string[] { "ipv4", "Поље :attribute мора да буде важећа ИПв4 адреса." });
            sr_Cyrl.Errors.Add(new string[] { "ipv6", "Поље :attribute мора да буде важећа ИПв6 адреса." });
            sr_Cyrl.Errors.Add(new string[] { "json", "Поље :attribute мора да буде важећа ЈСОН формат." });
            sr_Cyrl.Errors.Add(new string[] { "lt_list", "Поље :attribute мора да садржи мање од :value ставки." });
            sr_Cyrl.Errors.Add(new string[] { "lt_numeric", "Поље :attribute мора да буде мањи од :value." });
            sr_Cyrl.Errors.Add(new string[] { "lt", "Поље :attribute мора да садржи мање од :value знакова." });
            sr_Cyrl.Errors.Add(new string[] { "lte_list", "Поље :attribute не сме да садржи више од :value ставки." });
            sr_Cyrl.Errors.Add(new string[] { "lte_numeric", "Поље :attribute мора да буде :value или мањи." });
            sr_Cyrl.Errors.Add(new string[] { "lte", "Поље :attribute мора да садржи :value или мање знакова." });
            sr_Cyrl.Errors.Add(new string[] { "max_list", "Поље :attribute не смије да имаге више од :max ставки." });
            sr_Cyrl.Errors.Add(new string[] { "max_numeric", "Поље :attribute мора бити мање од :max." });
            sr_Cyrl.Errors.Add(new string[] { "max", "Поље :attribute мора садржати мање од :max карактера." });
            sr_Cyrl.Errors.Add(new string[] { "mimes", "Поље :attribute мора бити фајл типа: :values." });
            sr_Cyrl.Errors.Add(new string[] { "min_list", "Поље :attribute мора садрзати најмање :min ставку." });
            sr_Cyrl.Errors.Add(new string[] { "min_numeric", "Поље :attribute мора бити најмање :min." });
            sr_Cyrl.Errors.Add(new string[] { "min", "Поље :attribute мора садржати најмање :min карактера." });
            sr_Cyrl.Errors.Add(new string[] { "not_in", "Одабрани елемент поља :attribute није валидан." });
            sr_Cyrl.Errors.Add(new string[] { "not_regex", "Формат :attribute је неважећи." });
            sr_Cyrl.Errors.Add(new string[] { "numeric", "Поље :attribute мора бити број." });
            sr_Cyrl.Errors.Add(new string[] { "password", "Погрешна лозинка," });
            sr_Cyrl.Errors.Add(new string[] { "regex", "Формат поља :attribute није валидан." });
            sr_Cyrl.Errors.Add(new string[] { "required", "Поље :attribute је обавезно." });
            sr_Cyrl.Errors.Add(new string[] { "same", "Поља :attribute и :other се морају поклапати." });
            sr_Cyrl.Errors.Add(new string[] { "size_list", "Поље :attribute мора садржати :size ставки." });
            sr_Cyrl.Errors.Add(new string[] { "size_numeric", "Поље :attribute мора бити :size." });
            sr_Cyrl.Errors.Add(new string[] { "size", "Поље :attribute мора бити :size карактера." });
            sr_Cyrl.Errors.Add(new string[] { "starts_with", "Поље :attribute мора да почне са: :values," });
            sr_Cyrl.Errors.Add(new string[] { "url", "Формат поља :attribute не важи." });
            sr_Cyrl.Errors.Add(new string[] { "uuid", ":attribute мора да буде важећи УУИД." });
            this.Langs.Add(sr_Cyrl);
            var sr_Latn = new Lang();
            sr_Latn.Name = "sr_Latn";
            sr_Latn.Errors.Add(new string[] { "accepted", "Polje :attribute mora biti prihvaćeno." });
            sr_Latn.Errors.Add(new string[] { "active_url", "Polje :attribute nije validan URL." });
            sr_Latn.Errors.Add(new string[] { "after", "Polje :attribute mora biti datum posle :date." });
            sr_Latn.Errors.Add(new string[] { "after_or_equal", "Polje :attribute mora da bude :date ili kasniji datum." });
            sr_Latn.Errors.Add(new string[] { "alpha", "Polje :attribute može sadržati samo slova." });
            sr_Latn.Errors.Add(new string[] { "alpha_dash", "Polje :attribute može sadržati samo slova, brojeve i povlake." });
            sr_Latn.Errors.Add(new string[] { "alpha_num", "Polje :attribute može sadržati samo slova i brojeve." });
            sr_Latn.Errors.Add(new string[] { "before", "Polje :attribute mora biti datum pre :date." });
            sr_Latn.Errors.Add(new string[] { "before_or_equal", ":attribute mora da bude :date ili raniji datum." });
            sr_Latn.Errors.Add(new string[] { "between_list", "Polje :attribute mora biti između :min - :max stavki." });
            sr_Latn.Errors.Add(new string[] { "between_numeric", "Polje :attribute mora biti između :min - :max." });
            sr_Latn.Errors.Add(new string[] { "between", "Polje :attribute mora biti između :min - :max karaktera." });
            sr_Latn.Errors.Add(new string[] { "boolean", "Polje :attribute mora biti tačno ili netačno," });
            sr_Latn.Errors.Add(new string[] { "confirmed", "Potvrda polja :attribute se ne poklapa." });
            sr_Latn.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sr_Latn.Errors.Add(new string[] { "different", "Polja :attribute i :other moraju biti različita." });
            sr_Latn.Errors.Add(new string[] { "email", "Format polja :attribute nije validan." });
            sr_Latn.Errors.Add(new string[] { "ends_with", "Polje :attribute mora da se završi sa nečim od sledećeg: :values." });
            sr_Latn.Errors.Add(new string[] { "gt_list", "Polje :attribute mora da sadrži više od :value stavke." });
            sr_Latn.Errors.Add(new string[] { "gt_numeric", "Polje :attribute mora da bude veći od :value." });
            sr_Latn.Errors.Add(new string[] { "gt", "Polje :attribute mora da sadrži više od :value znakova." });
            sr_Latn.Errors.Add(new string[] { "gte_list", "Polje :attribute mora da sadrži :value stavki ili više." });
            sr_Latn.Errors.Add(new string[] { "gte_numeric", "Polje :attribute mora da bude :value ili veći." });
            sr_Latn.Errors.Add(new string[] { "gte", "Polje :attribute mora da sadrži :value ili više znakova." });
            sr_Latn.Errors.Add(new string[] { "in", "Polje Odabrano polje :attribute nije validno." });
            sr_Latn.Errors.Add(new string[] { "integer", "Polje :attribute mora biti broj." });
            sr_Latn.Errors.Add(new string[] { "ip", "Polje :attribute mora biti validna IP adresa." });
            sr_Latn.Errors.Add(new string[] { "ipv4", "Polje :attribute mora da bude važeća IPv4 adresa." });
            sr_Latn.Errors.Add(new string[] { "ipv6", "Polje :attribute mora da bude važeća IPv6 adresa." });
            sr_Latn.Errors.Add(new string[] { "json", "Polje :attribute mora da bude važeća JSON niska." });
            sr_Latn.Errors.Add(new string[] { "lt_list", "Polje :attribute mora da sadrži manje od :value stavki." });
            sr_Latn.Errors.Add(new string[] { "lt_numeric", "Polje :attribute mora da bude manji od :value." });
            sr_Latn.Errors.Add(new string[] { "lt", "Polje :attribute mora da sadrži manje od :value znakova." });
            sr_Latn.Errors.Add(new string[] { "lte_list", "Polje :attribute ne sme da sadrži više od :value stavki." });
            sr_Latn.Errors.Add(new string[] { "lte_numeric", "Polje :attribute mora da bude :value ili manji." });
            sr_Latn.Errors.Add(new string[] { "lte", "Polje :attribute mora da sadrži :value ili manje znakova." });
            sr_Latn.Errors.Add(new string[] { "max_list", "Polje :attribute ne smije da image više od :max stavki." });
            sr_Latn.Errors.Add(new string[] { "max_numeric", "Polje :attribute mora biti manje od :max." });
            sr_Latn.Errors.Add(new string[] { "max", "Polje :attribute mora sadržati manje od :max karaktera." });
            sr_Latn.Errors.Add(new string[] { "mimes", "Polje :attribute mora biti fajl tipa: :values." });
            sr_Latn.Errors.Add(new string[] { "min_list", "Polje :attribute mora sadrzati najmanje :min stavku." });
            sr_Latn.Errors.Add(new string[] { "min_numeric", "Polje :attribute mora biti najmanje :min." });
            sr_Latn.Errors.Add(new string[] { "min", "Polje :attribute mora sadržati najmanje :min karaktera." });
            sr_Latn.Errors.Add(new string[] { "not_in", "Odabrani element polja :attribute nije validan." });
            sr_Latn.Errors.Add(new string[] { "not_regex", "Format :attribute je nevažeći." });
            sr_Latn.Errors.Add(new string[] { "numeric", "Polje :attribute mora biti broj." });
            sr_Latn.Errors.Add(new string[] { "password", "Pogrešna lozinka," });
            sr_Latn.Errors.Add(new string[] { "regex", "Format polja :attribute nije validan." });
            sr_Latn.Errors.Add(new string[] { "required", "Polje :attribute je obavezno." });
            sr_Latn.Errors.Add(new string[] { "same", "Polja :attribute i :other se moraju poklapati." });
            sr_Latn.Errors.Add(new string[] { "size_list", "Polje :attribute mora sadržati :size stavki." });
            sr_Latn.Errors.Add(new string[] { "size_numeric", "Polje :attribute mora biti :size." });
            sr_Latn.Errors.Add(new string[] { "size", "Polje :attribute mora biti :size karaktera." });
            sr_Latn.Errors.Add(new string[] { "starts_with", "Polje :attribute mora da počne sa: :values," });
            sr_Latn.Errors.Add(new string[] { "url", "Format polja :attribute ne važi." });
            sr_Latn.Errors.Add(new string[] { "uuid", ":attribute mora da bude važeći UUID." });
            this.Langs.Add(sr_Latn);
            var sr_Latn_ME = new Lang();
            sr_Latn_ME.Name = "sr_Latn_ME";
            sr_Latn_ME.Errors.Add(new string[] { "accepted", "Morate prihvatiti :attribute polje." });
            sr_Latn_ME.Errors.Add(new string[] { "active_url", "Polje :attribute nije link." });
            sr_Latn_ME.Errors.Add(new string[] { "after", "Polje :attribute mora da bude poslije :date." });
            sr_Latn_ME.Errors.Add(new string[] { "after_or_equal", "Polje :attribute mora da bude :date ili kasniji datum." });
            sr_Latn_ME.Errors.Add(new string[] { "alpha", "Polje :attribute mora da sadrži samo slova." });
            sr_Latn_ME.Errors.Add(new string[] { "alpha_dash", "Polje :attribute može da sadrži samo slova, brojeve i povlake." });
            sr_Latn_ME.Errors.Add(new string[] { "alpha_num", "Polje :attribute može da sadrži samo slova i brojeve." });
            sr_Latn_ME.Errors.Add(new string[] { "before", "Polje :attribute mora da bude datum prije :date." });
            sr_Latn_ME.Errors.Add(new string[] { "before_or_equal", "Polje :attribute mora da bude :date ili raniji datum." });
            sr_Latn_ME.Errors.Add(new string[] { "between_list", "Niz :attribute mora da ima najmanje :min, a najviše :max stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "between_numeric", "Vrijednost :attribute mora da bude između :min - :max." });
            sr_Latn_ME.Errors.Add(new string[] { "between", "Rečenica polja :attribute mora da ima najmanje :min a najviše :max znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "boolean", "Polje :attribute mora da bude tačno ili netačno." });
            sr_Latn_ME.Errors.Add(new string[] { "confirmed", "Potvrda za polje :attribute se ne poklapa." });
            sr_Latn_ME.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sr_Latn_ME.Errors.Add(new string[] { "different", "Polje :attribute mora da ima različitu vrijednost od :other." });
            sr_Latn_ME.Errors.Add(new string[] { "email", "Polje :attribute mora biti ispravna E-mail adresa." });
            sr_Latn_ME.Errors.Add(new string[] { "ends_with", "Polje :attribute mora da se završi sa: :values." });
            sr_Latn_ME.Errors.Add(new string[] { "gt_list", "Niz :attribute mora da sadrži više od :value stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "gt_numeric", "Polje :attribute mora da bude veće od :value." });
            sr_Latn_ME.Errors.Add(new string[] { "gt", "Polje :attribute mora da sadrži više od :value znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "gte_list", "Niz :attribute mora da sadrži najmanje :value stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "gte_numeric", "Polje :attribute može da bude najmanje :value." });
            sr_Latn_ME.Errors.Add(new string[] { "gte", "Polje :attribute mora da sadrži najmanje :value znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "in", "Polje :attribute ne sadrži neku od predloženih vrijednosti." });
            sr_Latn_ME.Errors.Add(new string[] { "integer", "Vrijednost polja :attribute mora da bude broj." });
            sr_Latn_ME.Errors.Add(new string[] { "ip", "Polje :attribute mora da bude ispravna IP adresa." });
            sr_Latn_ME.Errors.Add(new string[] { "ipv4", "Polje :attribute mora da bude ispravna IPv4 adresa." });
            sr_Latn_ME.Errors.Add(new string[] { "ipv6", "Polje :attribute mora da bude ispravna IPv6 adresa." });
            sr_Latn_ME.Errors.Add(new string[] { "json", "Polje :attribute mora da bude u JSON formatu." });
            sr_Latn_ME.Errors.Add(new string[] { "lt_list", "Niz :attribute mora da sadrži manje od :value stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "lt_numeric", "Polje :attribute mora da bude manje od :value." });
            sr_Latn_ME.Errors.Add(new string[] { "lt", "Polje :attribute mora da sadrži manje od :value znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "lte_list", "Niz :attribute mora da sadrži najviše :value stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "lte_numeric", "Polje :attribute može da bude najviše :value." });
            sr_Latn_ME.Errors.Add(new string[] { "lte", "Polje :attribute mora da sadrži najviše :value znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "max_list", "Niz :attribute mora da sadrži najviše :max stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "max_numeric", "Polje :attribute može da bude najviše :max." });
            sr_Latn_ME.Errors.Add(new string[] { "max", "Polje :attribute mora da sadrži najviše :max znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "mimes", "Vrsta dokumenta za polje :attribute mora da bude: :values." });
            sr_Latn_ME.Errors.Add(new string[] { "min_list", "Niz :attribute mora da sadrži najmanje :min stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "min_numeric", "Polje :attribute može da bude najmanje :min." });
            sr_Latn_ME.Errors.Add(new string[] { "min", "Polje :attribute mora da sadrži najmanje :min znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "not_in", "Polje :attribute sadrži neku od nedozvoljenih vrijednosti." });
            sr_Latn_ME.Errors.Add(new string[] { "not_regex", "Format polja :attribute nije ispravan." });
            sr_Latn_ME.Errors.Add(new string[] { "numeric", "Polje :attribute mora da bude broj." });
            sr_Latn_ME.Errors.Add(new string[] { "password", "Pogrešna lozinka." });
            sr_Latn_ME.Errors.Add(new string[] { "regex", "Format polja :attribute nije ispravan." });
            sr_Latn_ME.Errors.Add(new string[] { "required", "Morate da popunite polje :attribute." });
            sr_Latn_ME.Errors.Add(new string[] { "same", "Polje :attribute ovog polja se mora poklopiti sa jednim od sledećeg: :other." });
            sr_Latn_ME.Errors.Add(new string[] { "size_list", "Niz :attribute mora da sadrži tačno :value stavki." });
            sr_Latn_ME.Errors.Add(new string[] { "size_numeric", "Polje :attribute mora da bude tačno :value." });
            sr_Latn_ME.Errors.Add(new string[] { "size", "Polje :attribute mora da sadrži tačno :value znakova." });
            sr_Latn_ME.Errors.Add(new string[] { "starts_with", "Polje :attribute mora da počne sa: :values." });
            sr_Latn_ME.Errors.Add(new string[] { "url", "Polje :attribute nije link." });
            sr_Latn_ME.Errors.Add(new string[] { "uuid", "Polje :attribute nije pretstavljen kao jedinstveni identifikator." });
            this.Langs.Add(sr_Latn_ME);
            var sv = new Lang();
            sv.Name = "sv";
            sv.Errors.Add(new string[] { "accepted", ":attribute måste accepteras." });
            sv.Errors.Add(new string[] { "active_url", ":attribute är inte en giltig webbadress." });
            sv.Errors.Add(new string[] { "after", ":attribute måste vara ett datum efter :date." });
            sv.Errors.Add(new string[] { "after_or_equal", ":attribute måste vara ett datum senare eller samma dag som :date." });
            sv.Errors.Add(new string[] { "alpha", ":attribute får endast innehålla bokstäver." });
            sv.Errors.Add(new string[] { "alpha_dash", ":attribute får endast innehålla bokstäver, siffror och bindestreck." });
            sv.Errors.Add(new string[] { "alpha_num", ":attribute får endast innehålla bokstäver och siffror." });
            sv.Errors.Add(new string[] { "before", ":attribute måste vara ett datum innan :date." });
            sv.Errors.Add(new string[] { "before_or_equal", ":attribute måste vara ett datum före eller samma dag som :date." });
            sv.Errors.Add(new string[] { "between_list", ":Attribute måste innehålla mellan :min - :max objekt." });
            sv.Errors.Add(new string[] { "between_numeric", ":Attribute måste vara en siffra mellan :min och :max." });
            sv.Errors.Add(new string[] { "between", ":Attribute måste innehålla :min till :max tecken." });
            sv.Errors.Add(new string[] { "boolean", ":attribute måste vara sant eller falskt." });
            sv.Errors.Add(new string[] { "confirmed", ":attribute bekräftelsen matchar inte." });
            sv.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sv.Errors.Add(new string[] { "different", ":attribute och :other får inte vara lika." });
            sv.Errors.Add(new string[] { "email", ":attribute måste innehålla en korrekt e-postadress." });
            sv.Errors.Add(new string[] { "ends_with", ":attribute måste sluta med en av följande: :values." });
            sv.Errors.Add(new string[] { "gt_list", ":Attribute måste innehålla fler än :value objekt." });
            sv.Errors.Add(new string[] { "gt_numeric", ":Attribute måste vara större än :value." });
            sv.Errors.Add(new string[] { "gt", ":Attribute måste vara längre än :value tecken." });
            sv.Errors.Add(new string[] { "gte_list", ":Attribute måste innehålla lika många eller fler än :value objekt." });
            sv.Errors.Add(new string[] { "gte_numeric", ":Attribute måste vara lika med eller större än :value." });
            sv.Errors.Add(new string[] { "gte", ":Attribute måste vara lika med eller längre än :value tecken." });
            sv.Errors.Add(new string[] { "in", ":attribute är ogiltigt." });
            sv.Errors.Add(new string[] { "integer", ":attribute måste vara en siffra." });
            sv.Errors.Add(new string[] { "ip", ":attribute måste vara en giltig IP-adress." });
            sv.Errors.Add(new string[] { "ipv4", ":attribute måste vara en giltig IPv4-adress." });
            sv.Errors.Add(new string[] { "ipv6", ":attribute måste vara en giltig IPv6-adress." });
            sv.Errors.Add(new string[] { "json", ":attribute måste vara en giltig JSON-sträng." });
            sv.Errors.Add(new string[] { "lt_list", ":Attribute måste innehålla färre än :value objekt." });
            sv.Errors.Add(new string[] { "lt_numeric", ":Attribute måste vara mindre än :value." });
            sv.Errors.Add(new string[] { "lt", ":Attribute måste vara kortare än :value tecken." });
            sv.Errors.Add(new string[] { "lte_list", ":Attribute måste innehålla lika många eller färre än :value objekt." });
            sv.Errors.Add(new string[] { "lte_numeric", ":Attribute måste vara lika med eller mindre än :value." });
            sv.Errors.Add(new string[] { "lte", ":Attribute måste vara lika med eller kortare än :value tecken." });
            sv.Errors.Add(new string[] { "max_list", ":Attribute får inte innehålla mer än :max objekt." });
            sv.Errors.Add(new string[] { "max_numeric", ":Attribute får inte vara större än :max." });
            sv.Errors.Add(new string[] { "max", ":Attribute får max innehålla :max tecken." });
            sv.Errors.Add(new string[] { "mimes", ":attribute måste vara en fil av typen: :values." });
            sv.Errors.Add(new string[] { "min_list", ":Attribute måste innehålla minst :min objekt." });
            sv.Errors.Add(new string[] { "min_numeric", ":Attribute måste vara större än :min." });
            sv.Errors.Add(new string[] { "min", ":Attribute måste innehålla minst :min tecken." });
            sv.Errors.Add(new string[] { "not_in", ":attribute är ogiltigt." });
            sv.Errors.Add(new string[] { "not_regex", "Formatet för :attribute är ogiltigt." });
            sv.Errors.Add(new string[] { "numeric", ":attribute måste vara en siffra." });
            sv.Errors.Add(new string[] { "password", "Lösenordet är fel." });
            sv.Errors.Add(new string[] { "regex", ":attribute har ogiltigt format." });
            sv.Errors.Add(new string[] { "required", ":attribute är obligatoriskt." });
            sv.Errors.Add(new string[] { "same", ":attribute och :other måste vara lika." });
            sv.Errors.Add(new string[] { "size_list", ":Attribute måste innehålla :size objekt." });
            sv.Errors.Add(new string[] { "size_numeric", ":Attribute måste vara :size." });
            sv.Errors.Add(new string[] { "size", ":Attribute måste innehålla :size tecken." });
            sv.Errors.Add(new string[] { "starts_with", ":attribute måste börja med en av följande: :values," });
            sv.Errors.Add(new string[] { "url", ":attribute har ett ogiltigt format." });
            sv.Errors.Add(new string[] { "uuid", ":attribute måste vara ett giltigt UUID." });
            this.Langs.Add(sv);
            var sw = new Lang();
            sw.Name = "sw";
            sw.Errors.Add(new string[] { "accepted", "Lazima kipengele kikubalike." });
            sw.Errors.Add(new string[] { "active_url", "Kipengele sio Chanzo Cha Anuani halali." });
            sw.Errors.Add(new string[] { "after", "Kipengele lazima kiwe tarehe baada ya :date." });
            sw.Errors.Add(new string[] { "after_or_equal", ":attribute inapaswa kuwa tarehe baada au sawa na :date." });
            sw.Errors.Add(new string[] { "alpha", "Kipengele huenda kikawa tu chenye herufi." });
            sw.Errors.Add(new string[] { "alpha_dash", "Kipengele huenda kikawa tu chenye herufi, na vistari." });
            sw.Errors.Add(new string[] { "alpha_num", "Kipengele huenda kikawa tu chenye herufi na nambari." });
            sw.Errors.Add(new string[] { "before", "Kipengele lazima kiwe tarehe kabla ya :date." });
            sw.Errors.Add(new string[] { "before_or_equal", ":attribute inapaswa kuwa tarehe kabla au sawa na :date." });
            sw.Errors.Add(new string[] { "between_list", "Kipengele lazima kiwe na kati ya :min na :max cha vifungu." });
            sw.Errors.Add(new string[] { "between_numeric", "Kipengele lazima kiwe kati ya :min na :max." });
            sw.Errors.Add(new string[] { "between", "Kipengele lazima kiwe kati ya :min na :max cha herufi." });
            sw.Errors.Add(new string[] { "boolean", "Sehemu ya kipengele lazima iwe kweli au si kweli." });
            sw.Errors.Add(new string[] { "confirmed", "Uthibitisho wa kipengele haulingani." });
            sw.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            sw.Errors.Add(new string[] { "different", "Kipengele na :other lazima viwe tofauti." });
            sw.Errors.Add(new string[] { "email", "Kipengele lazima kiwe anuani halali ya barua pepe." });
            sw.Errors.Add(new string[] { "ends_with", "Ya :attribute lazima mwisho na moja ya yafuatayo: :values." });
            sw.Errors.Add(new string[] { "gt_list", ":attribute inapaswa kuwa na vitu zaidi ya :value." });
            sw.Errors.Add(new string[] { "gt_numeric", ":attribute inapaswa kuwa kubwa kuliko :value." });
            sw.Errors.Add(new string[] { "gt", ":attribute inapaswa kuwa kubwa kuliko herufi :value." });
            sw.Errors.Add(new string[] { "gte_list", ":attribute inapaswa kuwa na vitu :value au zaidi." });
            sw.Errors.Add(new string[] { "gte_numeric", ":attribute inapaswa kuwa kubwa kuliko au sawa na :value." });
            sw.Errors.Add(new string[] { "gte", ":attribute inapaswa kuwa kubwa kuliko au sawa na herufi :value." });
            sw.Errors.Add(new string[] { "in", "Kipengele kilichochaguliwa si halali." });
            sw.Errors.Add(new string[] { "integer", "Kipengele lazima kiwe nambari kamili." });
            sw.Errors.Add(new string[] { "ip", "Kipengele lazima kiwe anuani halali ya Itifaki ya Intaneti." });
            sw.Errors.Add(new string[] { "ipv4", ":attribute inapaswa kuwa anwani ya IPv4 sahihi." });
            sw.Errors.Add(new string[] { "ipv6", ":attribute inapaswa kuwa anwani ya IPv6 sahihi." });
            sw.Errors.Add(new string[] { "json", "Kipengele lazima kiwe kidwe halali cha Nukuu ya Java." });
            sw.Errors.Add(new string[] { "lt_list", ":attribute inapaswa kuwa chini ya vitu :value." });
            sw.Errors.Add(new string[] { "lt_numeric", ":attribute inapaswa kuwa chini ya :value." });
            sw.Errors.Add(new string[] { "lt", ":attribute inapaswa kuwa chini ya herufi :value." });
            sw.Errors.Add(new string[] { "lte_list", ":attribute haipaswi kuwa na vitu ziadi ya :value." });
            sw.Errors.Add(new string[] { "lte_numeric", ":attribute inapaswa kuwa ndogo kuliko au sawa na :value." });
            sw.Errors.Add(new string[] { "lte", ":attribute inapaswa kuwa ndogo au sawa na herufi :value." });
            sw.Errors.Add(new string[] { "max_list", "Kipengele huenda kisiwe na zaidi ya :max cha vifungu." });
            sw.Errors.Add(new string[] { "max_numeric", "Kipengele huenda si kikubwa kuliko :max." });
            sw.Errors.Add(new string[] { "max", "Kipengele huenda si kikubwa kuliko :max cha herufi." });
            sw.Errors.Add(new string[] { "mimes", "Kipengele lazima kiwe faili ya aina: :values." });
            sw.Errors.Add(new string[] { "min_list", "Kipengele lazima kiwe na angalau :min cha vifungu." });
            sw.Errors.Add(new string[] { "min_numeric", "Kipengele lazima kiwe angalau :min." });
            sw.Errors.Add(new string[] { "min", "Kipengele lazima kiwe angalau :min cha herufi." });
            sw.Errors.Add(new string[] { "not_in", "Kipengele kilichochaguliwa si halali." });
            sw.Errors.Add(new string[] { "not_regex", "Muundo wa :attribute si sahihi." });
            sw.Errors.Add(new string[] { "numeric", "Kipengele lazima kiwe nambari." });
            sw.Errors.Add(new string[] { "password", "Password ni sahihi." });
            sw.Errors.Add(new string[] { "regex", "Muundo wa kipengele si halali." });
            sw.Errors.Add(new string[] { "required", "Sehemu ya kipengele inahitajika." });
            sw.Errors.Add(new string[] { "same", "Kipengele na :other lazima vilingane." });
            sw.Errors.Add(new string[] { "size_list", "Kipengele lazima kiwe chenye :size vya kipimo." });
            sw.Errors.Add(new string[] { "size_numeric", "Kipengele lazima kiwe :size." });
            sw.Errors.Add(new string[] { "size", "Kipengele lazima kiwe :size cha herufi." });
            sw.Errors.Add(new string[] { "starts_with", ":attribute inapaswa kuanza na moja kati ya hizi zifuatazo: :values," });
            sw.Errors.Add(new string[] { "url", "Muundo wa kipengele si halali." });
            sw.Errors.Add(new string[] { "uuid", ":attribute inapaswa kuwa UUID yako." });
            this.Langs.Add(sw);
            var tg = new Lang();
            tg.Name = "tg";
            tg.Errors.Add(new string[] { "accepted", "Қиммати :attribute бояд қабул карда шавад." });
            tg.Errors.Add(new string[] { "active_url", "Қиммати :attribute дорои URL-и нодуруст мебошад." });
            tg.Errors.Add(new string[] { "after", "Қиммати :attribute бояд санаи баъд аз :date бошад." });
            tg.Errors.Add(new string[] { "after_or_equal", "Қиммати :attribute бояд санаи баъд ё баробари :date бошад." });
            tg.Errors.Add(new string[] { "alpha", "Қиммати :attribute метавонад танҳо дорои ҳарфҳои алифо бошад." });
            tg.Errors.Add(new string[] { "alpha_dash", "Қиммати :attribute метавонад танҳо дорои ҳарфҳои алифо, ададҳо ва хати тире бошад." });
            tg.Errors.Add(new string[] { "alpha_num", "Қиммати :attribute метавонад танҳо дорои ҳарфҳои алифо ва ададҳо бошад," });
            tg.Errors.Add(new string[] { "before", "Қиммати :attribute бояд санаи қабл аз :date бошад." });
            tg.Errors.Add(new string[] { "before_or_equal", "Қиммати :attribute бояд санаи қабл ё баробари :date бошад." });
            tg.Errors.Add(new string[] { "between_list", "Миқдори элементҳо дар :attribute бояд байни :min ва :max бошад." });
            tg.Errors.Add(new string[] { "between_numeric", "Қиммати :attribute бояд байни :min ва :max бошад." });
            tg.Errors.Add(new string[] { "between", "Миқдори аломатҳо дар :attribute бояд байни :min ва :max бошад." });
            tg.Errors.Add(new string[] { "boolean", "Қиммати :attribute бояд логикӣ дошта бошад." });
            tg.Errors.Add(new string[] { "confirmed", "Қиммати :attribute бо қиммати тасдиқотӣ мувофиқат надорад." });
            tg.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            tg.Errors.Add(new string[] { "different", "Қимматҳои :attribute ва :other бояд аз ҳам фарқ кунанд." });
            tg.Errors.Add(new string[] { "email", "Қиммати :attribute бояд суроғаи электронии дуруст бошад." });
            tg.Errors.Add(new string[] { "ends_with", "Рақами :attribute бояд заканчиваться яке аз зерин: :values." });
            tg.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            tg.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            tg.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            tg.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            tg.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            tg.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            tg.Errors.Add(new string[] { "in", "Қиммати интихобкардаи :attribute нодуруст мебошад." });
            tg.Errors.Add(new string[] { "integer", "Қиммати :attribute бояд адади бутун бошад." });
            tg.Errors.Add(new string[] { "ip", "Қиммати :attribute бояд суроғаи дурусти IP бошад." });
            tg.Errors.Add(new string[] { "ipv4", ":attribute бояд дархост эътибор дорад IPv4-суроғаи." });
            tg.Errors.Add(new string[] { "ipv6", ":attribute бояд дархост эътибор дорад IPv6-суроғаи." });
            tg.Errors.Add(new string[] { "json", "Қиммати :attribute бояд сатри дурусти JSON бошад." });
            tg.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            tg.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            tg.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            tg.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            tg.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            tg.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            tg.Errors.Add(new string[] { "max_list", "Миқдори элементҳо дар :attribute бояд на зиёда аз :max бошад." });
            tg.Errors.Add(new string[] { "max_numeric", "Қиммати :attribute набояд аз :max зиёд бошад." });
            tg.Errors.Add(new string[] { "max", "Миқдори аломатҳо дар :attribute бояд на зиёда аз :max бошад." });
            tg.Errors.Add(new string[] { "mimes", ":attribute бояд файли намуди :values бошад." });
            tg.Errors.Add(new string[] { "min_list", "Миқдори элементҳо дар :attribute бояд на кам аз :min бошад." });
            tg.Errors.Add(new string[] { "min_numeric", "Қиммати :attribute набояд аз :min хурд бошад." });
            tg.Errors.Add(new string[] { "min", "Миқдори аломатҳо дар :attribute бояд на кам аз :min бошад." });
            tg.Errors.Add(new string[] { "not_in", "Қиммати интихобкардаи :attribute нодуруст мебошад." });
            tg.Errors.Add(new string[] { "not_regex", "Формати :attribute недопустим." });
            tg.Errors.Add(new string[] { "numeric", "Қиммати :attribute бояд адад бошад." });
            tg.Errors.Add(new string[] { "password", "Рамз неверный." });
            tg.Errors.Add(new string[] { "regex", "Формати :attribute нодуруст мебошад." });
            tg.Errors.Add(new string[] { "required", ":attribute бояд дорои қиммат бошад." });
            tg.Errors.Add(new string[] { "same", "Қиммати :attribute ва :other бояд баробар бошанд." });
            tg.Errors.Add(new string[] { "size_list", "Миқдори элементҳо дар :attribute бояд :size бошад." });
            tg.Errors.Add(new string[] { "size_numeric", "Қиммати :attribute бояд ба :size баробар бошад." });
            tg.Errors.Add(new string[] { "size", "Миқдори аломатҳо дар :attribute бояд :size бошад." });
            tg.Errors.Add(new string[] { "starts_with", ":attribute бояд оғоз бо яке аз арзишҳои зерин: :values." });
            tg.Errors.Add(new string[] { "url", "Формати :attribute нодуруст мебошад." });
            tg.Errors.Add(new string[] { "uuid", ":attribute бояд дархост эътибор дорад UUID." });
            this.Langs.Add(tg);
            var th = new Lang();
            th.Name = "th";
            th.Errors.Add(new string[] { "accepted", "ข้อมูล :attribute ต้องผ่านการยอมรับก่อน," });
            th.Errors.Add(new string[] { "active_url", "ข้อมูล :attribute ต้องเป็น URL เท่านั้น," });
            th.Errors.Add(new string[] { "after", "ข้อมูล :attribute ต้องเป็นวันที่หลังจาก :date." });
            th.Errors.Add(new string[] { "after_or_equal", "ข้อมูล :attribute ต้องเป็นวันที่ตั้งแต่วันที่ :date หรือหลังจากนั้น." });
            th.Errors.Add(new string[] { "alpha", "ข้อมูล :attribute ต้องเป็นตัวอักษรภาษาอังกฤษเท่านั้น," });
            th.Errors.Add(new string[] { "alpha_dash", "ข้อมูล :attribute ต้องเป็นตัวอักษรภาษาอังกฤษ ตัวเลข และ _ เท่านั้น," });
            th.Errors.Add(new string[] { "alpha_num", "ข้อมูล :attribute ต้องเป็นตัวอักษรภาษาอังกฤษ ตัวเลข เท่านั้น," });
            th.Errors.Add(new string[] { "before", "ข้อมูล :attribute ต้องเป็นวันที่ก่อน :date." });
            th.Errors.Add(new string[] { "before_or_equal", "ข้อมูล :attribute ต้องเป็นวันที่ก่อนหรือเท่ากับวันที่ :date." });
            th.Errors.Add(new string[] { "between_list", "ข้อมูล :attribute ต้องมีค่าระหว่าง :min - :max ค่า," });
            th.Errors.Add(new string[] { "between_numeric", "ข้อมูล :attribute ต้องอยู่ในช่วงระหว่าง :min - :max." });
            th.Errors.Add(new string[] { "between", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรระหว่าง :min - :max ตัวอักษร," });
            th.Errors.Add(new string[] { "boolean", "ข้อมูล :attribute ต้องเป็นจริง หรือเท็จ เท่านั้น," });
            th.Errors.Add(new string[] { "confirmed", "ข้อมูล :attribute ไม่ตรงกัน," });
            th.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            th.Errors.Add(new string[] { "different", "ข้อมูล :attribute และ :other ต้องไม่เท่ากัน," });
            th.Errors.Add(new string[] { "email", "ข้อมูล :attribute ต้องเป็นอีเมล์," });
            th.Errors.Add(new string[] { "ends_with", "ที่ :attribute ต้องจบอย่างหนึ่งจากเกิดข้อผิดพลาดต่อไปนี้::values." });
            th.Errors.Add(new string[] { "gt_list", "ข้อมูล :attribute ต้องมีมากกว่า :value ค่า." });
            th.Errors.Add(new string[] { "gt_numeric", "ข้อมูล :attribute ต้องมีค่ามากกว่า :value." });
            th.Errors.Add(new string[] { "gt", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรมากกว่า :value ตัวอักษร." });
            th.Errors.Add(new string[] { "gte_list", "ข้อมูล :attribute ต้องมี :value ค่า หรือมากกว่า." });
            th.Errors.Add(new string[] { "gte_numeric", "ข้อมูล :attribute ต้องมีค่ามากกว่าหรือเท่ากับ :value." });
            th.Errors.Add(new string[] { "gte", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรมากกว่าหรือเท่ากับ :value ตัวอักษร." });
            th.Errors.Add(new string[] { "in", "ข้อมูล ที่ถูกเลือกใน :attribute ไม่ถูกต้อง," });
            th.Errors.Add(new string[] { "integer", "ข้อมูล :attribute ต้องเป็นตัวเลข," });
            th.Errors.Add(new string[] { "ip", "ข้อมูล :attribute ต้องเป็น IP," });
            th.Errors.Add(new string[] { "ipv4", "ข้อมูล :attribute ต้องตรงตามรูปแบบ IPv4 address." });
            th.Errors.Add(new string[] { "ipv6", "ข้อมูล :attribute ต้องตรงตามรูปแบบ IPv6 address." });
            th.Errors.Add(new string[] { "json", "ข้อมูล :attribute ต้องเป็นอักขระ JSON ที่สมบูรณ์," });
            th.Errors.Add(new string[] { "lt_list", "ข้อมูล :attribute ต้องมีน้อยกว่า :value ค่า." });
            th.Errors.Add(new string[] { "lt_numeric", "ข้อมูล :attribute ต้องมีค่าน้อยกว่า :value." });
            th.Errors.Add(new string[] { "lt", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรน้อยกว่า :value ตัวอักษร." });
            th.Errors.Add(new string[] { "lte_list", "ข้อมูล :attribute ต้องมีไม่เกิน :value ค่า." });
            th.Errors.Add(new string[] { "lte_numeric", "ข้อมูล :attribute ต้องมีค่าน้อยกว่าหรือเท่ากับ :value." });
            th.Errors.Add(new string[] { "lte", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรน้อยกว่าหรือเท่ากับ :value ตัวอักษร." });
            th.Errors.Add(new string[] { "max_list", "ข้อมูล :attribute ต้องมีไม่เกิน :max ค่า," });
            th.Errors.Add(new string[] { "max_numeric", "ข้อมูล :attribute ต้องมีค่าไม่เกิน :max." });
            th.Errors.Add(new string[] { "max", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรไม่เกิน :max ตัวอักษร," });
            th.Errors.Add(new string[] { "mimes", "ข้อมูล :attribute ต้องเป็นชนิดไฟล์: :values." });
            th.Errors.Add(new string[] { "min_list", "ข้อมูล :attribute ต้องมีอย่างน้อย :min ค่า," });
            th.Errors.Add(new string[] { "min_numeric", "ข้อมูล :attribute ต้องมีค่าอย่างน้อย :min." });
            th.Errors.Add(new string[] { "min", "ข้อมูล :attribute ต้องมีความยาวตัวอักษรอย่างน้อย :min ตัวอักษร," });
            th.Errors.Add(new string[] { "not_in", "ข้อมูล ที่เลือกจาก :attribute ไม่ถูกต้อง," });
            th.Errors.Add(new string[] { "not_regex", "ข้อมูล :attribute มีรูปแบบไม่ถูกต้อง." });
            th.Errors.Add(new string[] { "numeric", "ข้อมูล :attribute ต้องเป็นตัวเลข," });
            th.Errors.Add(new string[] { "password", "รหัสผ่านไม่ถูกต้อง," });
            th.Errors.Add(new string[] { "regex", "ข้อมูล :attribute มีรูปแบบไม่ถูกต้อง," });
            th.Errors.Add(new string[] { "required", "ข้อมูล :attribute จำเป็นต้องกรอก," });
            th.Errors.Add(new string[] { "same", "ข้อมูล :attribute และ :other ต้องถูกต้อง," });
            th.Errors.Add(new string[] { "size_list", "ข้อมูล :attribute ต้องเท่ากับ :size ค่า," });
            th.Errors.Add(new string[] { "size_numeric", "ข้อมูล :attribute ต้องเท่ากับ :size," });
            th.Errors.Add(new string[] { "size", "ข้อมูล :attribute ต้องเท่ากับ :size ตัวอักษร," });
            th.Errors.Add(new string[] { "starts_with", "ข้อมูล :attribute ต้องเริ่มด้วยค่าใดค่าหนึ่งต่อไปนี้: :values," });
            th.Errors.Add(new string[] { "url", "ข้อมูล :attribute ไม่ถูกต้อง," });
            th.Errors.Add(new string[] { "uuid", "ข้อมูล :attribute ต้องเป็นค่า UUID ที่ถูกต้อง," });
            this.Langs.Add(th);
            var tk = new Lang();
            tk.Name = "tk";
            tk.Errors.Add(new string[] { "accepted", ":attribute kabul edilmelidir." });
            tk.Errors.Add(new string[] { "active_url", ":attribute dogry URL bolmalydyr." });
            tk.Errors.Add(new string[] { "after", ":attribute şundan has köne sene bolmalydyr :date." });
            tk.Errors.Add(new string[] { "after_or_equal", "The :attribute must be a date after or equal to :date." });
            tk.Errors.Add(new string[] { "alpha", ":attribute dine harplardan durmalydyr." });
            tk.Errors.Add(new string[] { "alpha_dash", ":attribute dine harplardan, sanlardan we tirelerden durmalydyr." });
            tk.Errors.Add(new string[] { "alpha_num", ":attribute dine harplardan we sanlardan durmalydyr." });
            tk.Errors.Add(new string[] { "before", ":attribute şundan has irki sene bolmalydyr :date." });
            tk.Errors.Add(new string[] { "before_or_equal", "The :attribute must be a date before or equal to :date." });
            tk.Errors.Add(new string[] { "between_list", ":attribute :min - :max arasynda madda eýe bolmalydyr." });
            tk.Errors.Add(new string[] { "between_numeric", ":attribute :min - :max arasynda bolmalydyr." });
            tk.Errors.Add(new string[] { "between", ":attribute :min - :max harplar arasynda bolmalydyr." });
            tk.Errors.Add(new string[] { "boolean", ":attribute diňe dogry ýada ýalňyş bolmalydyr." });
            tk.Errors.Add(new string[] { "confirmed", ":attribute tassyklamasy deň däl." });
            tk.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            tk.Errors.Add(new string[] { "different", ":attribute bilen :other birbirinden tapawutly bolmalydyr." });
            tk.Errors.Add(new string[] { "email", ":attribute formaty ýalňyş." });
            tk.Errors.Add(new string[] { "ends_with", "The :attribute must end with one of the following: :values." });
            tk.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            tk.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            tk.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            tk.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            tk.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            tk.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            tk.Errors.Add(new string[] { "in", ":attribute mukdary ýalňyş." });
            tk.Errors.Add(new string[] { "integer", ":attribute san bolmalydyr." });
            tk.Errors.Add(new string[] { "ip", ":attribute dogry IP adres bolmalydyr." });
            tk.Errors.Add(new string[] { "ipv4", "The :attribute must be a valid IPv4 address." });
            tk.Errors.Add(new string[] { "ipv6", "The :attribute must be a valid IPv6 address." });
            tk.Errors.Add(new string[] { "json", "The :attribute must be a valid JSON string." });
            tk.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            tk.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            tk.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            tk.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            tk.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            tk.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            tk.Errors.Add(new string[] { "max_list", ":attribute iň az :max maddadan ybarat bolmalydyr." });
            tk.Errors.Add(new string[] { "max_numeric", ":attribute :max den kiçi bolmalydyr." });
            tk.Errors.Add(new string[] { "max", ":attribute :max harpdan kiçi bolmalydyr." });
            tk.Errors.Add(new string[] { "mimes", ":attribute faýlň formaty :values bolmalydyr." });
            tk.Errors.Add(new string[] { "min_list", ":attribute iň az :min harpdan bolmalydyr." });
            tk.Errors.Add(new string[] { "min_numeric", ":attribute mukdary :min dan köp bolmalydyr." });
            tk.Errors.Add(new string[] { "min", ":attribute mukdary :min harpdan köp bolmalydyr." });
            tk.Errors.Add(new string[] { "not_in", "Saýlanan :attribute geçersiz." });
            tk.Errors.Add(new string[] { "not_regex", "The :attribute format is invalid." });
            tk.Errors.Add(new string[] { "numeric", ":attribute san bolmalydyr." });
            tk.Errors.Add(new string[] { "password", "The password is incorrect." });
            tk.Errors.Add(new string[] { "regex", ":attribute formaty ýalňyş." });
            tk.Errors.Add(new string[] { "required", ":attribute meýdany zerur." });
            tk.Errors.Add(new string[] { "same", ":attribute bilen :other deň bolmalydyr." });
            tk.Errors.Add(new string[] { "size_list", ":attribute :size madda eýe bolmalydyr." });
            tk.Errors.Add(new string[] { "size_numeric", ":attribute :size sandan ybarat bolmalydyr." });
            tk.Errors.Add(new string[] { "size", ":attribute :size harp bolmalydyr." });
            tk.Errors.Add(new string[] { "starts_with", "The :attribute must start with one of the following: :values." });
            tk.Errors.Add(new string[] { "url", ":attribute formaty ýalňyş." });
            tk.Errors.Add(new string[] { "uuid", "The :attribute must be a valid UUID." });
            this.Langs.Add(tk);
            var tl = new Lang();
            tl.Name = "tl";
            tl.Errors.Add(new string[] { "accepted", "Ang :attribute ay dapat tanggapin." });
            tl.Errors.Add(new string[] { "active_url", "Ang :attribute ay hindi balidong URL." });
            tl.Errors.Add(new string[] { "after", "Ang :attribute ay dapat petsa pagkatapos ng :date." });
            tl.Errors.Add(new string[] { "after_or_equal", "Ang :attribute ay dapat na isang petsa pagkatapos o katumbas ng :date." });
            tl.Errors.Add(new string[] { "alpha", "Ang :attribute ay maaaring magtaglay ng mga letra lang." });
            tl.Errors.Add(new string[] { "alpha_dash", "Ang :attribute ay maaaring magtaglay ng mga letra, numero at gitling lang." });
            tl.Errors.Add(new string[] { "alpha_num", "Ang :attribute ay maaaring magtaglay ng mga letra at numero lang." });
            tl.Errors.Add(new string[] { "before", "Ang :attribute ay dapat petsa bago ang :date." });
            tl.Errors.Add(new string[] { "before_or_equal", "Ang :attribute ay dapat na isang petsa bago o katumbas ng :date." });
            tl.Errors.Add(new string[] { "between_list", "Ang :attribute ay dapat nasa pagitan ng :min at :max items." });
            tl.Errors.Add(new string[] { "between_numeric", "Ang :attribute ay dapat nasa pagitan ng :min at :max." });
            tl.Errors.Add(new string[] { "between", "Ang :attribute ay dapat nasa pagitan ng :min at :max characters." });
            tl.Errors.Add(new string[] { "boolean", "Ang :attribute ng attribute ay dapat tama o mali." });
            tl.Errors.Add(new string[] { "confirmed", "Ang :attribute ng attribute ay hindi magkatugma." });
            tl.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            tl.Errors.Add(new string[] { "different", "Ang :attribute at :other pa ay dapat magkaiba." });
            tl.Errors.Add(new string[] { "email", "Ang :attribute ay dapat balidong email address." });
            tl.Errors.Add(new string[] { "ends_with", ":attribute ang dapat magtapos sa isa sa mga sumusunod: :values." });
            tl.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            tl.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            tl.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            tl.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            tl.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            tl.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            tl.Errors.Add(new string[] { "in", "Ang piniling :attribute ay imbalido." });
            tl.Errors.Add(new string[] { "integer", "Ang :attribute ay dapat isang integer." });
            tl.Errors.Add(new string[] { "ip", "Ang :attribute ay dapat isang balidong IP address." });
            tl.Errors.Add(new string[] { "ipv4", "Ang :attribute ay dapat na isang wastong Ipbagong address." });
            tl.Errors.Add(new string[] { "ipv6", "Ang :attribute ay dapat na isang balidong Ipbagong address." });
            tl.Errors.Add(new string[] { "json", "Ang :attribute ay dapat isang balidong JSON string." });
            tl.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            tl.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            tl.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            tl.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            tl.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            tl.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            tl.Errors.Add(new string[] { "max_list", "Ang :attribute ay hindi maaaring higit sa :max items." });
            tl.Errors.Add(new string[] { "max_numeric", "Ang :attribute ay hindi maaaring higit sa  :max." });
            tl.Errors.Add(new string[] { "max", "Ang :attribute ay hindi maaaring higit sa :max characters." });
            tl.Errors.Add(new string[] { "mimes", "Ang :attribute ay dapat file ng uri na: :values." });
            tl.Errors.Add(new string[] { "min_list", "Ang :attribute ay dapat di-kukulangin sa :min items." });
            tl.Errors.Add(new string[] { "min_numeric", "Ang :attribute ay dapat di-kukulangin sa :min." });
            tl.Errors.Add(new string[] { "min", "Ang :attribute ay dapat di-kukulangin sa :min characters." });
            tl.Errors.Add(new string[] { "not_in", "Ang piniling :attribute ay imbalido." });
            tl.Errors.Add(new string[] { "not_regex", "Hindi tanggap ang :attribute na anyo." });
            tl.Errors.Add(new string[] { "numeric", "Ang :attribute ay dapat isang numero." });
            tl.Errors.Add(new string[] { "password", "Ang password ay hindi tama." });
            tl.Errors.Add(new string[] { "regex", "Ang :attribute ng attribute ay imbalido." });
            tl.Errors.Add(new string[] { "required", "Ang :attribute ng attribute ay kailangan." });
            tl.Errors.Add(new string[] { "same", "Ang :attribute at :other pa ay dapat magtugma." });
            tl.Errors.Add(new string[] { "size_list", "Ang :attribute ay dapat magtaglay ng :size sa items." });
            tl.Errors.Add(new string[] { "size_numeric", "Ang :attribute ay dapat :size sukat." });
            tl.Errors.Add(new string[] { "size", "Ang :attribute ay dapat :size sukat sa characters." });
            tl.Errors.Add(new string[] { "starts_with", "Ang :attribute ay dapat magsimula sa isa sa mga sumusunod: :values." });
            tl.Errors.Add(new string[] { "url", "Ang :attribute ng attribute ay imbalido." });
            tl.Errors.Add(new string[] { "uuid", ":attribute ay dapat na isang wastong UUID." });
            this.Langs.Add(tl);
            var tr = new Lang();
            tr.Name = "tr";
            tr.Errors.Add(new string[] { "accepted", ":attribute kabul edilmelidir." });
            tr.Errors.Add(new string[] { "active_url", ":attribute geçerli bir URL olmalıdır." });
            tr.Errors.Add(new string[] { "after", ":attribute mutlaka :date tarihinden sonra olmalıdır." });
            tr.Errors.Add(new string[] { "after_or_equal", ":attribute mutlaka :date tarihinden sonra veya aynı tarihte olmalıdır." });
            tr.Errors.Add(new string[] { "alpha", ":attribute sadece harflerden oluşmalıdır." });
            tr.Errors.Add(new string[] { "alpha_dash", ":attribute sadece harflerden, rakamlardan ve tirelerden oluşmalıdır." });
            tr.Errors.Add(new string[] { "alpha_num", ":attribute sadece harflerden ve rakamlardan oluşmalıdır." });
            tr.Errors.Add(new string[] { "before", ":attribute mutlaka :date tarihinden önce olmalıdır." });
            tr.Errors.Add(new string[] { "before_or_equal", ":attribute mutlaka :date tarihinden önce veya aynı tarihte olmalıdır." });
            tr.Errors.Add(new string[] { "between_list", ":attribute mutlaka :min - :max arasında öge içermelidir." });
            tr.Errors.Add(new string[] { "between_numeric", ":attribute mutlaka :min - :max arasında olmalıdır." });
            tr.Errors.Add(new string[] { "between", ":attribute mutlaka :min - :max karakter arasında olmalıdır." });
            tr.Errors.Add(new string[] { "boolean", ":attribute sadece doğru veya yanlış olmalıdır." });
            tr.Errors.Add(new string[] { "confirmed", ":attribute tekrarı eşleşmiyor." });
            tr.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            tr.Errors.Add(new string[] { "different", ":attribute ile :other mutlaka birbirinden farklı olmalıdır." });
            tr.Errors.Add(new string[] { "email", ":attribute mutlaka geçerli bir e-posta adresi olmalıdır." });
            tr.Errors.Add(new string[] { "ends_with", ":attribute sadece şu değerlerden biriyle bitebilir: :values." });
            tr.Errors.Add(new string[] { "gt_list", ":attribute mutlaka :value sayısından daha fazla öge içermelidir." });
            tr.Errors.Add(new string[] { "gt_numeric", ":attribute mutlaka :value sayısından büyük olmalıdır." });
            tr.Errors.Add(new string[] { "gt", ":attribute mutlaka :value karakterden uzun olmalıdır." });
            tr.Errors.Add(new string[] { "gte_list", ":attribute mutlaka :value veya daha fazla öge içermelidir." });
            tr.Errors.Add(new string[] { "gte_numeric", ":attribute mutlaka :value sayısından büyük veya eşit olmalıdır." });
            tr.Errors.Add(new string[] { "gte", ":attribute mutlaka :value karakterden uzun veya eşit olmalıdır." });
            tr.Errors.Add(new string[] { "in", "Seçili :attribute geçersiz." });
            tr.Errors.Add(new string[] { "integer", ":attribute mutlaka bir tam sayı olmalıdır." });
            tr.Errors.Add(new string[] { "ip", ":attribute mutlaka geçerli bir IP adresi olmalıdır." });
            tr.Errors.Add(new string[] { "ipv4", ":attribute mutlaka geçerli bir IPv4 adresi olmalıdır." });
            tr.Errors.Add(new string[] { "ipv6", ":attribute mutlaka geçerli bir IPv6 adresi olmalıdır." });
            tr.Errors.Add(new string[] { "json", ":attribute mutlaka geçerli bir JSON içeriği olmalıdır." });
            tr.Errors.Add(new string[] { "lt_list", ":attribute mutlaka :value sayısından daha az öge içermelidir." });
            tr.Errors.Add(new string[] { "lt_numeric", ":attribute mutlaka :value sayısından küçük olmalıdır." });
            tr.Errors.Add(new string[] { "lt", ":attribute mutlaka :value karakterden kısa olmalıdır." });
            tr.Errors.Add(new string[] { "lte_list", ":attribute mutlaka :value veya daha az öge içermelidir." });
            tr.Errors.Add(new string[] { "lte_numeric", ":attribute mutlaka :value sayısından küçük veya eşit olmalıdır." });
            tr.Errors.Add(new string[] { "lte", ":attribute mutlaka :value karakterden kısa veya eşit olmalıdır." });
            tr.Errors.Add(new string[] { "max_list", ":attribute en fazla :max öge içerebilir." });
            tr.Errors.Add(new string[] { "max_numeric", ":attribute en fazla :max olabilir." });
            tr.Errors.Add(new string[] { "max", ":attribute en fazla :max karakter olabilir." });
            tr.Errors.Add(new string[] { "mimes", ":attribute mutlaka :values biçiminde bir dosya olmalıdır." });
            tr.Errors.Add(new string[] { "min_list", ":attribute en az :min öge içerebilir." });
            tr.Errors.Add(new string[] { "min_numeric", ":attribute en az :min olabilir." });
            tr.Errors.Add(new string[] { "min", ":attribute en az :min karakter olabilir." });
            tr.Errors.Add(new string[] { "not_in", "Seçili :attribute geçersiz." });
            tr.Errors.Add(new string[] { "not_regex", ":attribute biçimi geçersiz." });
            tr.Errors.Add(new string[] { "numeric", ":attribute mutlaka bir sayı olmalıdır." });
            tr.Errors.Add(new string[] { "password", "Parola geçersiz." });
            tr.Errors.Add(new string[] { "regex", ":attribute biçimi geçersiz." });
            tr.Errors.Add(new string[] { "required", ":attribute mutlaka gereklidir." });
            tr.Errors.Add(new string[] { "same", ":attribute ile :other aynı olmalıdır." });
            tr.Errors.Add(new string[] { "size_list", ":attribute mutlaka :size ögeye sahip olmalıdır." });
            tr.Errors.Add(new string[] { "size_numeric", ":attribute mutlaka :size olmalıdır." });
            tr.Errors.Add(new string[] { "size", ":attribute mutlaka :size karakterli olmalıdır." });
            tr.Errors.Add(new string[] { "starts_with", ":attribute sadece şu değerlerden biriyle başlayabilir: :values." });
            tr.Errors.Add(new string[] { "url", ":attribute biçimi geçersiz." });
            tr.Errors.Add(new string[] { "uuid", ":attribute mutlaka geçerli bir UUID olmalıdır." });
            this.Langs.Add(tr);
            var ug = new Lang();
            ug.Name = "ug";
            ug.Errors.Add(new string[] { "accepted", ":attribute چوقۇم قوشۇلىشىڭىز كېرەك." });
            ug.Errors.Add(new string[] { "active_url", ":attribute ئىناۋەتلىك توربەت ئادىرىسى ئەمەس." });
            ug.Errors.Add(new string[] { "after", ":attribute چوقۇم :date دىن كىيىن بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "after_or_equal", ":attribute چوقۇم :date غا تەڭ ياكى كىيىن بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "alpha", ":attribute پەقەت ھەرىپلەردىن تۈزىلىشى كېرەك." });
            ug.Errors.Add(new string[] { "alpha_dash", ":attribute پەقەت ھەرىپ، سان-سىفىر ۋە يانتۇ سىزىقتىن تۈزەلگەن بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "alpha_num", ":attribute پەقەت ھەرىپ ۋە سان-سىفىرلاردىن تۈزىلىشى كېرەك." });
            ug.Errors.Add(new string[] { "before", ":attribute چوقۇم :date دىن بۇرۇن بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "before_or_equal", ":attribute چوقۇم :date غا تەڭ ياكى بۇرۇن بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "between_list", ":attribute چوقۇم  :min - :max بۆلەك ئارلىقىدا بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "between_numeric", ":attribute چوقۇم :min - :max ئارلىقىدا بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "between", ":attribute چوقۇم  :min - :max خەت ئارلىقىدا بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "boolean", ":attribute چوقۇم بۇل قىممىتى بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "confirmed", ":attribute ئىككى قېتىم كىرگۈزگەن قىممەت ئوخشاش بولمىدى." });
            ug.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ug.Errors.Add(new string[] { "different", ":attribute بىلەن :other چوقۇم ئوخشاش بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "email", ":attribute ئىناۋەتلىك تورخەت ئادىرىسى ئەمەس." });
            ug.Errors.Add(new string[] { "ends_with", "The :attribute must end with one of the following: :values." });
            ug.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            ug.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            ug.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            ug.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            ug.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            ug.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            ug.Errors.Add(new string[] { "in", "تاللانغان قىممەت :attribute ئىناۋەتسىز," });
            ug.Errors.Add(new string[] { "integer", ":attribute چوقۇم پۈتۈن سان بۇلىشى كېرەك," });
            ug.Errors.Add(new string[] { "ip", ":attribute چوقۇم ئىناۋەتلىك IP ئادىرىسى بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "ipv4", ":attribute چوقۇم ئىناۋەتلىك IPv4 ئادىرىسى بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "ipv6", ":attribute چوقۇم ئىناۋەتلىك IPv6 ئادىرىسى بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "json", ":attribute چوقۇم ئىناۋەتلىك JSON تىپى بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            ug.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            ug.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            ug.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            ug.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            ug.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            ug.Errors.Add(new string[] { "max_list", ":attribute ئەڭ كۆپ بولغاندا :max بۆلەك," });
            ug.Errors.Add(new string[] { "max_numeric", ":attribute :max دىن چوڭ بولماسلىكى كېرەك." });
            ug.Errors.Add(new string[] { "max", ":attribute چوڭ-كىچىكلىكى :max خەتتىن ئېشىپ كەتمەسلىكى كېرەك." });
            ug.Errors.Add(new string[] { "mimes", ":attribute چوقۇم بىر :values تىپىدىكى ھۆججەت بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "min_list", ":attribute ئەڭ ئاز بولغاندا :min بۆلەك بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "min_numeric", ":attribute چوقۇم :min تەڭ ياكى چوڭ بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "min", ":attribute ئەڭ ئاز بولغاندا :min خەت بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "not_in", "تاللانغان قىممەت :attribute ئىناۋەتسىز." });
            ug.Errors.Add(new string[] { "not_regex", "The :attribute format is invalid." });
            ug.Errors.Add(new string[] { "numeric", ":attribute چوقۇم سان-سىفىر بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "password", "The password is incorrect." });
            ug.Errors.Add(new string[] { "regex", ":attribute ھۆججەت تىپى ئىناۋەتسىز." });
            ug.Errors.Add(new string[] { "required", ":attribute قۇرۇق بولسا بولمايدۇ." });
            ug.Errors.Add(new string[] { "same", ":attribute بىلەن :other چوقۇم ئوخشاش بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "size_list", ":attribute چوقۇم :size بۆلەك." });
            ug.Errors.Add(new string[] { "size_numeric", ":attribute چوڭ-كىچىكلىكى چوقۇم :size بۇلىشى كېرەك." });
            ug.Errors.Add(new string[] { "size", ":attribute چوقۇم :size خەت." });
            ug.Errors.Add(new string[] { "starts_with", "The :attribute must start with one of the following: :values." });
            ug.Errors.Add(new string[] { "url", ":attribute ھۆججەت تىپى ئىناۋەتسىز." });
            ug.Errors.Add(new string[] { "uuid", "The :attribute must be a valid UUID." });
            this.Langs.Add(ug);
            var uk = new Lang();
            uk.Name = "uk";
            uk.Errors.Add(new string[] { "accepted", "Ви повинні прийняти :attribute." });
            uk.Errors.Add(new string[] { "active_url", "Поле :attribute не є правильним URL." });
            uk.Errors.Add(new string[] { "after", "Поле :attribute має містити дату не раніше :date." });
            uk.Errors.Add(new string[] { "after_or_equal", "Поле :attribute має містити дату не раніше, або дорівнюватися :date." });
            uk.Errors.Add(new string[] { "alpha", "Поле :attribute має містити лише літери." });
            uk.Errors.Add(new string[] { "alpha_dash", "Поле :attribute має містити лише літери, цифри, тире та підкреслення." });
            uk.Errors.Add(new string[] { "alpha_num", "Поле :attribute має містити лише літери та цифри." });
            uk.Errors.Add(new string[] { "before", "Поле :attribute має містити дату не пізніше :date." });
            uk.Errors.Add(new string[] { "before_or_equal", "Поле :attribute має містити дату не пізніше, або дорівнюватися :date." });
            uk.Errors.Add(new string[] { "between_list", "Поле :attribute має містити від :min до :max елементів." });
            uk.Errors.Add(new string[] { "between_numeric", "Поле :attribute має бути між :min та :max." });
            uk.Errors.Add(new string[] { "between", "Текст у полі :attribute має бути не менше :min та не більше :max символів." });
            uk.Errors.Add(new string[] { "boolean", "Поле :attribute повинне містити логічний тип." });
            uk.Errors.Add(new string[] { "confirmed", "Поле :attribute не збігається з підтвердженням." });
            uk.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            uk.Errors.Add(new string[] { "different", "Поля :attribute та :other повинні бути різними." });
            uk.Errors.Add(new string[] { "email", "Поле :attribute повинне містити коректну електронну адресу." });
            uk.Errors.Add(new string[] { "ends_with", "Поле :attribute має закінчуватися одним з наступних значень: :values," });
            uk.Errors.Add(new string[] { "gt_list", "Поле :attribute має містити більше ніж :value елементів." });
            uk.Errors.Add(new string[] { "gt_numeric", "Поле :attribute має бути більше ніж :value." });
            uk.Errors.Add(new string[] { "gt", "Поле :attribute має бути більше ніж :value символів." });
            uk.Errors.Add(new string[] { "gte_list", "Поле :attribute має містити :value чи більше елементів." });
            uk.Errors.Add(new string[] { "gte_numeric", "Поле :attribute має дорівнювати чи бути більше ніж :value." });
            uk.Errors.Add(new string[] { "gte", "Поле :attribute має дорівнювати чи бути більше ніж :value символів." });
            uk.Errors.Add(new string[] { "in", "Вибране для :attribute значення не коректне." });
            uk.Errors.Add(new string[] { "integer", "Поле :attribute має містити ціле число." });
            uk.Errors.Add(new string[] { "ip", "Поле :attribute має містити IP адресу." });
            uk.Errors.Add(new string[] { "ipv4", "Поле :attribute має містити IPv4 адресу." });
            uk.Errors.Add(new string[] { "ipv6", "Поле :attribute має містити IPv6 адресу." });
            uk.Errors.Add(new string[] { "json", "Дані поля :attribute мають бути у форматі JSON." });
            uk.Errors.Add(new string[] { "lt_list", "Поле :attribute має містити менше ніж :value items." });
            uk.Errors.Add(new string[] { "lt_numeric", "Поле :attribute має бути менше ніж :value." });
            uk.Errors.Add(new string[] { "lt", "Поле :attribute має бути менше ніж :value символів." });
            uk.Errors.Add(new string[] { "lte_list", "Поле :attribute має містити не більше ніж :value елементів." });
            uk.Errors.Add(new string[] { "lte_numeric", "Поле :attribute має дорівнювати чи бути менше ніж :value." });
            uk.Errors.Add(new string[] { "lte", "Поле :attribute має дорівнювати чи бути менше ніж :value символів." });
            uk.Errors.Add(new string[] { "max_list", "Поле :attribute повинне містити не більше :max елементів." });
            uk.Errors.Add(new string[] { "max_numeric", "Поле :attribute має бути не більше :max." });
            uk.Errors.Add(new string[] { "max", "Текст в полі :attribute повинен мати довжину не більшу за :max." });
            uk.Errors.Add(new string[] { "mimes", "Поле :attribute повинне містити файл одного з типів: :values." });
            uk.Errors.Add(new string[] { "min_list", "Поле :attribute повинне містити не менше :min елементів." });
            uk.Errors.Add(new string[] { "min_numeric", "Поле :attribute повинне бути не менше :min." });
            uk.Errors.Add(new string[] { "min", "Текст у полі :attribute повинен містити не менше :min символів." });
            uk.Errors.Add(new string[] { "not_in", "Вибране для :attribute значення не коректне." });
            uk.Errors.Add(new string[] { "not_regex", "Формат поля :attribute не вірний." });
            uk.Errors.Add(new string[] { "numeric", "Поле :attribute повинно містити число." });
            uk.Errors.Add(new string[] { "password", "Неправильний пароль." });
            uk.Errors.Add(new string[] { "regex", "Поле :attribute має хибний формат." });
            uk.Errors.Add(new string[] { "required", "Поле :attribute є обов язковим для заповнення." });
            uk.Errors.Add(new string[] { "same", "Поля :attribute та :other мають збігатися." });
            uk.Errors.Add(new string[] { "size_list", "Поле :attribute повинне містити :size елементів." });
            uk.Errors.Add(new string[] { "size_numeric", "Поле :attribute має бути довжини :size." });
            uk.Errors.Add(new string[] { "size", "Текст у полі :attribute повинен містити :size символів." });
            uk.Errors.Add(new string[] { "starts_with", "Поле :attribute повинне починатися з одного з наступних значень: :values," });
            uk.Errors.Add(new string[] { "url", "Формат поля :attribute хибний." });
            uk.Errors.Add(new string[] { "uuid", "Поле :attribute має бути коректним UUID ідентифікатором." });
            this.Langs.Add(uk);
            var ur = new Lang();
            ur.Name = "ur";
            ur.Errors.Add(new string[] { "accepted", ":attribute تسلیم کرنا لازمی ہے۔," });
            ur.Errors.Add(new string[] { "active_url", ":attribute قابلِ قبول یو آر ایل نہیں ہے۔," });
            ur.Errors.Add(new string[] { "after", ":attribute لازماً :date کے بعد کی کوئی تاریخ ہو۔," });
            ur.Errors.Add(new string[] { "after_or_equal", "اس :attribute ہونا ضروری ہے ، ایک تاریخ کے بعد یا اس کے برابر :date." });
            ur.Errors.Add(new string[] { "alpha", ":attribute صرف حروفِ تہجی پر مشتمل ہو سکتا ہے۔," });
            ur.Errors.Add(new string[] { "alpha_dash", ":attribute صرف حروفِ تہجی، اعداد، ڈیشِز پر مشتمل ہو سکتا ہے۔," });
            ur.Errors.Add(new string[] { "alpha_num", ":attribute میں صرف حروفِ تہجی و اعداد شامل ہو سکتے ہیں۔," });
            ur.Errors.Add(new string[] { "before", ":attribute لازماً :date سے پہلے کی کوئی تاریخ ہو۔," });
            ur.Errors.Add(new string[] { "before_or_equal", "اس :attribute ہونا ضروری ہے ایک تاریخ سے پہلے یا اس کے برابر :date." });
            ur.Errors.Add(new string[] { "between_list", ":attribute لازماً :min اور :max آئٹمز کے درمیان ہو۔," });
            ur.Errors.Add(new string[] { "between_numeric", ":attribute لازماً :min اور :max کے درمیان ہو۔," });
            ur.Errors.Add(new string[] { "between", ":attribute لازماً :min اور :max کریکٹرز کے درمیان ہو۔," });
            ur.Errors.Add(new string[] { "boolean", ":attribute لازماً درست یا غلط ہونا چاہیے۔," });
            ur.Errors.Add(new string[] { "confirmed", ":attribute تصدیق سے مطابقت نہیں رکھتا۔," });
            ur.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            ur.Errors.Add(new string[] { "different", ":attribute اور :other لازماً مختلف ہوں۔," });
            ur.Errors.Add(new string[] { "email", ":attribute لازماً قابلِ قبول ای میل ہو۔," });
            ur.Errors.Add(new string[] { "ends_with", "اس :attribute ختم کرنا ضروری ہے کے ساتھ مندرجہ ذیل میں سے ایک: :values." });
            ur.Errors.Add(new string[] { "gt_list", "The :attribute must have more than :value items." });
            ur.Errors.Add(new string[] { "gt_numeric", "The :attribute must be greater than :value." });
            ur.Errors.Add(new string[] { "gt", "The :attribute must be greater than :value characters." });
            ur.Errors.Add(new string[] { "gte_list", "The :attribute must have :value items or more." });
            ur.Errors.Add(new string[] { "gte_numeric", "The :attribute must be greater than or equal :value." });
            ur.Errors.Add(new string[] { "gte", "The :attribute must be greater than or equal :value characters." });
            ur.Errors.Add(new string[] { "in", "منتخب :attribute قابلِ قبول نہیں ہے۔," });
            ur.Errors.Add(new string[] { "integer", ":attribute لازماً کوئی عدد ہو۔," });
            ur.Errors.Add(new string[] { "ip", ":attribute لازماً قابلِ قبول آئی پی پتہ ہو۔," });
            ur.Errors.Add(new string[] { "ipv4", "اس :attribute ہونا ضروری ہے ایک درست IPv4 ایڈریس." });
            ur.Errors.Add(new string[] { "ipv6", "اس :attribute ہونا ضروری ہے ایک درست IPv6 ایڈریس." });
            ur.Errors.Add(new string[] { "json", ":attribute لازماً قابلِ قبول JSON سٹرِنگ ہو۔," });
            ur.Errors.Add(new string[] { "lt_list", "The :attribute must have less than :value items." });
            ur.Errors.Add(new string[] { "lt_numeric", "The :attribute must be less than :value." });
            ur.Errors.Add(new string[] { "lt", "The :attribute must be less than :value characters." });
            ur.Errors.Add(new string[] { "lte_list", "The :attribute must not have more than :value items." });
            ur.Errors.Add(new string[] { "lte_numeric", "The :attribute must be less than or equal :value." });
            ur.Errors.Add(new string[] { "lte", "The :attribute must be less than or equal :value characters." });
            ur.Errors.Add(new string[] { "max_list", ":attribute میں :max سے زیادہ آئٹمز نہیں ہو سکتیں۔," });
            ur.Errors.Add(new string[] { "max_numeric", ":attribute کو :max سے بڑا نہیں ہونا چاہیے۔," });
            ur.Errors.Add(new string[] { "max", ":attribute کو :max کریکٹرز سے زیادہ نہیں ہونا چاہیے۔," });
            ur.Errors.Add(new string[] { "mimes", ":attribute لازماً :type :values قسم کی فائل ہو۔," });
            ur.Errors.Add(new string[] { "min_list", ":attribute میں لازماً کم از کم :min آئٹمز ہوں۔," });
            ur.Errors.Add(new string[] { "min_numeric", ":attribute لازماً کم از کم :min ہو۔," });
            ur.Errors.Add(new string[] { "min", ":attribute لازماً کم از کم :min کریکٹرز طویل ہو۔," });
            ur.Errors.Add(new string[] { "not_in", "منتخب :attribute قابلِ قبول نہیں ہے۔," });
            ur.Errors.Add(new string[] { "not_regex", "اس :attribute شکل باطل ہے." });
            ur.Errors.Add(new string[] { "numeric", ":attribute لازماً کوئی عدد ہو۔," });
            ur.Errors.Add(new string[] { "password", "پاس ورڈ غلط ہے." });
            ur.Errors.Add(new string[] { "regex", ":attribute قابلِ قبول فارمیٹ میں نہیں ہے۔," });
            ur.Errors.Add(new string[] { "required", ":attribute فیلڈ درکار ہے۔," });
            ur.Errors.Add(new string[] { "same", ":attribute اور :other لازماً ایک دوسرے سے مماثل ہوں۔," });
            ur.Errors.Add(new string[] { "size_list", ":attribute میں لازماً :size آئٹمز شامل ہوں۔," });
            ur.Errors.Add(new string[] { "size_numeric", ":attribute لازماً :size ہوں۔," });
            ur.Errors.Add(new string[] { "size", ":attribute لازماً :size کریکٹرز پر مشتمل ہو۔," });
            ur.Errors.Add(new string[] { "starts_with", "اس :attribute کے ساتھ شروع ہونا چاہئے مندرجہ ذیل میں سے ایک: :values." });
            ur.Errors.Add(new string[] { "url", ":attribute فارمیٹ قابلِ قبول نہیں ہے۔," });
            ur.Errors.Add(new string[] { "uuid", "اس :attribute ہونا ضروری ہے ایک درست UUID." });
            this.Langs.Add(ur);
            var uz_Cyrl = new Lang();
            uz_Cyrl.Name = "uz_Cyrl";
            uz_Cyrl.Errors.Add(new string[] { "accepted", ":attribute ни қабул қилишингиз керак." });
            uz_Cyrl.Errors.Add(new string[] { "active_url", ":attribute га нотўғри URL киритилди." });
            uz_Cyrl.Errors.Add(new string[] { "after", ":attribute да сана :date дан кейин бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "after_or_equal", ":attribute да сана :date га тенг ёки ундан кейин бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "alpha", ":attribute фақат ҳарфларни қабул қилиши мумкин." });
            uz_Cyrl.Errors.Add(new string[] { "alpha_dash", ":attribute фақат ҳарфлар, сонлар ва чизиқчаларни қабул қилиши мумкин." });
            uz_Cyrl.Errors.Add(new string[] { "alpha_num", ":attribute фақат ҳарфлар ва сонларни қабул қилиши мумкин." });
            uz_Cyrl.Errors.Add(new string[] { "before", ":attribute да сана :date гача бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "before_or_equal", ":attribute да сана :date га тенг ёки ундан олдин бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "between_list", ":attribute даги элементлар сони :min ва :max орасида бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "between_numeric", ":attribute нинг қиймати :min ва :max орасида бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "between", ":attribute даги белгилар сони :min ва :max орасида бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "boolean", ":attribute майдони фақат мантиқий қийматни қабул қилади." });
            uz_Cyrl.Errors.Add(new string[] { "confirmed", ":attribute тасдиқлангани билан мос келмади." });
            uz_Cyrl.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            uz_Cyrl.Errors.Add(new string[] { "different", ":attribute ва :other майдонлари фарқли бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "email", ":attribute ҳақиқий электрон почта манзили бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "ends_with", ":attribute қуйидаги қийматларнинг бири билан тугаши керак: :values." });
            uz_Cyrl.Errors.Add(new string[] { "gt_list", ":attribute даги элементлар сони :value дан катта бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "gt_numeric", ":attribute майдони :value дан катта бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "gt", ":attribute даги белгилар сони :value дан катта бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "gte_list", ":attribute даги элементлар сони :value дан катта ёки тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "gte_numeric", ":attribute майдони :value дан катта ёки тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "gte", ":attribute даги белгилар сони :value дан катта ёки тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "in", ":attribute учун танланган қиймат хато." });
            uz_Cyrl.Errors.Add(new string[] { "integer", ":attribute бутун сон бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "ip", ":attribute ҳақиқий IP манзил бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "ipv4", ":attribute ҳақиқий IPv4 манзил бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "ipv6", ":attribute ҳақиқий IPv6 манзил бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "json", ":attribute JSON қатори бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "lt_list", ":attribute даги элементлар сони :value дан кичик бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "lt_numeric", ":attribute майдони :value дан кичик бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "lt", ":attribute даги белгилар сони :value дан кичик бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "lte_list", ":attribute даги элементлар сони :value дан кичик ёки тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "lte_numeric", ":attribute майдони :value дан кичик ёки тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "lte", ":attribute даги белгилар сони :value дан кичик ёки тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "max_list", ":attribute нинг элементлар сони :max тадан ошмаслиги керак." });
            uz_Cyrl.Errors.Add(new string[] { "max_numeric", ":attribute нинг қиймати :max дан ошмаслиги керак." });
            uz_Cyrl.Errors.Add(new string[] { "max", ":attribute нинг белгилар сони :max тадан ошмаслиги керак." });
            uz_Cyrl.Errors.Add(new string[] { "mimes", ":attribute даги файл қуйидаги турлардан бири бўлиши керак: :values." });
            uz_Cyrl.Errors.Add(new string[] { "min_list", ":attribute даги элементлар сони :min тадан кам бўлмаслиги керак." });
            uz_Cyrl.Errors.Add(new string[] { "min_numeric", ":attribute нинг қиймати :min дан кам бўлмаслиги керак." });
            uz_Cyrl.Errors.Add(new string[] { "min", ":attribute даги белгилар сони :min тадан кам бўлмаслиги керак." });
            uz_Cyrl.Errors.Add(new string[] { "not_in", ":attribute учун танланган қиймат хато." });
            uz_Cyrl.Errors.Add(new string[] { "not_regex", ":attribute учун танланган формат хато." });
            uz_Cyrl.Errors.Add(new string[] { "numeric", ":attribute майдони сон бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "password", "Нотўғри парол." });
            uz_Cyrl.Errors.Add(new string[] { "regex", ":attribute майдони хато форматда." });
            uz_Cyrl.Errors.Add(new string[] { "required", ":attribute майдони тўлдирилиши шарт." });
            uz_Cyrl.Errors.Add(new string[] { "same", ":attribute нинг қиймати :other билан бир хил бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "size_list", ":attribute даги элементлар сони :size га тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "size_numeric", ":attribute қиймати :size га тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "size", ":attribute даги белгилар сони :size га тенг бўлиши керак." });
            uz_Cyrl.Errors.Add(new string[] { "starts_with", ":attribute қуйидаги қийматлардан бири билан бошланиши керак: :values." });
            uz_Cyrl.Errors.Add(new string[] { "url", ":attribute нотўғри форматга эга." });
            uz_Cyrl.Errors.Add(new string[] { "uuid", ":attribute тўғри UUID қийматга эга бўлиши керак." });
            this.Langs.Add(uz_Cyrl);
            var uz_Latn = new Lang();
            uz_Latn.Name = "uz_Latn";
            uz_Latn.Errors.Add(new string[] { "accepted", ":attribute ni qabul qilishingiz kerak." });
            uz_Latn.Errors.Add(new string[] { "active_url", ":attribute ga noto‘g‘ri URL kiritildi." });
            uz_Latn.Errors.Add(new string[] { "after", ":attribute da sana :date dan keyin bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "after_or_equal", ":attribute da sana :date ga teng yoki undan keyin bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "alpha", ":attribute faqat harflarni qabul qilishi mumkin." });
            uz_Latn.Errors.Add(new string[] { "alpha_dash", ":attribute faqat harflar, sonlar va chiziqchalarni qabul qilishi mumkin." });
            uz_Latn.Errors.Add(new string[] { "alpha_num", ":attribute faqat harflar va sonlarni qabul qilishi mumkin." });
            uz_Latn.Errors.Add(new string[] { "before", ":attribute da sana :date gacha bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "before_or_equal", ":attribute da sana :date ga teng yoki undan oldin bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "between_list", ":attribute dagi elementlar soni :min va :max orasida bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "between_numeric", ":attribute ning qiymati :min va :max orasida bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "between", ":attribute dagi belgilar soni :min va :max orasida bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "boolean", ":attribute maydoni faqat mantiqiy qiymatni qabul qiladi." });
            uz_Latn.Errors.Add(new string[] { "confirmed", ":attribute tasdiqlangani bilan mos kelmadi." });
            uz_Latn.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            uz_Latn.Errors.Add(new string[] { "different", ":attribute va :other maydonlari farqli bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "email", ":attribute haqiqiy elektron pochta manzili bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "ends_with", ":attribute quyidagi qiymatlarning biri bilan tugashi kerak: :values." });
            uz_Latn.Errors.Add(new string[] { "gt_list", ":attribute dagi elementlar soni :value dan katta bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "gt_numeric", ":attribute maydoni :value dan katta bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "gt", ":attribute dagi belgilar soni :value dan katta bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "gte_list", ":attribute dagi elementlar soni :value dan katta yoki teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "gte_numeric", ":attribute maydoni :value dan katta yoki teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "gte", ":attribute dagi belgilar soni :value dan katta yoki teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "in", ":attribute uchun tanlangan qiymat xato." });
            uz_Latn.Errors.Add(new string[] { "integer", ":attribute butun son bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "ip", ":attribute haqiqiy IP manzil bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "ipv4", ":attribute haqiqiy IPv4 manzil bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "ipv6", ":attribute haqiqiy IPv6 manzil bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "json", ":attribute JSON qatori bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "lt_list", ":attribute dagi elementlar soni :value dan kichik bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "lt_numeric", ":attribute maydoni :value dan kichik bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "lt", ":attribute dagi belgilar soni :value dan kichik bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "lte_list", ":attribute dagi elementlar soni :value dan kichik yoki teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "lte_numeric", ":attribute maydoni :value dan kichik yoki teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "lte", ":attribute dagi belgilar soni :value dan kichik yoki teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "max_list", ":attribute ning elementlar soni :max tadan oshmasligi kerak." });
            uz_Latn.Errors.Add(new string[] { "max_numeric", ":attribute ning qiymati :max dan oshmasligi kerak." });
            uz_Latn.Errors.Add(new string[] { "max", ":attribute ning belgilar soni :max tadan oshmasligi kerak." });
            uz_Latn.Errors.Add(new string[] { "mimes", ":attribute dagi fayl quyidagi turlardan biri bo‘lishi kerak: :values." });
            uz_Latn.Errors.Add(new string[] { "min_list", ":attribute dagi elementlar soni :min tadan kam bo‘lmasligi kerak." });
            uz_Latn.Errors.Add(new string[] { "min_numeric", ":attribute ning qiymati :min dan kam bo‘lmasligi kerak." });
            uz_Latn.Errors.Add(new string[] { "min", ":attribute dagi belgilar soni :min tadan kam bo‘lmasligi kerak." });
            uz_Latn.Errors.Add(new string[] { "not_in", ":attribute uchun tanlangan qiymat xato." });
            uz_Latn.Errors.Add(new string[] { "not_regex", ":attribute uchun tanlangan format xato." });
            uz_Latn.Errors.Add(new string[] { "numeric", ":attribute son bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "password", "Noto‘g‘ri parol." });
            uz_Latn.Errors.Add(new string[] { "regex", ":attribute maydoni xato formatda." });
            uz_Latn.Errors.Add(new string[] { "required", ":attribute maydoni to‘ldirilishi shart." });
            uz_Latn.Errors.Add(new string[] { "same", ":attribute ning qiymati :other bilan bir xil bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "size_list", ":attribute dagi elementlar soni :size ga teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "size_numeric", ":attribute qiymati :size ga teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "size", ":attribute dagi belgilar soni :size ga teng bo‘lishi kerak." });
            uz_Latn.Errors.Add(new string[] { "starts_with", ":attribute quyidagi qiymatlardan biri bilan boshlanishi kerak: :values." });
            uz_Latn.Errors.Add(new string[] { "url", ":attribute noto‘g‘ri formatga ega." });
            uz_Latn.Errors.Add(new string[] { "uuid", ":attribute to‘g‘ri UUID qiymatga ega bo‘lishi kerak." });
            this.Langs.Add(uz_Latn);
            var vi = new Lang();
            vi.Name = "vi";
            vi.Errors.Add(new string[] { "accepted", "Trường :attribute phải được chấp nhận." });
            vi.Errors.Add(new string[] { "active_url", "Trường :attribute không phải là một URL hợp lệ." });
            vi.Errors.Add(new string[] { "after", "Trường :attribute phải là một ngày sau ngày :date." });
            vi.Errors.Add(new string[] { "after_or_equal", "Trường :attribute phải là thời gian bắt đầu sau hoặc đúng bằng :date." });
            vi.Errors.Add(new string[] { "alpha", "Trường :attribute chỉ có thể chứa các chữ cái." });
            vi.Errors.Add(new string[] { "alpha_dash", "Trường :attribute chỉ có thể chứa chữ cái, số và dấu gạch ngang." });
            vi.Errors.Add(new string[] { "alpha_num", "Trường :attribute chỉ có thể chứa chữ cái và số." });
            vi.Errors.Add(new string[] { "before", "Trường :attribute phải là một ngày trước ngày :date." });
            vi.Errors.Add(new string[] { "before_or_equal", "Trường :attribute phải là thời gian bắt đầu trước hoặc đúng bằng :date." });
            vi.Errors.Add(new string[] { "between_list", "Trường :attribute phải có từ :min - :max phần tử." });
            vi.Errors.Add(new string[] { "between_numeric", "Trường :attribute phải nằm trong khoảng :min - :max." });
            vi.Errors.Add(new string[] { "between", "Trường :attribute phải từ :min - :max kí tự." });
            vi.Errors.Add(new string[] { "boolean", "Trường :attribute phải là true hoặc false." });
            vi.Errors.Add(new string[] { "confirmed", "Giá trị xác nhận trong trường :attribute không khớp." });
            vi.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            vi.Errors.Add(new string[] { "different", "Trường :attribute và :other phải khác nhau." });
            vi.Errors.Add(new string[] { "email", "Trường :attribute phải là một địa chỉ email hợp lệ." });
            vi.Errors.Add(new string[] { "ends_with", "Trường :attribute phải kết thúc bằng một trong những giá trị sau: :values," });
            vi.Errors.Add(new string[] { "gt_list", "Mảng :attribute phải có nhiều hơn :value phần tử." });
            vi.Errors.Add(new string[] { "gt_numeric", "Giá trị trường :attribute phải lớn hơn :value." });
            vi.Errors.Add(new string[] { "gt", "Độ dài trường :attribute phải nhiều hơn :value kí tự." });
            vi.Errors.Add(new string[] { "gte_list", "Mảng :attribute phải có ít nhất :value phần tử." });
            vi.Errors.Add(new string[] { "gte_numeric", "Giá trị trường :attribute phải lớn hơn hoặc bằng :value." });
            vi.Errors.Add(new string[] { "gte", "Độ dài trường :attribute phải lớn hơn hoặc bằng :value kí tự." });
            vi.Errors.Add(new string[] { "in", "Giá trị đã chọn trong trường :attribute không hợp lệ." });
            vi.Errors.Add(new string[] { "integer", "Trường :attribute phải là một số nguyên." });
            vi.Errors.Add(new string[] { "ip", "Trường :attribute phải là một địa chỉ IP." });
            vi.Errors.Add(new string[] { "ipv4", "Trường :attribute phải là một địa chỉ IPv4." });
            vi.Errors.Add(new string[] { "ipv6", "Trường :attribute phải là một địa chỉ IPv6." });
            vi.Errors.Add(new string[] { "json", "Trường :attribute phải là một chuỗi JSON." });
            vi.Errors.Add(new string[] { "lt_list", "Mảng :attribute phải có ít hơn :value phần tử." });
            vi.Errors.Add(new string[] { "lt_numeric", "Giá trị trường :attribute phải nhỏ hơn :value." });
            vi.Errors.Add(new string[] { "lt", "Độ dài trường :attribute phải nhỏ hơn :value kí tự." });
            vi.Errors.Add(new string[] { "lte_list", "Mảng :attribute không được có nhiều hơn :value phần tử." });
            vi.Errors.Add(new string[] { "lte_numeric", "Giá trị trường :attribute phải nhỏ hơn hoặc bằng :value." });
            vi.Errors.Add(new string[] { "lte", "Độ dài trường :attribute phải nhỏ hơn hoặc bằng :value kí tự." });
            vi.Errors.Add(new string[] { "max_list", "Trường :attribute không được lớn hơn :max phần tử." });
            vi.Errors.Add(new string[] { "max_numeric", "Trường :attribute không được lớn hơn :max." });
            vi.Errors.Add(new string[] { "max", "Trường :attribute không được lớn hơn :max kí tự." });
            vi.Errors.Add(new string[] { "mimes", "Trường :attribute phải là một tập tin có định dạng: :values." });
            vi.Errors.Add(new string[] { "min_list", "Trường :attribute phải có tối thiểu :min phần tử." });
            vi.Errors.Add(new string[] { "min_numeric", "Trường :attribute phải tối thiểu là :min." });
            vi.Errors.Add(new string[] { "min", "Trường :attribute phải có tối thiểu :min kí tự." });
            vi.Errors.Add(new string[] { "not_in", "Giá trị đã chọn trong trường :attribute không hợp lệ." });
            vi.Errors.Add(new string[] { "not_regex", "Trường :attribute có định dạng không hợp lệ." });
            vi.Errors.Add(new string[] { "numeric", "Trường :attribute phải là một số." });
            vi.Errors.Add(new string[] { "password", "Mật khẩu không đúng." });
            vi.Errors.Add(new string[] { "regex", "Trường :attribute có định dạng không hợp lệ." });
            vi.Errors.Add(new string[] { "required", "Trường :attribute không được bỏ trống." });
            vi.Errors.Add(new string[] { "same", "Trường :attribute và :other phải giống nhau." });
            vi.Errors.Add(new string[] { "size_list", "Trường :attribute phải chứa :size phần tử." });
            vi.Errors.Add(new string[] { "size_numeric", "Trường :attribute phải bằng :size." });
            vi.Errors.Add(new string[] { "size", "Trường :attribute phải chứa :size kí tự." });
            vi.Errors.Add(new string[] { "starts_with", "Trường :attribute phải được bắt đầu bằng một trong những giá trị sau: :values," });
            vi.Errors.Add(new string[] { "url", "Trường :attribute không giống với định dạng một URL." });
            vi.Errors.Add(new string[] { "uuid", "Trường :attribute phải là một chuỗi UUID hợp lệ." });
            this.Langs.Add(vi);
            var zh_CN = new Lang();
            zh_CN.Name = "zh_CN";
            zh_CN.Errors.Add(new string[] { "accepted", "您必须接受 :attribute。," });
            zh_CN.Errors.Add(new string[] { "active_url", ":attribute 不是一个有效的网址。," });
            zh_CN.Errors.Add(new string[] { "after", ":attribute 必须要晚于 :date。," });
            zh_CN.Errors.Add(new string[] { "after_or_equal", ":attribute 必须要等于 :date 或更晚。," });
            zh_CN.Errors.Add(new string[] { "alpha", ":attribute 只能由字母组成。," });
            zh_CN.Errors.Add(new string[] { "alpha_dash", ":attribute 只能由字母、数字、短划线(-)和下划线(_)组成。," });
            zh_CN.Errors.Add(new string[] { "alpha_num", ":attribute 只能由字母和数字组成。," });
            zh_CN.Errors.Add(new string[] { "before", ":attribute 必须要早于 :date。," });
            zh_CN.Errors.Add(new string[] { "before_or_equal", ":attribute 必须要等于 :date 或更早。," });
            zh_CN.Errors.Add(new string[] { "between_list", ":attribute 必须只有 :min - :max 个单元。," });
            zh_CN.Errors.Add(new string[] { "between_numeric", ":attribute 必须介于 :min - :max 之间。," });
            zh_CN.Errors.Add(new string[] { "between", ":attribute 必须介于 :min - :max 个字符之间。," });
            zh_CN.Errors.Add(new string[] { "boolean", ":attribute 必须为布尔值。," });
            zh_CN.Errors.Add(new string[] { "confirmed", ":attribute 两次输入不一致。," });
            zh_CN.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            zh_CN.Errors.Add(new string[] { "different", ":attribute 和 :other 必须不同。," });
            zh_CN.Errors.Add(new string[] { "email", ":attribute 不是一个合法的邮箱。," });
            zh_CN.Errors.Add(new string[] { "ends_with", ":attribute 必须以 :values 为结尾。," });
            zh_CN.Errors.Add(new string[] { "gt_list", ":attribute 必须多于 :value 个元素。," });
            zh_CN.Errors.Add(new string[] { "gt_numeric", ":attribute 必须大于 :value。," });
            zh_CN.Errors.Add(new string[] { "gt", ":attribute 必须多于 :value 个字符。," });
            zh_CN.Errors.Add(new string[] { "gte_list", ":attribute 必须多于或等于 :value 个元素。," });
            zh_CN.Errors.Add(new string[] { "gte_numeric", ":attribute 必须大于或等于 :value。," });
            zh_CN.Errors.Add(new string[] { "gte", ":attribute 必须多于或等于 :value 个字符。," });
            zh_CN.Errors.Add(new string[] { "in", "已选的属性 :attribute 无效。," });
            zh_CN.Errors.Add(new string[] { "integer", ":attribute 必须是整数。," });
            zh_CN.Errors.Add(new string[] { "ip", ":attribute 必须是有效的 IP 地址。," });
            zh_CN.Errors.Add(new string[] { "ipv4", ":attribute 必须是有效的 IPv4 地址。," });
            zh_CN.Errors.Add(new string[] { "ipv6", ":attribute 必须是有效的 IPv6 地址。," });
            zh_CN.Errors.Add(new string[] { "json", ":attribute 必须是正确的 JSON 格式。," });
            zh_CN.Errors.Add(new string[] { "lt_list", ":attribute 必须少于 :value 个元素。," });
            zh_CN.Errors.Add(new string[] { "lt_numeric", ":attribute 必须小于 :value。," });
            zh_CN.Errors.Add(new string[] { "lt", ":attribute 必须少于 :value 个字符。," });
            zh_CN.Errors.Add(new string[] { "lte_list", ":attribute 必须少于或等于 :value 个元素。," });
            zh_CN.Errors.Add(new string[] { "lte_numeric", ":attribute 必须小于或等于 :value。," });
            zh_CN.Errors.Add(new string[] { "lte", ":attribute 必须少于或等于 :value 个字符。," });
            zh_CN.Errors.Add(new string[] { "max_list", ":attribute 最多只有 :max 个单元。," });
            zh_CN.Errors.Add(new string[] { "max_numeric", ":attribute 不能大于 :max。," });
            zh_CN.Errors.Add(new string[] { "max", ":attribute 不能大于 :max 个字符。," });
            zh_CN.Errors.Add(new string[] { "mimes", ":attribute 必须是一个 :values 类型的文件。," });
            zh_CN.Errors.Add(new string[] { "min_list", ":attribute 至少有 :min 个单元。," });
            zh_CN.Errors.Add(new string[] { "min_numeric", ":attribute 必须大于等于 :min。," });
            zh_CN.Errors.Add(new string[] { "min", ":attribute 至少为 :min 个字符。," });
            zh_CN.Errors.Add(new string[] { "not_in", "已选的属性 :attribute 非法。," });
            zh_CN.Errors.Add(new string[] { "not_regex", ":attribute 的格式错误。," });
            zh_CN.Errors.Add(new string[] { "numeric", ":attribute 必须是一个数字。," });
            zh_CN.Errors.Add(new string[] { "password", "密码错误," });
            zh_CN.Errors.Add(new string[] { "regex", ":attribute 格式不正确。," });
            zh_CN.Errors.Add(new string[] { "required", ":attribute 不能为空。," });
            zh_CN.Errors.Add(new string[] { "same", ":attribute 和 :other 必须相同。," });
            zh_CN.Errors.Add(new string[] { "size_list", ":attribute 必须为 :size 个单元。," });
            zh_CN.Errors.Add(new string[] { "size_numeric", ":attribute 大小必须为 :size。," });
            zh_CN.Errors.Add(new string[] { "size", ":attribute 必须是 :size 个字符。," });
            zh_CN.Errors.Add(new string[] { "starts_with", ":attribute 必须以 :values 为开头。," });
            zh_CN.Errors.Add(new string[] { "url", ":attribute 格式不正确。," });
            zh_CN.Errors.Add(new string[] { "uuid", ":attribute 必须是有效的 UUID。," });
            this.Langs.Add(zh_CN);
            var zh_HK = new Lang();
            zh_HK.Name = "zh_HK";
            zh_HK.Errors.Add(new string[] { "accepted", "必須接受 :attribute。," });
            zh_HK.Errors.Add(new string[] { "active_url", ":attribute 並非一個有效的網址。," });
            zh_HK.Errors.Add(new string[] { "after", ":attribute 必須要晚於 :date。," });
            zh_HK.Errors.Add(new string[] { "after_or_equal", ":attribute 必須要等於 :date 或更晚。," });
            zh_HK.Errors.Add(new string[] { "alpha", ":attribute 只能以字母組成。," });
            zh_HK.Errors.Add(new string[] { "alpha_dash", ":attribute 只能以字母、數字、連接線(-)及底線(_)組成。," });
            zh_HK.Errors.Add(new string[] { "alpha_num", ":attribute 只能以字母及數字組成。," });
            zh_HK.Errors.Add(new string[] { "before", ":attribute 必須要早於 :date。," });
            zh_HK.Errors.Add(new string[] { "before_or_equal", ":attribute 必須要等於 :date 或更早。," });
            zh_HK.Errors.Add(new string[] { "between_list", ":attribute: 必須有 :min 至 :max 個項目。," });
            zh_HK.Errors.Add(new string[] { "between_numeric", ":attribute 必須介乎 :min 至 :max 之間。," });
            zh_HK.Errors.Add(new string[] { "between", ":attribute 必須介乎 :min 至 :max 個字符之間。," });
            zh_HK.Errors.Add(new string[] { "boolean", ":attribute 必須是布爾值。," });
            zh_HK.Errors.Add(new string[] { "confirmed", ":attribute 確認欄位的輸入並不相符。," });
            zh_HK.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            zh_HK.Errors.Add(new string[] { "different", ":attribute 與 :other 必須不同。," });
            zh_HK.Errors.Add(new string[] { "email", ":attribute 必須是有效的電郵地址。," });
            zh_HK.Errors.Add(new string[] { "ends_with", ":attribute 結尾必須包含下列之一：:values。," });
            zh_HK.Errors.Add(new string[] { "gt_list", ":attribute 必須多於 :value 個項目。," });
            zh_HK.Errors.Add(new string[] { "gt_numeric", ":attribute 必須大於 :value。," });
            zh_HK.Errors.Add(new string[] { "gt", ":attribute 必須多於 :value 個字符。," });
            zh_HK.Errors.Add(new string[] { "gte_list", ":attribute 必須多於或等於 :value 個項目。," });
            zh_HK.Errors.Add(new string[] { "gte_numeric", ":attribute 必須大於或等於 :value。," });
            zh_HK.Errors.Add(new string[] { "gte", ":attribute 必須多於或等於 :value 個字符。," });
            zh_HK.Errors.Add(new string[] { "in", "所揀選的 :attribute 選項無效。," });
            zh_HK.Errors.Add(new string[] { "integer", ":attribute 必須是一個整數。," });
            zh_HK.Errors.Add(new string[] { "ip", ":attribute 必須是一個有效的 IP 地址。," });
            zh_HK.Errors.Add(new string[] { "ipv4", ":attribute 必須是一個有效的 IPv4 地址。," });
            zh_HK.Errors.Add(new string[] { "ipv6", ":attribute 必須是一個有效的 IPv6 地址。," });
            zh_HK.Errors.Add(new string[] { "json", ":attribute 必須是正確的 JSON 格式。," });
            zh_HK.Errors.Add(new string[] { "lt_list", ":attribute 必須少於 :value 個項目。," });
            zh_HK.Errors.Add(new string[] { "lt_numeric", ":attribute 必須小於 :value。," });
            zh_HK.Errors.Add(new string[] { "lt", ":attribute 必須少於 :value 個字符。," });
            zh_HK.Errors.Add(new string[] { "lte_list", ":attribute 必須少於或等於 :value 個項目。," });
            zh_HK.Errors.Add(new string[] { "lte_numeric", ":attribute 必須小於或等於 :value。," });
            zh_HK.Errors.Add(new string[] { "lte", ":attribute 必須少於或等於 :value 個字符。," });
            zh_HK.Errors.Add(new string[] { "max_list", ":attribute 不能多於 :max 個項目。," });
            zh_HK.Errors.Add(new string[] { "max_numeric", ":attribute 不能大於 :max。," });
            zh_HK.Errors.Add(new string[] { "max", ":attribute 不能多於 :max 個字符。," });
            zh_HK.Errors.Add(new string[] { "mimes", ":attribute 必須為 :values 的檔案。," });
            zh_HK.Errors.Add(new string[] { "min_list", ":attribute 不能小於 :min 個項目。," });
            zh_HK.Errors.Add(new string[] { "min_numeric", ":attribute 不能小於 :min。," });
            zh_HK.Errors.Add(new string[] { "min", ":attribute 不能小於 :min 個字符。," });
            zh_HK.Errors.Add(new string[] { "not_in", "所揀選的 :attribute 選項無效。," });
            zh_HK.Errors.Add(new string[] { "not_regex", ":attribute 的格式錯誤。," });
            zh_HK.Errors.Add(new string[] { "numeric", ":attribute 必須為一個數字。," });
            zh_HK.Errors.Add(new string[] { "password", "密碼錯誤。," });
            zh_HK.Errors.Add(new string[] { "regex", ":attribute 的格式錯誤。," });
            zh_HK.Errors.Add(new string[] { "required", ":attribute 不能留空。," });
            zh_HK.Errors.Add(new string[] { "same", ":attribute 與 :other 必須相同。," });
            zh_HK.Errors.Add(new string[] { "size_list", ":attribute 必須是 :size 個單元。," });
            zh_HK.Errors.Add(new string[] { "size_numeric", ":attribute 的大小必須是 :size。," });
            zh_HK.Errors.Add(new string[] { "size", ":attribute 必須是 :size 個字符。," });
            zh_HK.Errors.Add(new string[] { "starts_with", ":attribute 開頭必須包含下列之一：:values。," });
            zh_HK.Errors.Add(new string[] { "url", ":attribute 的格式錯誤。," });
            zh_HK.Errors.Add(new string[] { "uuid", ":attribute 必須是有效的 UUID。," });
            this.Langs.Add(zh_HK);
            var zh_TW = new Lang();
            zh_TW.Name = "zh_TW";
            zh_TW.Errors.Add(new string[] { "accepted", "必須接受 :attribute。," });
            zh_TW.Errors.Add(new string[] { "active_url", ":attribute 不是有效的網址。," });
            zh_TW.Errors.Add(new string[] { "after", ":attribute 必須要晚於 :date。," });
            zh_TW.Errors.Add(new string[] { "after_or_equal", ":attribute 必須要等於 :date 或更晚。," });
            zh_TW.Errors.Add(new string[] { "alpha", ":attribute 只能以字母組成。," });
            zh_TW.Errors.Add(new string[] { "alpha_dash", ":attribute 只能以字母、數字、連接線(-)及底線(_)組成。," });
            zh_TW.Errors.Add(new string[] { "alpha_num", ":attribute 只能以字母及數字組成。," });
            zh_TW.Errors.Add(new string[] { "before", ":attribute 必須要早於 :date。," });
            zh_TW.Errors.Add(new string[] { "before_or_equal", ":attribute 必須要等於 :date 或更早。," });
            zh_TW.Errors.Add(new string[] { "between_list", ":attribute: 必須有 :min - :max 個元素。," });
            zh_TW.Errors.Add(new string[] { "between_numeric", ":attribute 必須介於 :min 至 :max 之間。," });
            zh_TW.Errors.Add(new string[] { "between", ":attribute 必須介於 :min 至 :max 個字元之間。," });
            zh_TW.Errors.Add(new string[] { "boolean", ":attribute 必須為布林值。," });
            zh_TW.Errors.Add(new string[] { "confirmed", ":attribute 確認欄位的輸入不一致。," });
            zh_TW.Errors.Add(new string[] { "declined", "The :attribute must be declined." });
            zh_TW.Errors.Add(new string[] { "different", ":attribute 與 :other 必須不同。," });
            zh_TW.Errors.Add(new string[] { "email", ":attribute 必須是有效的 E-mail。," });
            zh_TW.Errors.Add(new string[] { "ends_with", ":attribute 結尾必須包含下列之一：:values。," });
            zh_TW.Errors.Add(new string[] { "gt_list", ":attribute 必須多於 :value 個元素。," });
            zh_TW.Errors.Add(new string[] { "gt_numeric", ":attribute 必須大於 :value。," });
            zh_TW.Errors.Add(new string[] { "gt", ":attribute 必須多於 :value 個字元。," });
            zh_TW.Errors.Add(new string[] { "gte_list", ":attribute 必須多於或等於 :value 個元素。," });
            zh_TW.Errors.Add(new string[] { "gte_numeric", ":attribute 必須大於或等於 :value。," });
            zh_TW.Errors.Add(new string[] { "gte", ":attribute 必須多於或等於 :value 個字元。," });
            zh_TW.Errors.Add(new string[] { "in", "所選擇的 :attribute 選項無效。," });
            zh_TW.Errors.Add(new string[] { "integer", ":attribute 必須是一個整數。," });
            zh_TW.Errors.Add(new string[] { "ip", ":attribute 必須是一個有效的 IP 位址。," });
            zh_TW.Errors.Add(new string[] { "ipv4", ":attribute 必須是一個有效的 IPv4 位址。," });
            zh_TW.Errors.Add(new string[] { "ipv6", ":attribute 必須是一個有效的 IPv6 位址。," });
            zh_TW.Errors.Add(new string[] { "json", ":attribute 必須是正確的 JSON 字串。," });
            zh_TW.Errors.Add(new string[] { "lt_list", ":attribute 必須少於 :value 個元素。," });
            zh_TW.Errors.Add(new string[] { "lt_numeric", ":attribute 必須小於 :value。," });
            zh_TW.Errors.Add(new string[] { "lt", ":attribute 必須少於 :value 個字元。," });
            zh_TW.Errors.Add(new string[] { "lte_list", ":attribute 必須少於或等於 :value 個元素。," });
            zh_TW.Errors.Add(new string[] { "lte_numeric", ":attribute 必須小於或等於 :value。," });
            zh_TW.Errors.Add(new string[] { "lte", ":attribute 必須少於或等於 :value 個字元。," });
            zh_TW.Errors.Add(new string[] { "max_list", ":attribute 最多有 :max 個元素。," });
            zh_TW.Errors.Add(new string[] { "max_numeric", ":attribute 不能大於 :max。," });
            zh_TW.Errors.Add(new string[] { "max", ":attribute 不能多於 :max 個字元。," });
            zh_TW.Errors.Add(new string[] { "mimes", ":attribute 必須為 :values 的檔案。," });
            zh_TW.Errors.Add(new string[] { "min_list", ":attribute 至少有 :min 個元素。," });
            zh_TW.Errors.Add(new string[] { "min_numeric", ":attribute 不能小於 :min。," });
            zh_TW.Errors.Add(new string[] { "min", ":attribute 不能小於 :min 個字元。," });
            zh_TW.Errors.Add(new string[] { "not_in", "所選擇的 :attribute 選項無效。," });
            zh_TW.Errors.Add(new string[] { "not_regex", ":attribute 的格式錯誤。," });
            zh_TW.Errors.Add(new string[] { "numeric", ":attribute 必須為一個數字。," });
            zh_TW.Errors.Add(new string[] { "password", "密碼錯誤," });
            zh_TW.Errors.Add(new string[] { "regex", ":attribute 的格式錯誤。," });
            zh_TW.Errors.Add(new string[] { "required", ":attribute 不能留空。," });
            zh_TW.Errors.Add(new string[] { "same", ":attribute 與 :other 必須相同。," });
            zh_TW.Errors.Add(new string[] { "size_list", ":attribute 必須是 :size 個元素。," });
            zh_TW.Errors.Add(new string[] { "size_numeric", ":attribute 的大小必須是 :size。," });
            zh_TW.Errors.Add(new string[] { "size", ":attribute 必須是 :size 個字元。," });
            zh_TW.Errors.Add(new string[] { "starts_with", ":attribute 開頭必須包含下列之一：:values。," });
            zh_TW.Errors.Add(new string[] { "url", ":attribute 的格式錯誤。," });
            zh_TW.Errors.Add(new string[] { "uuid", ":attribute 必須是有效的 UUID。," });
            this.Langs.Add(zh_TW);
        }

        /// <summary>
        /// Obtiene los datos del lenguaje especificado
        /// </summary>
        /// <param name="name">
        /// Abreviatura del lenguaje
        /// </param>
        /// <returns>
        /// Mensajes de error del del lenguaje especificado.
        /// </returns>
        public Lang Lang(String name)
        {
            var lang = this.Langs.Where(l => l.Name == name).First();

            return lang;
        }

    }

    /// <summary>
    /// Lenguaje y lista de mensajes de error
    /// </summary>
    internal class Lang
    {

        public Lang()
        {
            this.Errors = new List<string[]>();
        }
        /// <summary>
        /// Abreviatura del lenguaje
        /// </summary>
        public String Name { get; set; }

        /// <summary>
        /// Lista de errores
        /// </summary>
        public List<String[]> Errors { get; set; }

        /// <summary>
        /// Obtiene el mensaje correspondiente al error enviado como parametro
        /// </summary>
        /// <param name="error">
        /// Error en la validación
        /// </param>
        /// <returns>
        /// Mensaje de error para el usuario
        /// </returns>
        public String Message(String error)
        {
            String message = this.Errors.Where(e => e[0] == error).First()[1];

            return message;
        }
    }
}
